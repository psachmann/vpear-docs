### YamlMime:XRefMap
sorted: true
references:
- uid: VPEAR.Core
  name: VPEAR.Core
  href: api/VPEAR.Core.html
  commentId: N:VPEAR.Core
  fullName: VPEAR.Core
  nameWithType: VPEAR.Core
- uid: VPEAR.Core.Abstractions
  name: VPEAR.Core.Abstractions
  href: api/VPEAR.Core.Abstractions.html
  commentId: N:VPEAR.Core.Abstractions
  fullName: VPEAR.Core.Abstractions
  nameWithType: VPEAR.Core.Abstractions
- uid: VPEAR.Core.Abstractions.AbstractEntity`1
  name: AbstractEntity<TKey>
  href: api/VPEAR.Core.Abstractions.AbstractEntity-1.html
  commentId: T:VPEAR.Core.Abstractions.AbstractEntity`1
  name.vb: AbstractEntity(Of TKey)
  fullName: VPEAR.Core.Abstractions.AbstractEntity<TKey>
  fullName.vb: VPEAR.Core.Abstractions.AbstractEntity(Of TKey)
  nameWithType: AbstractEntity<TKey>
  nameWithType.vb: AbstractEntity(Of TKey)
- uid: VPEAR.Core.Abstractions.AbstractEntity`1.CreatedAt
  name: CreatedAt
  href: api/VPEAR.Core.Abstractions.AbstractEntity-1.html#VPEAR_Core_Abstractions_AbstractEntity_1_CreatedAt
  commentId: P:VPEAR.Core.Abstractions.AbstractEntity`1.CreatedAt
  fullName: VPEAR.Core.Abstractions.AbstractEntity<TKey>.CreatedAt
  fullName.vb: VPEAR.Core.Abstractions.AbstractEntity(Of TKey).CreatedAt
  nameWithType: AbstractEntity<TKey>.CreatedAt
  nameWithType.vb: AbstractEntity(Of TKey).CreatedAt
- uid: VPEAR.Core.Abstractions.AbstractEntity`1.CreatedAt*
  name: CreatedAt
  href: api/VPEAR.Core.Abstractions.AbstractEntity-1.html#VPEAR_Core_Abstractions_AbstractEntity_1_CreatedAt_
  commentId: Overload:VPEAR.Core.Abstractions.AbstractEntity`1.CreatedAt
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.AbstractEntity<TKey>.CreatedAt
  fullName.vb: VPEAR.Core.Abstractions.AbstractEntity(Of TKey).CreatedAt
  nameWithType: AbstractEntity<TKey>.CreatedAt
  nameWithType.vb: AbstractEntity(Of TKey).CreatedAt
- uid: VPEAR.Core.Abstractions.AbstractEntity`1.Events
  name: Events
  href: api/VPEAR.Core.Abstractions.AbstractEntity-1.html#VPEAR_Core_Abstractions_AbstractEntity_1_Events
  commentId: P:VPEAR.Core.Abstractions.AbstractEntity`1.Events
  fullName: VPEAR.Core.Abstractions.AbstractEntity<TKey>.Events
  fullName.vb: VPEAR.Core.Abstractions.AbstractEntity(Of TKey).Events
  nameWithType: AbstractEntity<TKey>.Events
  nameWithType.vb: AbstractEntity(Of TKey).Events
- uid: VPEAR.Core.Abstractions.AbstractEntity`1.Events*
  name: Events
  href: api/VPEAR.Core.Abstractions.AbstractEntity-1.html#VPEAR_Core_Abstractions_AbstractEntity_1_Events_
  commentId: Overload:VPEAR.Core.Abstractions.AbstractEntity`1.Events
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.AbstractEntity<TKey>.Events
  fullName.vb: VPEAR.Core.Abstractions.AbstractEntity(Of TKey).Events
  nameWithType: AbstractEntity<TKey>.Events
  nameWithType.vb: AbstractEntity(Of TKey).Events
- uid: VPEAR.Core.Abstractions.AbstractEntity`1.Id
  name: Id
  href: api/VPEAR.Core.Abstractions.AbstractEntity-1.html#VPEAR_Core_Abstractions_AbstractEntity_1_Id
  commentId: P:VPEAR.Core.Abstractions.AbstractEntity`1.Id
  fullName: VPEAR.Core.Abstractions.AbstractEntity<TKey>.Id
  fullName.vb: VPEAR.Core.Abstractions.AbstractEntity(Of TKey).Id
  nameWithType: AbstractEntity<TKey>.Id
  nameWithType.vb: AbstractEntity(Of TKey).Id
- uid: VPEAR.Core.Abstractions.AbstractEntity`1.Id*
  name: Id
  href: api/VPEAR.Core.Abstractions.AbstractEntity-1.html#VPEAR_Core_Abstractions_AbstractEntity_1_Id_
  commentId: Overload:VPEAR.Core.Abstractions.AbstractEntity`1.Id
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.AbstractEntity<TKey>.Id
  fullName.vb: VPEAR.Core.Abstractions.AbstractEntity(Of TKey).Id
  nameWithType: AbstractEntity<TKey>.Id
  nameWithType.vb: AbstractEntity(Of TKey).Id
- uid: VPEAR.Core.Abstractions.AbstractEntity`1.ModifiedAt
  name: ModifiedAt
  href: api/VPEAR.Core.Abstractions.AbstractEntity-1.html#VPEAR_Core_Abstractions_AbstractEntity_1_ModifiedAt
  commentId: P:VPEAR.Core.Abstractions.AbstractEntity`1.ModifiedAt
  fullName: VPEAR.Core.Abstractions.AbstractEntity<TKey>.ModifiedAt
  fullName.vb: VPEAR.Core.Abstractions.AbstractEntity(Of TKey).ModifiedAt
  nameWithType: AbstractEntity<TKey>.ModifiedAt
  nameWithType.vb: AbstractEntity(Of TKey).ModifiedAt
- uid: VPEAR.Core.Abstractions.AbstractEntity`1.ModifiedAt*
  name: ModifiedAt
  href: api/VPEAR.Core.Abstractions.AbstractEntity-1.html#VPEAR_Core_Abstractions_AbstractEntity_1_ModifiedAt_
  commentId: Overload:VPEAR.Core.Abstractions.AbstractEntity`1.ModifiedAt
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.AbstractEntity<TKey>.ModifiedAt
  fullName.vb: VPEAR.Core.Abstractions.AbstractEntity(Of TKey).ModifiedAt
  nameWithType: AbstractEntity<TKey>.ModifiedAt
  nameWithType.vb: AbstractEntity(Of TKey).ModifiedAt
- uid: VPEAR.Core.Abstractions.AbstractEvent
  name: AbstractEvent
  href: api/VPEAR.Core.Abstractions.AbstractEvent.html
  commentId: T:VPEAR.Core.Abstractions.AbstractEvent
  fullName: VPEAR.Core.Abstractions.AbstractEvent
  nameWithType: AbstractEvent
- uid: VPEAR.Core.Abstractions.IDeviceClient
  name: IDeviceClient
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html
  commentId: T:VPEAR.Core.Abstractions.IDeviceClient
  fullName: VPEAR.Core.Abstractions.IDeviceClient
  nameWithType: IDeviceClient
- uid: VPEAR.Core.Abstractions.IDeviceClient.CanConnectAsync
  name: CanConnectAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_CanConnectAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.CanConnectAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.CanConnectAsync()
  nameWithType: IDeviceClient.CanConnectAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.CanConnectAsync*
  name: CanConnectAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_CanConnectAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.CanConnectAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.CanConnectAsync
  nameWithType: IDeviceClient.CanConnectAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.Error
  name: Error
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_Error
  commentId: P:VPEAR.Core.Abstractions.IDeviceClient.Error
  fullName: VPEAR.Core.Abstractions.IDeviceClient.Error
  nameWithType: IDeviceClient.Error
- uid: VPEAR.Core.Abstractions.IDeviceClient.Error*
  name: Error
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_Error_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.Error
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.Error
  nameWithType: IDeviceClient.Error
- uid: VPEAR.Core.Abstractions.IDeviceClient.ErrorMessage
  name: ErrorMessage
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_ErrorMessage
  commentId: P:VPEAR.Core.Abstractions.IDeviceClient.ErrorMessage
  fullName: VPEAR.Core.Abstractions.IDeviceClient.ErrorMessage
  nameWithType: IDeviceClient.ErrorMessage
- uid: VPEAR.Core.Abstractions.IDeviceClient.ErrorMessage*
  name: ErrorMessage
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_ErrorMessage_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.ErrorMessage
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.ErrorMessage
  nameWithType: IDeviceClient.ErrorMessage
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetAsync
  name: GetAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetAsync()
  nameWithType: IDeviceClient.GetAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetAsync
  nameWithType: IDeviceClient.GetAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetDeviceAsync
  name: GetDeviceAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetDeviceAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetDeviceAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetDeviceAsync()
  nameWithType: IDeviceClient.GetDeviceAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetDeviceAsync*
  name: GetDeviceAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetDeviceAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetDeviceAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetDeviceAsync
  nameWithType: IDeviceClient.GetDeviceAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFiltersAsync
  name: GetFiltersAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFiltersAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetFiltersAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFiltersAsync()
  nameWithType: IDeviceClient.GetFiltersAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFiltersAsync*
  name: GetFiltersAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFiltersAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetFiltersAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFiltersAsync
  nameWithType: IDeviceClient.GetFiltersAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFirmwareAsync
  name: GetFirmwareAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFirmwareAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetFirmwareAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFirmwareAsync()
  nameWithType: IDeviceClient.GetFirmwareAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFirmwareAsync*
  name: GetFirmwareAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFirmwareAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetFirmwareAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFirmwareAsync
  nameWithType: IDeviceClient.GetFirmwareAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFramesAsync(System.Nullable{System.Int32})
  name: GetFramesAsync(Nullable<Int32>)
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFramesAsync_System_Nullable_System_Int32__
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetFramesAsync(System.Nullable{System.Int32})
  name.vb: GetFramesAsync(Nullable(Of Int32))
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFramesAsync(System.Nullable<System.Int32>)
  fullName.vb: VPEAR.Core.Abstractions.IDeviceClient.GetFramesAsync(System.Nullable(Of System.Int32))
  nameWithType: IDeviceClient.GetFramesAsync(Nullable<Int32>)
  nameWithType.vb: IDeviceClient.GetFramesAsync(Nullable(Of Int32))
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFramesAsync*
  name: GetFramesAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFramesAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetFramesAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFramesAsync
  nameWithType: IDeviceClient.GetFramesAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFrequencyAsync
  name: GetFrequencyAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFrequencyAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetFrequencyAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFrequencyAsync()
  nameWithType: IDeviceClient.GetFrequencyAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFrequencyAsync*
  name: GetFrequencyAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFrequencyAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetFrequencyAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFrequencyAsync
  nameWithType: IDeviceClient.GetFrequencyAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetPowerAsync
  name: GetPowerAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetPowerAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetPowerAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetPowerAsync()
  nameWithType: IDeviceClient.GetPowerAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetPowerAsync*
  name: GetPowerAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetPowerAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetPowerAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetPowerAsync
  nameWithType: IDeviceClient.GetPowerAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetRequiredSensorsAsync
  name: GetRequiredSensorsAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetRequiredSensorsAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetRequiredSensorsAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetRequiredSensorsAsync()
  nameWithType: IDeviceClient.GetRequiredSensorsAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetRequiredSensorsAsync*
  name: GetRequiredSensorsAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetRequiredSensorsAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetRequiredSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetRequiredSensorsAsync
  nameWithType: IDeviceClient.GetRequiredSensorsAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetSensorsAsync
  name: GetSensorsAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetSensorsAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetSensorsAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetSensorsAsync()
  nameWithType: IDeviceClient.GetSensorsAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetSensorsAsync*
  name: GetSensorsAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetSensorsAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetSensorsAsync
  nameWithType: IDeviceClient.GetSensorsAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetTimeAsync
  name: GetTimeAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetTimeAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetTimeAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetTimeAsync()
  nameWithType: IDeviceClient.GetTimeAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetTimeAsync*
  name: GetTimeAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetTimeAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetTimeAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetTimeAsync
  nameWithType: IDeviceClient.GetTimeAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetWifiAsync
  name: GetWifiAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetWifiAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetWifiAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetWifiAsync()
  nameWithType: IDeviceClient.GetWifiAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetWifiAsync*
  name: GetWifiAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetWifiAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetWifiAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetWifiAsync
  nameWithType: IDeviceClient.GetWifiAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutFiltersAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  name: PutFiltersAsync(Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutFiltersAsync_System_Nullable_System_Boolean__System_Nullable_System_Boolean__System_Nullable_System_Boolean__
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.PutFiltersAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  name.vb: PutFiltersAsync(Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutFiltersAsync(System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>)
  fullName.vb: VPEAR.Core.Abstractions.IDeviceClient.PutFiltersAsync(System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean))
  nameWithType: IDeviceClient.PutFiltersAsync(Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  nameWithType.vb: IDeviceClient.PutFiltersAsync(Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutFiltersAsync*
  name: PutFiltersAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutFiltersAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.PutFiltersAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutFiltersAsync
  nameWithType: IDeviceClient.PutFiltersAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutFirmwareAsync(System.String,System.String,System.Boolean)
  name: PutFirmwareAsync(String, String, Boolean)
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutFirmwareAsync_System_String_System_String_System_Boolean_
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.PutFirmwareAsync(System.String,System.String,System.Boolean)
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutFirmwareAsync(System.String, System.String, System.Boolean)
  nameWithType: IDeviceClient.PutFirmwareAsync(String, String, Boolean)
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutFirmwareAsync*
  name: PutFirmwareAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutFirmwareAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.PutFirmwareAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutFirmwareAsync
  nameWithType: IDeviceClient.PutFirmwareAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutFrequencyAsync(System.Nullable{System.Int32})
  name: PutFrequencyAsync(Nullable<Int32>)
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutFrequencyAsync_System_Nullable_System_Int32__
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.PutFrequencyAsync(System.Nullable{System.Int32})
  name.vb: PutFrequencyAsync(Nullable(Of Int32))
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutFrequencyAsync(System.Nullable<System.Int32>)
  fullName.vb: VPEAR.Core.Abstractions.IDeviceClient.PutFrequencyAsync(System.Nullable(Of System.Int32))
  nameWithType: IDeviceClient.PutFrequencyAsync(Nullable<Int32>)
  nameWithType.vb: IDeviceClient.PutFrequencyAsync(Nullable(Of Int32))
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutFrequencyAsync*
  name: PutFrequencyAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutFrequencyAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.PutFrequencyAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutFrequencyAsync
  nameWithType: IDeviceClient.PutFrequencyAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutRequiredSensorsAsync(System.Nullable{System.Int32})
  name: PutRequiredSensorsAsync(Nullable<Int32>)
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutRequiredSensorsAsync_System_Nullable_System_Int32__
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.PutRequiredSensorsAsync(System.Nullable{System.Int32})
  name.vb: PutRequiredSensorsAsync(Nullable(Of Int32))
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutRequiredSensorsAsync(System.Nullable<System.Int32>)
  fullName.vb: VPEAR.Core.Abstractions.IDeviceClient.PutRequiredSensorsAsync(System.Nullable(Of System.Int32))
  nameWithType: IDeviceClient.PutRequiredSensorsAsync(Nullable<Int32>)
  nameWithType.vb: IDeviceClient.PutRequiredSensorsAsync(Nullable(Of Int32))
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutRequiredSensorsAsync*
  name: PutRequiredSensorsAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutRequiredSensorsAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.PutRequiredSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutRequiredSensorsAsync
  nameWithType: IDeviceClient.PutRequiredSensorsAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutTimeAsync(System.DateTimeOffset)
  name: PutTimeAsync(DateTimeOffset)
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutTimeAsync_System_DateTimeOffset_
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.PutTimeAsync(System.DateTimeOffset)
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutTimeAsync(System.DateTimeOffset)
  nameWithType: IDeviceClient.PutTimeAsync(DateTimeOffset)
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutTimeAsync*
  name: PutTimeAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutTimeAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.PutTimeAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutTimeAsync
  nameWithType: IDeviceClient.PutTimeAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutWifiAsync(System.String,System.String,System.String)
  name: PutWifiAsync(String, String, String)
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutWifiAsync_System_String_System_String_System_String_
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.PutWifiAsync(System.String,System.String,System.String)
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutWifiAsync(System.String, System.String, System.String)
  nameWithType: IDeviceClient.PutWifiAsync(String, String, String)
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutWifiAsync*
  name: PutWifiAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutWifiAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.PutWifiAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutWifiAsync
  nameWithType: IDeviceClient.PutWifiAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.SyncAsync(VPEAR.Core.Entities.Device,VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid})
  name: SyncAsync(Device, IRepository<Device, Guid>)
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_SyncAsync_VPEAR_Core_Entities_Device_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Entities_Device_System_Guid__
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.SyncAsync(VPEAR.Core.Entities.Device,VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid})
  name.vb: SyncAsync(Device, IRepository(Of Device, Guid))
  fullName: VPEAR.Core.Abstractions.IDeviceClient.SyncAsync(VPEAR.Core.Entities.Device, VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Entities.Device, System.Guid>)
  fullName.vb: VPEAR.Core.Abstractions.IDeviceClient.SyncAsync(VPEAR.Core.Entities.Device, VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Entities.Device, System.Guid))
  nameWithType: IDeviceClient.SyncAsync(Device, IRepository<Device, Guid>)
  nameWithType.vb: IDeviceClient.SyncAsync(Device, IRepository(Of Device, Guid))
- uid: VPEAR.Core.Abstractions.IDeviceClient.SyncAsync*
  name: SyncAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_SyncAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.SyncAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.SyncAsync
  nameWithType: IDeviceClient.SyncAsync
- uid: VPEAR.Core.Abstractions.IDeviceService
  name: IDeviceService
  href: api/VPEAR.Core.Abstractions.IDeviceService.html
  commentId: T:VPEAR.Core.Abstractions.IDeviceService
  fullName: VPEAR.Core.Abstractions.IDeviceService
  nameWithType: IDeviceService
- uid: VPEAR.Core.Abstractions.IDeviceService.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_DeleteAsync_System_Guid_
  commentId: M:VPEAR.Core.Abstractions.IDeviceService.DeleteAsync(System.Guid)
  fullName: VPEAR.Core.Abstractions.IDeviceService.DeleteAsync(System.Guid)
  nameWithType: IDeviceService.DeleteAsync(Guid)
- uid: VPEAR.Core.Abstractions.IDeviceService.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_DeleteAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceService.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceService.DeleteAsync
  nameWithType: IDeviceService.DeleteAsync
- uid: VPEAR.Core.Abstractions.IDeviceService.GetAsync(System.Nullable{VPEAR.Core.DeviceStatus})
  name: GetAsync(Nullable<DeviceStatus>)
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_GetAsync_System_Nullable_VPEAR_Core_DeviceStatus__
  commentId: M:VPEAR.Core.Abstractions.IDeviceService.GetAsync(System.Nullable{VPEAR.Core.DeviceStatus})
  name.vb: GetAsync(Nullable(Of DeviceStatus))
  fullName: VPEAR.Core.Abstractions.IDeviceService.GetAsync(System.Nullable<VPEAR.Core.DeviceStatus>)
  fullName.vb: VPEAR.Core.Abstractions.IDeviceService.GetAsync(System.Nullable(Of VPEAR.Core.DeviceStatus))
  nameWithType: IDeviceService.GetAsync(Nullable<DeviceStatus>)
  nameWithType.vb: IDeviceService.GetAsync(Nullable(Of DeviceStatus))
- uid: VPEAR.Core.Abstractions.IDeviceService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceService.GetAsync
  nameWithType: IDeviceService.GetAsync
- uid: VPEAR.Core.Abstractions.IDeviceService.PostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  name: PostAsync(PostDeviceRequest)
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_PostAsync_VPEAR_Core_Wrappers_PostDeviceRequest_
  commentId: M:VPEAR.Core.Abstractions.IDeviceService.PostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  fullName: VPEAR.Core.Abstractions.IDeviceService.PostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  nameWithType: IDeviceService.PostAsync(PostDeviceRequest)
- uid: VPEAR.Core.Abstractions.IDeviceService.PostAsync*
  name: PostAsync
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_PostAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceService.PostAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceService.PostAsync
  nameWithType: IDeviceService.PostAsync
- uid: VPEAR.Core.Abstractions.IDeviceService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutDeviceRequest)
  name: PutAsync(Guid, PutDeviceRequest)
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutDeviceRequest_
  commentId: M:VPEAR.Core.Abstractions.IDeviceService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutDeviceRequest)
  fullName: VPEAR.Core.Abstractions.IDeviceService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutDeviceRequest)
  nameWithType: IDeviceService.PutAsync(Guid, PutDeviceRequest)
- uid: VPEAR.Core.Abstractions.IDeviceService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_PutAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceService.PutAsync
  nameWithType: IDeviceService.PutAsync
- uid: VPEAR.Core.Abstractions.IFilterService
  name: IFilterService
  href: api/VPEAR.Core.Abstractions.IFilterService.html
  commentId: T:VPEAR.Core.Abstractions.IFilterService
  fullName: VPEAR.Core.Abstractions.IFilterService
  nameWithType: IFilterService
- uid: VPEAR.Core.Abstractions.IFilterService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Core.Abstractions.IFilterService.html#VPEAR_Core_Abstractions_IFilterService_GetAsync_System_Guid_
  commentId: M:VPEAR.Core.Abstractions.IFilterService.GetAsync(System.Guid)
  fullName: VPEAR.Core.Abstractions.IFilterService.GetAsync(System.Guid)
  nameWithType: IFilterService.GetAsync(Guid)
- uid: VPEAR.Core.Abstractions.IFilterService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IFilterService.html#VPEAR_Core_Abstractions_IFilterService_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IFilterService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IFilterService.GetAsync
  nameWithType: IFilterService.GetAsync
- uid: VPEAR.Core.Abstractions.IFilterService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFilterRequest)
  name: PutAsync(Guid, PutFilterRequest)
  href: api/VPEAR.Core.Abstractions.IFilterService.html#VPEAR_Core_Abstractions_IFilterService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutFilterRequest_
  commentId: M:VPEAR.Core.Abstractions.IFilterService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFilterRequest)
  fullName: VPEAR.Core.Abstractions.IFilterService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutFilterRequest)
  nameWithType: IFilterService.PutAsync(Guid, PutFilterRequest)
- uid: VPEAR.Core.Abstractions.IFilterService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Core.Abstractions.IFilterService.html#VPEAR_Core_Abstractions_IFilterService_PutAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IFilterService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IFilterService.PutAsync
  nameWithType: IFilterService.PutAsync
- uid: VPEAR.Core.Abstractions.IFirmwareService
  name: IFirmwareService
  href: api/VPEAR.Core.Abstractions.IFirmwareService.html
  commentId: T:VPEAR.Core.Abstractions.IFirmwareService
  fullName: VPEAR.Core.Abstractions.IFirmwareService
  nameWithType: IFirmwareService
- uid: VPEAR.Core.Abstractions.IFirmwareService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Core.Abstractions.IFirmwareService.html#VPEAR_Core_Abstractions_IFirmwareService_GetAsync_System_Guid_
  commentId: M:VPEAR.Core.Abstractions.IFirmwareService.GetAsync(System.Guid)
  fullName: VPEAR.Core.Abstractions.IFirmwareService.GetAsync(System.Guid)
  nameWithType: IFirmwareService.GetAsync(Guid)
- uid: VPEAR.Core.Abstractions.IFirmwareService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IFirmwareService.html#VPEAR_Core_Abstractions_IFirmwareService_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IFirmwareService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IFirmwareService.GetAsync
  nameWithType: IFirmwareService.GetAsync
- uid: VPEAR.Core.Abstractions.IFirmwareService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFirmwareRequest)
  name: PutAsync(Guid, PutFirmwareRequest)
  href: api/VPEAR.Core.Abstractions.IFirmwareService.html#VPEAR_Core_Abstractions_IFirmwareService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutFirmwareRequest_
  commentId: M:VPEAR.Core.Abstractions.IFirmwareService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFirmwareRequest)
  fullName: VPEAR.Core.Abstractions.IFirmwareService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutFirmwareRequest)
  nameWithType: IFirmwareService.PutAsync(Guid, PutFirmwareRequest)
- uid: VPEAR.Core.Abstractions.IFirmwareService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Core.Abstractions.IFirmwareService.html#VPEAR_Core_Abstractions_IFirmwareService_PutAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IFirmwareService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IFirmwareService.PutAsync
  nameWithType: IFirmwareService.PutAsync
- uid: VPEAR.Core.Abstractions.IPowerService
  name: IPowerService
  href: api/VPEAR.Core.Abstractions.IPowerService.html
  commentId: T:VPEAR.Core.Abstractions.IPowerService
  fullName: VPEAR.Core.Abstractions.IPowerService
  nameWithType: IPowerService
- uid: VPEAR.Core.Abstractions.IPowerService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Core.Abstractions.IPowerService.html#VPEAR_Core_Abstractions_IPowerService_GetAsync_System_Guid_
  commentId: M:VPEAR.Core.Abstractions.IPowerService.GetAsync(System.Guid)
  fullName: VPEAR.Core.Abstractions.IPowerService.GetAsync(System.Guid)
  nameWithType: IPowerService.GetAsync(Guid)
- uid: VPEAR.Core.Abstractions.IPowerService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IPowerService.html#VPEAR_Core_Abstractions_IPowerService_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IPowerService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IPowerService.GetAsync
  nameWithType: IPowerService.GetAsync
- uid: VPEAR.Core.Abstractions.IRepository`2
  name: IRepository<TEntity, TKey>
  href: api/VPEAR.Core.Abstractions.IRepository-2.html
  commentId: T:VPEAR.Core.Abstractions.IRepository`2
  name.vb: IRepository(Of TEntity, TKey)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey)
  nameWithType: IRepository<TEntity, TKey>
  nameWithType.vb: IRepository(Of TEntity, TKey)
- uid: VPEAR.Core.Abstractions.IRepository`2.CreateAsync(`0)
  name: CreateAsync(TEntity)
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_CreateAsync__0_
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.CreateAsync(`0)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.CreateAsync(TEntity)
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).CreateAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.CreateAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).CreateAsync(TEntity)
- uid: VPEAR.Core.Abstractions.IRepository`2.CreateAsync*
  name: CreateAsync
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_CreateAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.CreateAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.CreateAsync
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).CreateAsync
  nameWithType: IRepository<TEntity, TKey>.CreateAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).CreateAsync
- uid: VPEAR.Core.Abstractions.IRepository`2.DeleteAsync(`0)
  name: DeleteAsync(TEntity)
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_DeleteAsync__0_
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.DeleteAsync(`0)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.DeleteAsync(TEntity)
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).DeleteAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync(TEntity)
- uid: VPEAR.Core.Abstractions.IRepository`2.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_DeleteAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.DeleteAsync
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).DeleteAsync
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync
- uid: VPEAR.Core.Abstractions.IRepository`2.Get
  name: Get()
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_Get
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.Get
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.Get()
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).Get()
  nameWithType: IRepository<TEntity, TKey>.Get()
  nameWithType.vb: IRepository(Of TEntity, TKey).Get()
- uid: VPEAR.Core.Abstractions.IRepository`2.Get*
  name: Get
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_Get_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.Get
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.Get
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).Get
  nameWithType: IRepository<TEntity, TKey>.Get
  nameWithType.vb: IRepository(Of TEntity, TKey).Get
- uid: VPEAR.Core.Abstractions.IRepository`2.GetAsync(`1)
  name: GetAsync(TKey)
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_GetAsync__1_
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.GetAsync(`1)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.GetAsync(TKey)
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).GetAsync(TKey)
  nameWithType: IRepository<TEntity, TKey>.GetAsync(TKey)
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAsync(TKey)
- uid: VPEAR.Core.Abstractions.IRepository`2.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.GetAsync
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).GetAsync
  nameWithType: IRepository<TEntity, TKey>.GetAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAsync
- uid: VPEAR.Core.Abstractions.IRepository`2.SaveChanges
  name: SaveChanges()
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_SaveChanges
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.SaveChanges
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.SaveChanges()
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).SaveChanges()
  nameWithType: IRepository<TEntity, TKey>.SaveChanges()
  nameWithType.vb: IRepository(Of TEntity, TKey).SaveChanges()
- uid: VPEAR.Core.Abstractions.IRepository`2.SaveChanges*
  name: SaveChanges
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_SaveChanges_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.SaveChanges
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.SaveChanges
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).SaveChanges
  nameWithType: IRepository<TEntity, TKey>.SaveChanges
  nameWithType.vb: IRepository(Of TEntity, TKey).SaveChanges
- uid: VPEAR.Core.Abstractions.IRepository`2.SaveChangesAsync
  name: SaveChangesAsync()
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_SaveChangesAsync
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.SaveChangesAsync
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.SaveChangesAsync()
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).SaveChangesAsync()
  nameWithType: IRepository<TEntity, TKey>.SaveChangesAsync()
  nameWithType.vb: IRepository(Of TEntity, TKey).SaveChangesAsync()
- uid: VPEAR.Core.Abstractions.IRepository`2.SaveChangesAsync*
  name: SaveChangesAsync
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_SaveChangesAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.SaveChangesAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.SaveChangesAsync
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).SaveChangesAsync
  nameWithType: IRepository<TEntity, TKey>.SaveChangesAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).SaveChangesAsync
- uid: VPEAR.Core.Abstractions.IRepository`2.UpdateAsync(`0)
  name: UpdateAsync(TEntity)
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_UpdateAsync__0_
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.UpdateAsync(`0)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
- uid: VPEAR.Core.Abstractions.IRepository`2.UpdateAsync*
  name: UpdateAsync
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_UpdateAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.UpdateAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.UpdateAsync
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).UpdateAsync
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync
- uid: VPEAR.Core.Abstractions.ISensorService
  name: ISensorService
  href: api/VPEAR.Core.Abstractions.ISensorService.html
  commentId: T:VPEAR.Core.Abstractions.ISensorService
  fullName: VPEAR.Core.Abstractions.ISensorService
  nameWithType: ISensorService
- uid: VPEAR.Core.Abstractions.ISensorService.GetFramesAsync(System.Guid,System.Int32,System.Int32)
  name: GetFramesAsync(Guid, Int32, Int32)
  href: api/VPEAR.Core.Abstractions.ISensorService.html#VPEAR_Core_Abstractions_ISensorService_GetFramesAsync_System_Guid_System_Int32_System_Int32_
  commentId: M:VPEAR.Core.Abstractions.ISensorService.GetFramesAsync(System.Guid,System.Int32,System.Int32)
  fullName: VPEAR.Core.Abstractions.ISensorService.GetFramesAsync(System.Guid, System.Int32, System.Int32)
  nameWithType: ISensorService.GetFramesAsync(Guid, Int32, Int32)
- uid: VPEAR.Core.Abstractions.ISensorService.GetFramesAsync*
  name: GetFramesAsync
  href: api/VPEAR.Core.Abstractions.ISensorService.html#VPEAR_Core_Abstractions_ISensorService_GetFramesAsync_
  commentId: Overload:VPEAR.Core.Abstractions.ISensorService.GetFramesAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.ISensorService.GetFramesAsync
  nameWithType: ISensorService.GetFramesAsync
- uid: VPEAR.Core.Abstractions.ISensorService.GetSensorsAsync(System.Guid)
  name: GetSensorsAsync(Guid)
  href: api/VPEAR.Core.Abstractions.ISensorService.html#VPEAR_Core_Abstractions_ISensorService_GetSensorsAsync_System_Guid_
  commentId: M:VPEAR.Core.Abstractions.ISensorService.GetSensorsAsync(System.Guid)
  fullName: VPEAR.Core.Abstractions.ISensorService.GetSensorsAsync(System.Guid)
  nameWithType: ISensorService.GetSensorsAsync(Guid)
- uid: VPEAR.Core.Abstractions.ISensorService.GetSensorsAsync*
  name: GetSensorsAsync
  href: api/VPEAR.Core.Abstractions.ISensorService.html#VPEAR_Core_Abstractions_ISensorService_GetSensorsAsync_
  commentId: Overload:VPEAR.Core.Abstractions.ISensorService.GetSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.ISensorService.GetSensorsAsync
  nameWithType: ISensorService.GetSensorsAsync
- uid: VPEAR.Core.Abstractions.IUserService
  name: IUserService
  href: api/VPEAR.Core.Abstractions.IUserService.html
  commentId: T:VPEAR.Core.Abstractions.IUserService
  fullName: VPEAR.Core.Abstractions.IUserService
  nameWithType: IUserService
- uid: VPEAR.Core.Abstractions.IUserService.DeleteAsync(System.String)
  name: DeleteAsync(String)
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_DeleteAsync_System_String_
  commentId: M:VPEAR.Core.Abstractions.IUserService.DeleteAsync(System.String)
  fullName: VPEAR.Core.Abstractions.IUserService.DeleteAsync(System.String)
  nameWithType: IUserService.DeleteAsync(String)
- uid: VPEAR.Core.Abstractions.IUserService.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_DeleteAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IUserService.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IUserService.DeleteAsync
  nameWithType: IUserService.DeleteAsync
- uid: VPEAR.Core.Abstractions.IUserService.GetAsync(System.String)
  name: GetAsync(String)
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_GetAsync_System_String_
  commentId: M:VPEAR.Core.Abstractions.IUserService.GetAsync(System.String)
  fullName: VPEAR.Core.Abstractions.IUserService.GetAsync(System.String)
  nameWithType: IUserService.GetAsync(String)
- uid: VPEAR.Core.Abstractions.IUserService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IUserService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IUserService.GetAsync
  nameWithType: IUserService.GetAsync
- uid: VPEAR.Core.Abstractions.IUserService.PostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  name: PostRegisterAsync(PostRegisterRequest)
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_PostRegisterAsync_VPEAR_Core_Wrappers_PostRegisterRequest_
  commentId: M:VPEAR.Core.Abstractions.IUserService.PostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  fullName: VPEAR.Core.Abstractions.IUserService.PostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  nameWithType: IUserService.PostRegisterAsync(PostRegisterRequest)
- uid: VPEAR.Core.Abstractions.IUserService.PostRegisterAsync*
  name: PostRegisterAsync
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_PostRegisterAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IUserService.PostRegisterAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IUserService.PostRegisterAsync
  nameWithType: IUserService.PostRegisterAsync
- uid: VPEAR.Core.Abstractions.IUserService.PutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  name: PutLoginAsync(PutLoginRequest)
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_PutLoginAsync_VPEAR_Core_Wrappers_PutLoginRequest_
  commentId: M:VPEAR.Core.Abstractions.IUserService.PutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  fullName: VPEAR.Core.Abstractions.IUserService.PutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  nameWithType: IUserService.PutLoginAsync(PutLoginRequest)
- uid: VPEAR.Core.Abstractions.IUserService.PutLoginAsync*
  name: PutLoginAsync
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_PutLoginAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IUserService.PutLoginAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IUserService.PutLoginAsync
  nameWithType: IUserService.PutLoginAsync
- uid: VPEAR.Core.Abstractions.IUserService.PutPasswordAsync(System.String,VPEAR.Core.Wrappers.PutPasswordRequest)
  name: PutPasswordAsync(String, PutPasswordRequest)
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_PutPasswordAsync_System_String_VPEAR_Core_Wrappers_PutPasswordRequest_
  commentId: M:VPEAR.Core.Abstractions.IUserService.PutPasswordAsync(System.String,VPEAR.Core.Wrappers.PutPasswordRequest)
  fullName: VPEAR.Core.Abstractions.IUserService.PutPasswordAsync(System.String, VPEAR.Core.Wrappers.PutPasswordRequest)
  nameWithType: IUserService.PutPasswordAsync(String, PutPasswordRequest)
- uid: VPEAR.Core.Abstractions.IUserService.PutPasswordAsync*
  name: PutPasswordAsync
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_PutPasswordAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IUserService.PutPasswordAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IUserService.PutPasswordAsync
  nameWithType: IUserService.PutPasswordAsync
- uid: VPEAR.Core.Abstractions.IUserService.PutVerifyAsync(System.String,VPEAR.Core.Wrappers.PutVerifyRequest)
  name: PutVerifyAsync(String, PutVerifyRequest)
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_PutVerifyAsync_System_String_VPEAR_Core_Wrappers_PutVerifyRequest_
  commentId: M:VPEAR.Core.Abstractions.IUserService.PutVerifyAsync(System.String,VPEAR.Core.Wrappers.PutVerifyRequest)
  fullName: VPEAR.Core.Abstractions.IUserService.PutVerifyAsync(System.String, VPEAR.Core.Wrappers.PutVerifyRequest)
  nameWithType: IUserService.PutVerifyAsync(String, PutVerifyRequest)
- uid: VPEAR.Core.Abstractions.IUserService.PutVerifyAsync*
  name: PutVerifyAsync
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_PutVerifyAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IUserService.PutVerifyAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IUserService.PutVerifyAsync
  nameWithType: IUserService.PutVerifyAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient
  name: IVPEARClient
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html
  commentId: T:VPEAR.Core.Abstractions.IVPEARClient
  fullName: VPEAR.Core.Abstractions.IVPEARClient
  nameWithType: IVPEARClient
- uid: VPEAR.Core.Abstractions.IVPEARClient.CanConnectAsync
  name: CanConnectAsync()
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_CanConnectAsync
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.CanConnectAsync
  fullName: VPEAR.Core.Abstractions.IVPEARClient.CanConnectAsync()
  nameWithType: IVPEARClient.CanConnectAsync()
- uid: VPEAR.Core.Abstractions.IVPEARClient.CanConnectAsync*
  name: CanConnectAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_CanConnectAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.CanConnectAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.CanConnectAsync
  nameWithType: IVPEARClient.CanConnectAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.DeleteDeviceAsync(System.String)
  name: DeleteDeviceAsync(String)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_DeleteDeviceAsync_System_String_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.DeleteDeviceAsync(System.String)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.DeleteDeviceAsync(System.String)
  nameWithType: IVPEARClient.DeleteDeviceAsync(String)
- uid: VPEAR.Core.Abstractions.IVPEARClient.DeleteDeviceAsync*
  name: DeleteDeviceAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_DeleteDeviceAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.DeleteDeviceAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.DeleteDeviceAsync
  nameWithType: IVPEARClient.DeleteDeviceAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.DeleteUserAsync(System.String)
  name: DeleteUserAsync(String)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_DeleteUserAsync_System_String_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.DeleteUserAsync(System.String)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.DeleteUserAsync(System.String)
  nameWithType: IVPEARClient.DeleteUserAsync(String)
- uid: VPEAR.Core.Abstractions.IVPEARClient.DeleteUserAsync*
  name: DeleteUserAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_DeleteUserAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.DeleteUserAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.DeleteUserAsync
  nameWithType: IVPEARClient.DeleteUserAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.Error
  name: Error
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_Error
  commentId: P:VPEAR.Core.Abstractions.IVPEARClient.Error
  fullName: VPEAR.Core.Abstractions.IVPEARClient.Error
  nameWithType: IVPEARClient.Error
- uid: VPEAR.Core.Abstractions.IVPEARClient.Error*
  name: Error
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_Error_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.Error
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.Error
  nameWithType: IVPEARClient.Error
- uid: VPEAR.Core.Abstractions.IVPEARClient.ErrorMessage
  name: ErrorMessage
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_ErrorMessage
  commentId: P:VPEAR.Core.Abstractions.IVPEARClient.ErrorMessage
  fullName: VPEAR.Core.Abstractions.IVPEARClient.ErrorMessage
  nameWithType: IVPEARClient.ErrorMessage
- uid: VPEAR.Core.Abstractions.IVPEARClient.ErrorMessage*
  name: ErrorMessage
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_ErrorMessage_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.ErrorMessage
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.ErrorMessage
  nameWithType: IVPEARClient.ErrorMessage
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetDevicesAsync(System.Nullable{VPEAR.Core.DeviceStatus})
  name: GetDevicesAsync(Nullable<DeviceStatus>)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetDevicesAsync_System_Nullable_VPEAR_Core_DeviceStatus__
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.GetDevicesAsync(System.Nullable{VPEAR.Core.DeviceStatus})
  name.vb: GetDevicesAsync(Nullable(Of DeviceStatus))
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetDevicesAsync(System.Nullable<VPEAR.Core.DeviceStatus>)
  fullName.vb: VPEAR.Core.Abstractions.IVPEARClient.GetDevicesAsync(System.Nullable(Of VPEAR.Core.DeviceStatus))
  nameWithType: IVPEARClient.GetDevicesAsync(Nullable<DeviceStatus>)
  nameWithType.vb: IVPEARClient.GetDevicesAsync(Nullable(Of DeviceStatus))
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetDevicesAsync*
  name: GetDevicesAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetDevicesAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.GetDevicesAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetDevicesAsync
  nameWithType: IVPEARClient.GetDevicesAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetFiltersAsync(System.String)
  name: GetFiltersAsync(String)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetFiltersAsync_System_String_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.GetFiltersAsync(System.String)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetFiltersAsync(System.String)
  nameWithType: IVPEARClient.GetFiltersAsync(String)
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetFiltersAsync*
  name: GetFiltersAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetFiltersAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.GetFiltersAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetFiltersAsync
  nameWithType: IVPEARClient.GetFiltersAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetFirmwareAsync(System.String)
  name: GetFirmwareAsync(String)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetFirmwareAsync_System_String_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.GetFirmwareAsync(System.String)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetFirmwareAsync(System.String)
  nameWithType: IVPEARClient.GetFirmwareAsync(String)
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetFirmwareAsync*
  name: GetFirmwareAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetFirmwareAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.GetFirmwareAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetFirmwareAsync
  nameWithType: IVPEARClient.GetFirmwareAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetFramesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name: GetFramesAsync(String, Nullable<Int32>, Nullable<Int32>)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetFramesAsync_System_String_System_Nullable_System_Int32__System_Nullable_System_Int32__
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.GetFramesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name.vb: GetFramesAsync(String, Nullable(Of Int32), Nullable(Of Int32))
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetFramesAsync(System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  fullName.vb: VPEAR.Core.Abstractions.IVPEARClient.GetFramesAsync(System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  nameWithType: IVPEARClient.GetFramesAsync(String, Nullable<Int32>, Nullable<Int32>)
  nameWithType.vb: IVPEARClient.GetFramesAsync(String, Nullable(Of Int32), Nullable(Of Int32))
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetFramesAsync*
  name: GetFramesAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetFramesAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.GetFramesAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetFramesAsync
  nameWithType: IVPEARClient.GetFramesAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetPowerAsync(System.String)
  name: GetPowerAsync(String)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetPowerAsync_System_String_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.GetPowerAsync(System.String)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetPowerAsync(System.String)
  nameWithType: IVPEARClient.GetPowerAsync(String)
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetPowerAsync*
  name: GetPowerAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetPowerAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.GetPowerAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetPowerAsync
  nameWithType: IVPEARClient.GetPowerAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetSensorsAsync(System.String)
  name: GetSensorsAsync(String)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetSensorsAsync_System_String_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.GetSensorsAsync(System.String)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetSensorsAsync(System.String)
  nameWithType: IVPEARClient.GetSensorsAsync(String)
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetSensorsAsync*
  name: GetSensorsAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetSensorsAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.GetSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetSensorsAsync
  nameWithType: IVPEARClient.GetSensorsAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetUsersAsync(System.String)
  name: GetUsersAsync(String)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetUsersAsync_System_String_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.GetUsersAsync(System.String)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetUsersAsync(System.String)
  nameWithType: IVPEARClient.GetUsersAsync(String)
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetUsersAsync*
  name: GetUsersAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetUsersAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.GetUsersAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetUsersAsync
  nameWithType: IVPEARClient.GetUsersAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetWifiAsync(System.String)
  name: GetWifiAsync(String)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetWifiAsync_System_String_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.GetWifiAsync(System.String)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetWifiAsync(System.String)
  nameWithType: IVPEARClient.GetWifiAsync(String)
- uid: VPEAR.Core.Abstractions.IVPEARClient.GetWifiAsync*
  name: GetWifiAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_GetWifiAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.GetWifiAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.GetWifiAsync
  nameWithType: IVPEARClient.GetWifiAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.LoginAsync(System.String,System.String)
  name: LoginAsync(String, String)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_LoginAsync_System_String_System_String_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.LoginAsync(System.String,System.String)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.LoginAsync(System.String, System.String)
  nameWithType: IVPEARClient.LoginAsync(String, String)
- uid: VPEAR.Core.Abstractions.IVPEARClient.LoginAsync*
  name: LoginAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_LoginAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.LoginAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.LoginAsync
  nameWithType: IVPEARClient.LoginAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.Logout
  name: Logout()
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_Logout
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.Logout
  fullName: VPEAR.Core.Abstractions.IVPEARClient.Logout()
  nameWithType: IVPEARClient.Logout()
- uid: VPEAR.Core.Abstractions.IVPEARClient.Logout*
  name: Logout
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_Logout_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.Logout
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.Logout
  nameWithType: IVPEARClient.Logout
- uid: VPEAR.Core.Abstractions.IVPEARClient.PostDevicesAsync(System.String,System.String)
  name: PostDevicesAsync(String, String)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_PostDevicesAsync_System_String_System_String_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.PostDevicesAsync(System.String,System.String)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.PostDevicesAsync(System.String, System.String)
  nameWithType: IVPEARClient.PostDevicesAsync(String, String)
- uid: VPEAR.Core.Abstractions.IVPEARClient.PostDevicesAsync*
  name: PostDevicesAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_PostDevicesAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.PostDevicesAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.PostDevicesAsync
  nameWithType: IVPEARClient.PostDevicesAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.PutDeviceAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{VPEAR.Core.DeviceStatus})
  name: PutDeviceAsync(String, String, Nullable<Int32>, Nullable<Int32>, Nullable<DeviceStatus>)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_PutDeviceAsync_System_String_System_String_System_Nullable_System_Int32__System_Nullable_System_Int32__System_Nullable_VPEAR_Core_DeviceStatus__
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.PutDeviceAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{VPEAR.Core.DeviceStatus})
  name.vb: PutDeviceAsync(String, String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of DeviceStatus))
  fullName: VPEAR.Core.Abstractions.IVPEARClient.PutDeviceAsync(System.String, System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<VPEAR.Core.DeviceStatus>)
  fullName.vb: VPEAR.Core.Abstractions.IVPEARClient.PutDeviceAsync(System.String, System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of VPEAR.Core.DeviceStatus))
  nameWithType: IVPEARClient.PutDeviceAsync(String, String, Nullable<Int32>, Nullable<Int32>, Nullable<DeviceStatus>)
  nameWithType.vb: IVPEARClient.PutDeviceAsync(String, String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of DeviceStatus))
- uid: VPEAR.Core.Abstractions.IVPEARClient.PutDeviceAsync*
  name: PutDeviceAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_PutDeviceAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.PutDeviceAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.PutDeviceAsync
  nameWithType: IVPEARClient.PutDeviceAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.PutFiltersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  name: PutFiltersAsync(String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_PutFiltersAsync_System_String_System_Nullable_System_Boolean__System_Nullable_System_Boolean__System_Nullable_System_Boolean__
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.PutFiltersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  name.vb: PutFiltersAsync(String, Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
  fullName: VPEAR.Core.Abstractions.IVPEARClient.PutFiltersAsync(System.String, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>)
  fullName.vb: VPEAR.Core.Abstractions.IVPEARClient.PutFiltersAsync(System.String, System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean))
  nameWithType: IVPEARClient.PutFiltersAsync(String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  nameWithType.vb: IVPEARClient.PutFiltersAsync(String, Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
- uid: VPEAR.Core.Abstractions.IVPEARClient.PutFiltersAsync*
  name: PutFiltersAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_PutFiltersAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.PutFiltersAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.PutFiltersAsync
  nameWithType: IVPEARClient.PutFiltersAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.PutFirmwareAsync(System.String,System.String,System.String,System.Boolean)
  name: PutFirmwareAsync(String, String, String, Boolean)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_PutFirmwareAsync_System_String_System_String_System_String_System_Boolean_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.PutFirmwareAsync(System.String,System.String,System.String,System.Boolean)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.PutFirmwareAsync(System.String, System.String, System.String, System.Boolean)
  nameWithType: IVPEARClient.PutFirmwareAsync(String, String, String, Boolean)
- uid: VPEAR.Core.Abstractions.IVPEARClient.PutFirmwareAsync*
  name: PutFirmwareAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_PutFirmwareAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.PutFirmwareAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.PutFirmwareAsync
  nameWithType: IVPEARClient.PutFirmwareAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.PutPasswordAsync(System.String,System.String,System.String)
  name: PutPasswordAsync(String, String, String)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_PutPasswordAsync_System_String_System_String_System_String_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.PutPasswordAsync(System.String,System.String,System.String)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.PutPasswordAsync(System.String, System.String, System.String)
  nameWithType: IVPEARClient.PutPasswordAsync(String, String, String)
- uid: VPEAR.Core.Abstractions.IVPEARClient.PutPasswordAsync*
  name: PutPasswordAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_PutPasswordAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.PutPasswordAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.PutPasswordAsync
  nameWithType: IVPEARClient.PutPasswordAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.PutVerifyAsync(System.String,System.Boolean)
  name: PutVerifyAsync(String, Boolean)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_PutVerifyAsync_System_String_System_Boolean_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.PutVerifyAsync(System.String,System.Boolean)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.PutVerifyAsync(System.String, System.Boolean)
  nameWithType: IVPEARClient.PutVerifyAsync(String, Boolean)
- uid: VPEAR.Core.Abstractions.IVPEARClient.PutVerifyAsync*
  name: PutVerifyAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_PutVerifyAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.PutVerifyAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.PutVerifyAsync
  nameWithType: IVPEARClient.PutVerifyAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.PutWifiAsync(System.String,System.String,System.String,System.String)
  name: PutWifiAsync(String, String, String, String)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_PutWifiAsync_System_String_System_String_System_String_System_String_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.PutWifiAsync(System.String,System.String,System.String,System.String)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.PutWifiAsync(System.String, System.String, System.String, System.String)
  nameWithType: IVPEARClient.PutWifiAsync(String, String, String, String)
- uid: VPEAR.Core.Abstractions.IVPEARClient.PutWifiAsync*
  name: PutWifiAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_PutWifiAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.PutWifiAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.PutWifiAsync
  nameWithType: IVPEARClient.PutWifiAsync
- uid: VPEAR.Core.Abstractions.IVPEARClient.RegisterAsync(System.String,System.String,System.Boolean)
  name: RegisterAsync(String, String, Boolean)
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_RegisterAsync_System_String_System_String_System_Boolean_
  commentId: M:VPEAR.Core.Abstractions.IVPEARClient.RegisterAsync(System.String,System.String,System.Boolean)
  fullName: VPEAR.Core.Abstractions.IVPEARClient.RegisterAsync(System.String, System.String, System.Boolean)
  nameWithType: IVPEARClient.RegisterAsync(String, String, Boolean)
- uid: VPEAR.Core.Abstractions.IVPEARClient.RegisterAsync*
  name: RegisterAsync
  href: api/VPEAR.Core.Abstractions.IVPEARClient.html#VPEAR_Core_Abstractions_IVPEARClient_RegisterAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IVPEARClient.RegisterAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IVPEARClient.RegisterAsync
  nameWithType: IVPEARClient.RegisterAsync
- uid: VPEAR.Core.Abstractions.IWifiService
  name: IWifiService
  href: api/VPEAR.Core.Abstractions.IWifiService.html
  commentId: T:VPEAR.Core.Abstractions.IWifiService
  fullName: VPEAR.Core.Abstractions.IWifiService
  nameWithType: IWifiService
- uid: VPEAR.Core.Abstractions.IWifiService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Core.Abstractions.IWifiService.html#VPEAR_Core_Abstractions_IWifiService_GetAsync_System_Guid_
  commentId: M:VPEAR.Core.Abstractions.IWifiService.GetAsync(System.Guid)
  fullName: VPEAR.Core.Abstractions.IWifiService.GetAsync(System.Guid)
  nameWithType: IWifiService.GetAsync(Guid)
- uid: VPEAR.Core.Abstractions.IWifiService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IWifiService.html#VPEAR_Core_Abstractions_IWifiService_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IWifiService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IWifiService.GetAsync
  nameWithType: IWifiService.GetAsync
- uid: VPEAR.Core.Abstractions.IWifiService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutWifiRequest)
  name: PutAsync(Guid, PutWifiRequest)
  href: api/VPEAR.Core.Abstractions.IWifiService.html#VPEAR_Core_Abstractions_IWifiService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutWifiRequest_
  commentId: M:VPEAR.Core.Abstractions.IWifiService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutWifiRequest)
  fullName: VPEAR.Core.Abstractions.IWifiService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutWifiRequest)
  nameWithType: IWifiService.PutAsync(Guid, PutWifiRequest)
- uid: VPEAR.Core.Abstractions.IWifiService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Core.Abstractions.IWifiService.html#VPEAR_Core_Abstractions_IWifiService_PutAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IWifiService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IWifiService.PutAsync
  nameWithType: IWifiService.PutAsync
- uid: VPEAR.Core.DeviceClient
  name: DeviceClient
  href: api/VPEAR.Core.DeviceClient.html
  commentId: T:VPEAR.Core.DeviceClient
  fullName: VPEAR.Core.DeviceClient
  nameWithType: DeviceClient
- uid: VPEAR.Core.DeviceClient.#ctor(System.String,System.Net.Http.IHttpClientFactory)
  name: DeviceClient(String, IHttpClientFactory)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient__ctor_System_String_System_Net_Http_IHttpClientFactory_
  commentId: M:VPEAR.Core.DeviceClient.#ctor(System.String,System.Net.Http.IHttpClientFactory)
  fullName: VPEAR.Core.DeviceClient.DeviceClient(System.String, System.Net.Http.IHttpClientFactory)
  nameWithType: DeviceClient.DeviceClient(String, IHttpClientFactory)
- uid: VPEAR.Core.DeviceClient.#ctor*
  name: DeviceClient
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient__ctor_
  commentId: Overload:VPEAR.Core.DeviceClient.#ctor
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.DeviceClient
  nameWithType: DeviceClient.DeviceClient
- uid: VPEAR.Core.DeviceClient.CanConnectAsync
  name: CanConnectAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_CanConnectAsync
  commentId: M:VPEAR.Core.DeviceClient.CanConnectAsync
  fullName: VPEAR.Core.DeviceClient.CanConnectAsync()
  nameWithType: DeviceClient.CanConnectAsync()
- uid: VPEAR.Core.DeviceClient.CanConnectAsync*
  name: CanConnectAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_CanConnectAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.CanConnectAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.CanConnectAsync
  nameWithType: DeviceClient.CanConnectAsync
- uid: VPEAR.Core.DeviceClient.Dispose
  name: Dispose()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_Dispose
  commentId: M:VPEAR.Core.DeviceClient.Dispose
  fullName: VPEAR.Core.DeviceClient.Dispose()
  nameWithType: DeviceClient.Dispose()
- uid: VPEAR.Core.DeviceClient.Dispose*
  name: Dispose
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_Dispose_
  commentId: Overload:VPEAR.Core.DeviceClient.Dispose
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.Dispose
  nameWithType: DeviceClient.Dispose
- uid: VPEAR.Core.DeviceClient.Error
  name: Error
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_Error
  commentId: P:VPEAR.Core.DeviceClient.Error
  fullName: VPEAR.Core.DeviceClient.Error
  nameWithType: DeviceClient.Error
- uid: VPEAR.Core.DeviceClient.Error*
  name: Error
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_Error_
  commentId: Overload:VPEAR.Core.DeviceClient.Error
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.Error
  nameWithType: DeviceClient.Error
- uid: VPEAR.Core.DeviceClient.ErrorMessage
  name: ErrorMessage
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_ErrorMessage
  commentId: P:VPEAR.Core.DeviceClient.ErrorMessage
  fullName: VPEAR.Core.DeviceClient.ErrorMessage
  nameWithType: DeviceClient.ErrorMessage
- uid: VPEAR.Core.DeviceClient.ErrorMessage*
  name: ErrorMessage
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_ErrorMessage_
  commentId: Overload:VPEAR.Core.DeviceClient.ErrorMessage
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.ErrorMessage
  nameWithType: DeviceClient.ErrorMessage
- uid: VPEAR.Core.DeviceClient.Factory
  name: DeviceClient.Factory
  href: api/VPEAR.Core.DeviceClient.Factory.html
  commentId: T:VPEAR.Core.DeviceClient.Factory
  fullName: VPEAR.Core.DeviceClient.Factory
  nameWithType: DeviceClient.Factory
- uid: VPEAR.Core.DeviceClient.GetAsync
  name: GetAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetAsync
  commentId: M:VPEAR.Core.DeviceClient.GetAsync
  fullName: VPEAR.Core.DeviceClient.GetAsync()
  nameWithType: DeviceClient.GetAsync()
- uid: VPEAR.Core.DeviceClient.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetAsync
  nameWithType: DeviceClient.GetAsync
- uid: VPEAR.Core.DeviceClient.GetDeviceAsync
  name: GetDeviceAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetDeviceAsync
  commentId: M:VPEAR.Core.DeviceClient.GetDeviceAsync
  fullName: VPEAR.Core.DeviceClient.GetDeviceAsync()
  nameWithType: DeviceClient.GetDeviceAsync()
- uid: VPEAR.Core.DeviceClient.GetDeviceAsync*
  name: GetDeviceAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetDeviceAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetDeviceAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetDeviceAsync
  nameWithType: DeviceClient.GetDeviceAsync
- uid: VPEAR.Core.DeviceClient.GetFiltersAsync
  name: GetFiltersAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFiltersAsync
  commentId: M:VPEAR.Core.DeviceClient.GetFiltersAsync
  fullName: VPEAR.Core.DeviceClient.GetFiltersAsync()
  nameWithType: DeviceClient.GetFiltersAsync()
- uid: VPEAR.Core.DeviceClient.GetFiltersAsync*
  name: GetFiltersAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFiltersAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetFiltersAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetFiltersAsync
  nameWithType: DeviceClient.GetFiltersAsync
- uid: VPEAR.Core.DeviceClient.GetFirmwareAsync
  name: GetFirmwareAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFirmwareAsync
  commentId: M:VPEAR.Core.DeviceClient.GetFirmwareAsync
  fullName: VPEAR.Core.DeviceClient.GetFirmwareAsync()
  nameWithType: DeviceClient.GetFirmwareAsync()
- uid: VPEAR.Core.DeviceClient.GetFirmwareAsync*
  name: GetFirmwareAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFirmwareAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetFirmwareAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetFirmwareAsync
  nameWithType: DeviceClient.GetFirmwareAsync
- uid: VPEAR.Core.DeviceClient.GetFramesAsync(System.Nullable{System.Int32})
  name: GetFramesAsync(Nullable<Int32>)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFramesAsync_System_Nullable_System_Int32__
  commentId: M:VPEAR.Core.DeviceClient.GetFramesAsync(System.Nullable{System.Int32})
  name.vb: GetFramesAsync(Nullable(Of Int32))
  fullName: VPEAR.Core.DeviceClient.GetFramesAsync(System.Nullable<System.Int32>)
  fullName.vb: VPEAR.Core.DeviceClient.GetFramesAsync(System.Nullable(Of System.Int32))
  nameWithType: DeviceClient.GetFramesAsync(Nullable<Int32>)
  nameWithType.vb: DeviceClient.GetFramesAsync(Nullable(Of Int32))
- uid: VPEAR.Core.DeviceClient.GetFramesAsync*
  name: GetFramesAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFramesAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetFramesAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetFramesAsync
  nameWithType: DeviceClient.GetFramesAsync
- uid: VPEAR.Core.DeviceClient.GetFrequencyAsync
  name: GetFrequencyAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFrequencyAsync
  commentId: M:VPEAR.Core.DeviceClient.GetFrequencyAsync
  fullName: VPEAR.Core.DeviceClient.GetFrequencyAsync()
  nameWithType: DeviceClient.GetFrequencyAsync()
- uid: VPEAR.Core.DeviceClient.GetFrequencyAsync*
  name: GetFrequencyAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFrequencyAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetFrequencyAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetFrequencyAsync
  nameWithType: DeviceClient.GetFrequencyAsync
- uid: VPEAR.Core.DeviceClient.GetPowerAsync
  name: GetPowerAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetPowerAsync
  commentId: M:VPEAR.Core.DeviceClient.GetPowerAsync
  fullName: VPEAR.Core.DeviceClient.GetPowerAsync()
  nameWithType: DeviceClient.GetPowerAsync()
- uid: VPEAR.Core.DeviceClient.GetPowerAsync*
  name: GetPowerAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetPowerAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetPowerAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetPowerAsync
  nameWithType: DeviceClient.GetPowerAsync
- uid: VPEAR.Core.DeviceClient.GetRequiredSensorsAsync
  name: GetRequiredSensorsAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetRequiredSensorsAsync
  commentId: M:VPEAR.Core.DeviceClient.GetRequiredSensorsAsync
  fullName: VPEAR.Core.DeviceClient.GetRequiredSensorsAsync()
  nameWithType: DeviceClient.GetRequiredSensorsAsync()
- uid: VPEAR.Core.DeviceClient.GetRequiredSensorsAsync*
  name: GetRequiredSensorsAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetRequiredSensorsAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetRequiredSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetRequiredSensorsAsync
  nameWithType: DeviceClient.GetRequiredSensorsAsync
- uid: VPEAR.Core.DeviceClient.GetSensorsAsync
  name: GetSensorsAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetSensorsAsync
  commentId: M:VPEAR.Core.DeviceClient.GetSensorsAsync
  fullName: VPEAR.Core.DeviceClient.GetSensorsAsync()
  nameWithType: DeviceClient.GetSensorsAsync()
- uid: VPEAR.Core.DeviceClient.GetSensorsAsync*
  name: GetSensorsAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetSensorsAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetSensorsAsync
  nameWithType: DeviceClient.GetSensorsAsync
- uid: VPEAR.Core.DeviceClient.GetTimeAsync
  name: GetTimeAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetTimeAsync
  commentId: M:VPEAR.Core.DeviceClient.GetTimeAsync
  fullName: VPEAR.Core.DeviceClient.GetTimeAsync()
  nameWithType: DeviceClient.GetTimeAsync()
- uid: VPEAR.Core.DeviceClient.GetTimeAsync*
  name: GetTimeAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetTimeAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetTimeAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetTimeAsync
  nameWithType: DeviceClient.GetTimeAsync
- uid: VPEAR.Core.DeviceClient.GetWifiAsync
  name: GetWifiAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetWifiAsync
  commentId: M:VPEAR.Core.DeviceClient.GetWifiAsync
  fullName: VPEAR.Core.DeviceClient.GetWifiAsync()
  nameWithType: DeviceClient.GetWifiAsync()
- uid: VPEAR.Core.DeviceClient.GetWifiAsync*
  name: GetWifiAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetWifiAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetWifiAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetWifiAsync
  nameWithType: DeviceClient.GetWifiAsync
- uid: VPEAR.Core.DeviceClient.PutFiltersAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  name: PutFiltersAsync(Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutFiltersAsync_System_Nullable_System_Boolean__System_Nullable_System_Boolean__System_Nullable_System_Boolean__
  commentId: M:VPEAR.Core.DeviceClient.PutFiltersAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  name.vb: PutFiltersAsync(Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
  fullName: VPEAR.Core.DeviceClient.PutFiltersAsync(System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>)
  fullName.vb: VPEAR.Core.DeviceClient.PutFiltersAsync(System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean))
  nameWithType: DeviceClient.PutFiltersAsync(Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  nameWithType.vb: DeviceClient.PutFiltersAsync(Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
- uid: VPEAR.Core.DeviceClient.PutFiltersAsync*
  name: PutFiltersAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutFiltersAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.PutFiltersAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.PutFiltersAsync
  nameWithType: DeviceClient.PutFiltersAsync
- uid: VPEAR.Core.DeviceClient.PutFirmwareAsync(System.String,System.String,System.Boolean)
  name: PutFirmwareAsync(String, String, Boolean)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutFirmwareAsync_System_String_System_String_System_Boolean_
  commentId: M:VPEAR.Core.DeviceClient.PutFirmwareAsync(System.String,System.String,System.Boolean)
  fullName: VPEAR.Core.DeviceClient.PutFirmwareAsync(System.String, System.String, System.Boolean)
  nameWithType: DeviceClient.PutFirmwareAsync(String, String, Boolean)
- uid: VPEAR.Core.DeviceClient.PutFirmwareAsync*
  name: PutFirmwareAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutFirmwareAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.PutFirmwareAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.PutFirmwareAsync
  nameWithType: DeviceClient.PutFirmwareAsync
- uid: VPEAR.Core.DeviceClient.PutFrequencyAsync(System.Nullable{System.Int32})
  name: PutFrequencyAsync(Nullable<Int32>)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutFrequencyAsync_System_Nullable_System_Int32__
  commentId: M:VPEAR.Core.DeviceClient.PutFrequencyAsync(System.Nullable{System.Int32})
  name.vb: PutFrequencyAsync(Nullable(Of Int32))
  fullName: VPEAR.Core.DeviceClient.PutFrequencyAsync(System.Nullable<System.Int32>)
  fullName.vb: VPEAR.Core.DeviceClient.PutFrequencyAsync(System.Nullable(Of System.Int32))
  nameWithType: DeviceClient.PutFrequencyAsync(Nullable<Int32>)
  nameWithType.vb: DeviceClient.PutFrequencyAsync(Nullable(Of Int32))
- uid: VPEAR.Core.DeviceClient.PutFrequencyAsync*
  name: PutFrequencyAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutFrequencyAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.PutFrequencyAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.PutFrequencyAsync
  nameWithType: DeviceClient.PutFrequencyAsync
- uid: VPEAR.Core.DeviceClient.PutRequiredSensorsAsync(System.Nullable{System.Int32})
  name: PutRequiredSensorsAsync(Nullable<Int32>)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutRequiredSensorsAsync_System_Nullable_System_Int32__
  commentId: M:VPEAR.Core.DeviceClient.PutRequiredSensorsAsync(System.Nullable{System.Int32})
  name.vb: PutRequiredSensorsAsync(Nullable(Of Int32))
  fullName: VPEAR.Core.DeviceClient.PutRequiredSensorsAsync(System.Nullable<System.Int32>)
  fullName.vb: VPEAR.Core.DeviceClient.PutRequiredSensorsAsync(System.Nullable(Of System.Int32))
  nameWithType: DeviceClient.PutRequiredSensorsAsync(Nullable<Int32>)
  nameWithType.vb: DeviceClient.PutRequiredSensorsAsync(Nullable(Of Int32))
- uid: VPEAR.Core.DeviceClient.PutRequiredSensorsAsync*
  name: PutRequiredSensorsAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutRequiredSensorsAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.PutRequiredSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.PutRequiredSensorsAsync
  nameWithType: DeviceClient.PutRequiredSensorsAsync
- uid: VPEAR.Core.DeviceClient.PutTimeAsync(System.DateTimeOffset)
  name: PutTimeAsync(DateTimeOffset)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutTimeAsync_System_DateTimeOffset_
  commentId: M:VPEAR.Core.DeviceClient.PutTimeAsync(System.DateTimeOffset)
  fullName: VPEAR.Core.DeviceClient.PutTimeAsync(System.DateTimeOffset)
  nameWithType: DeviceClient.PutTimeAsync(DateTimeOffset)
- uid: VPEAR.Core.DeviceClient.PutTimeAsync*
  name: PutTimeAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutTimeAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.PutTimeAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.PutTimeAsync
  nameWithType: DeviceClient.PutTimeAsync
- uid: VPEAR.Core.DeviceClient.PutWifiAsync(System.String,System.String,System.String)
  name: PutWifiAsync(String, String, String)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutWifiAsync_System_String_System_String_System_String_
  commentId: M:VPEAR.Core.DeviceClient.PutWifiAsync(System.String,System.String,System.String)
  fullName: VPEAR.Core.DeviceClient.PutWifiAsync(System.String, System.String, System.String)
  nameWithType: DeviceClient.PutWifiAsync(String, String, String)
- uid: VPEAR.Core.DeviceClient.PutWifiAsync*
  name: PutWifiAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutWifiAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.PutWifiAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.PutWifiAsync
  nameWithType: DeviceClient.PutWifiAsync
- uid: VPEAR.Core.DeviceClient.SyncAsync(VPEAR.Core.Entities.Device,VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid})
  name: SyncAsync(Device, IRepository<Device, Guid>)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_SyncAsync_VPEAR_Core_Entities_Device_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Entities_Device_System_Guid__
  commentId: M:VPEAR.Core.DeviceClient.SyncAsync(VPEAR.Core.Entities.Device,VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid})
  name.vb: SyncAsync(Device, IRepository(Of Device, Guid))
  fullName: VPEAR.Core.DeviceClient.SyncAsync(VPEAR.Core.Entities.Device, VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Entities.Device, System.Guid>)
  fullName.vb: VPEAR.Core.DeviceClient.SyncAsync(VPEAR.Core.Entities.Device, VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Entities.Device, System.Guid))
  nameWithType: DeviceClient.SyncAsync(Device, IRepository<Device, Guid>)
  nameWithType.vb: DeviceClient.SyncAsync(Device, IRepository(Of Device, Guid))
- uid: VPEAR.Core.DeviceClient.SyncAsync*
  name: SyncAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_SyncAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.SyncAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.SyncAsync
  nameWithType: DeviceClient.SyncAsync
- uid: VPEAR.Core.DeviceStatus
  name: DeviceStatus
  href: api/VPEAR.Core.DeviceStatus.html
  commentId: T:VPEAR.Core.DeviceStatus
  fullName: VPEAR.Core.DeviceStatus
  nameWithType: DeviceStatus
- uid: VPEAR.Core.DeviceStatus.Archived
  name: Archived
  href: api/VPEAR.Core.DeviceStatus.html#VPEAR_Core_DeviceStatus_Archived
  commentId: F:VPEAR.Core.DeviceStatus.Archived
  fullName: VPEAR.Core.DeviceStatus.Archived
  nameWithType: DeviceStatus.Archived
- uid: VPEAR.Core.DeviceStatus.None
  name: None
  href: api/VPEAR.Core.DeviceStatus.html#VPEAR_Core_DeviceStatus_None
  commentId: F:VPEAR.Core.DeviceStatus.None
  fullName: VPEAR.Core.DeviceStatus.None
  nameWithType: DeviceStatus.None
- uid: VPEAR.Core.DeviceStatus.NotReachable
  name: NotReachable
  href: api/VPEAR.Core.DeviceStatus.html#VPEAR_Core_DeviceStatus_NotReachable
  commentId: F:VPEAR.Core.DeviceStatus.NotReachable
  fullName: VPEAR.Core.DeviceStatus.NotReachable
  nameWithType: DeviceStatus.NotReachable
- uid: VPEAR.Core.DeviceStatus.Recording
  name: Recording
  href: api/VPEAR.Core.DeviceStatus.html#VPEAR_Core_DeviceStatus_Recording
  commentId: F:VPEAR.Core.DeviceStatus.Recording
  fullName: VPEAR.Core.DeviceStatus.Recording
  nameWithType: DeviceStatus.Recording
- uid: VPEAR.Core.DeviceStatus.Stopped
  name: Stopped
  href: api/VPEAR.Core.DeviceStatus.html#VPEAR_Core_DeviceStatus_Stopped
  commentId: F:VPEAR.Core.DeviceStatus.Stopped
  fullName: VPEAR.Core.DeviceStatus.Stopped
  nameWithType: DeviceStatus.Stopped
- uid: VPEAR.Core.Entities
  name: VPEAR.Core.Entities
  href: api/VPEAR.Core.Entities.html
  commentId: N:VPEAR.Core.Entities
  fullName: VPEAR.Core.Entities
  nameWithType: VPEAR.Core.Entities
- uid: VPEAR.Core.Entities.Device
  name: Device
  href: api/VPEAR.Core.Entities.Device.html
  commentId: T:VPEAR.Core.Entities.Device
  fullName: VPEAR.Core.Entities.Device
  nameWithType: Device
- uid: VPEAR.Core.Entities.Device.Address
  name: Address
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_Address
  commentId: P:VPEAR.Core.Entities.Device.Address
  fullName: VPEAR.Core.Entities.Device.Address
  nameWithType: Device.Address
- uid: VPEAR.Core.Entities.Device.Address*
  name: Address
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_Address_
  commentId: Overload:VPEAR.Core.Entities.Device.Address
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Device.Address
  nameWithType: Device.Address
- uid: VPEAR.Core.Entities.Device.Class
  name: Class
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_Class
  commentId: P:VPEAR.Core.Entities.Device.Class
  fullName: VPEAR.Core.Entities.Device.Class
  nameWithType: Device.Class
- uid: VPEAR.Core.Entities.Device.Class*
  name: Class
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_Class_
  commentId: Overload:VPEAR.Core.Entities.Device.Class
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Device.Class
  nameWithType: Device.Class
- uid: VPEAR.Core.Entities.Device.DisplayName
  name: DisplayName
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_DisplayName
  commentId: P:VPEAR.Core.Entities.Device.DisplayName
  fullName: VPEAR.Core.Entities.Device.DisplayName
  nameWithType: Device.DisplayName
- uid: VPEAR.Core.Entities.Device.DisplayName*
  name: DisplayName
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_DisplayName_
  commentId: Overload:VPEAR.Core.Entities.Device.DisplayName
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Device.DisplayName
  nameWithType: Device.DisplayName
- uid: VPEAR.Core.Entities.Device.Filter
  name: Filter
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_Filter
  commentId: P:VPEAR.Core.Entities.Device.Filter
  fullName: VPEAR.Core.Entities.Device.Filter
  nameWithType: Device.Filter
- uid: VPEAR.Core.Entities.Device.Filter*
  name: Filter
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_Filter_
  commentId: Overload:VPEAR.Core.Entities.Device.Filter
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Device.Filter
  nameWithType: Device.Filter
- uid: VPEAR.Core.Entities.Device.Frames
  name: Frames
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_Frames
  commentId: P:VPEAR.Core.Entities.Device.Frames
  fullName: VPEAR.Core.Entities.Device.Frames
  nameWithType: Device.Frames
- uid: VPEAR.Core.Entities.Device.Frames*
  name: Frames
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_Frames_
  commentId: Overload:VPEAR.Core.Entities.Device.Frames
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Device.Frames
  nameWithType: Device.Frames
- uid: VPEAR.Core.Entities.Device.Frequency
  name: Frequency
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_Frequency
  commentId: P:VPEAR.Core.Entities.Device.Frequency
  fullName: VPEAR.Core.Entities.Device.Frequency
  nameWithType: Device.Frequency
- uid: VPEAR.Core.Entities.Device.Frequency*
  name: Frequency
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_Frequency_
  commentId: Overload:VPEAR.Core.Entities.Device.Frequency
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Device.Frequency
  nameWithType: Device.Frequency
- uid: VPEAR.Core.Entities.Device.FrequencyChanged(System.Nullable{System.Int32})
  name: FrequencyChanged(Nullable<Int32>)
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_FrequencyChanged_System_Nullable_System_Int32__
  commentId: M:VPEAR.Core.Entities.Device.FrequencyChanged(System.Nullable{System.Int32})
  name.vb: FrequencyChanged(Nullable(Of Int32))
  fullName: VPEAR.Core.Entities.Device.FrequencyChanged(System.Nullable<System.Int32>)
  fullName.vb: VPEAR.Core.Entities.Device.FrequencyChanged(System.Nullable(Of System.Int32))
  nameWithType: Device.FrequencyChanged(Nullable<Int32>)
  nameWithType.vb: Device.FrequencyChanged(Nullable(Of Int32))
- uid: VPEAR.Core.Entities.Device.FrequencyChanged*
  name: FrequencyChanged
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_FrequencyChanged_
  commentId: Overload:VPEAR.Core.Entities.Device.FrequencyChanged
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Device.FrequencyChanged
  nameWithType: Device.FrequencyChanged
- uid: VPEAR.Core.Entities.Device.Name
  name: Name
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_Name
  commentId: P:VPEAR.Core.Entities.Device.Name
  fullName: VPEAR.Core.Entities.Device.Name
  nameWithType: Device.Name
- uid: VPEAR.Core.Entities.Device.Name*
  name: Name
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_Name_
  commentId: Overload:VPEAR.Core.Entities.Device.Name
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Device.Name
  nameWithType: Device.Name
- uid: VPEAR.Core.Entities.Device.RequiredSensors
  name: RequiredSensors
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_RequiredSensors
  commentId: P:VPEAR.Core.Entities.Device.RequiredSensors
  fullName: VPEAR.Core.Entities.Device.RequiredSensors
  nameWithType: Device.RequiredSensors
- uid: VPEAR.Core.Entities.Device.RequiredSensors*
  name: RequiredSensors
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_RequiredSensors_
  commentId: Overload:VPEAR.Core.Entities.Device.RequiredSensors
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Device.RequiredSensors
  nameWithType: Device.RequiredSensors
- uid: VPEAR.Core.Entities.Device.Status
  name: Status
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_Status
  commentId: P:VPEAR.Core.Entities.Device.Status
  fullName: VPEAR.Core.Entities.Device.Status
  nameWithType: Device.Status
- uid: VPEAR.Core.Entities.Device.Status*
  name: Status
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_Status_
  commentId: Overload:VPEAR.Core.Entities.Device.Status
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Device.Status
  nameWithType: Device.Status
- uid: VPEAR.Core.Entities.Device.StatusChanged(System.Nullable{VPEAR.Core.DeviceStatus})
  name: StatusChanged(Nullable<DeviceStatus>)
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_StatusChanged_System_Nullable_VPEAR_Core_DeviceStatus__
  commentId: M:VPEAR.Core.Entities.Device.StatusChanged(System.Nullable{VPEAR.Core.DeviceStatus})
  name.vb: StatusChanged(Nullable(Of DeviceStatus))
  fullName: VPEAR.Core.Entities.Device.StatusChanged(System.Nullable<VPEAR.Core.DeviceStatus>)
  fullName.vb: VPEAR.Core.Entities.Device.StatusChanged(System.Nullable(Of VPEAR.Core.DeviceStatus))
  nameWithType: Device.StatusChanged(Nullable<DeviceStatus>)
  nameWithType.vb: Device.StatusChanged(Nullable(Of DeviceStatus))
- uid: VPEAR.Core.Entities.Device.StatusChanged*
  name: StatusChanged
  href: api/VPEAR.Core.Entities.Device.html#VPEAR_Core_Entities_Device_StatusChanged_
  commentId: Overload:VPEAR.Core.Entities.Device.StatusChanged
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Device.StatusChanged
  nameWithType: Device.StatusChanged
- uid: VPEAR.Core.Entities.Filter
  name: Filter
  href: api/VPEAR.Core.Entities.Filter.html
  commentId: T:VPEAR.Core.Entities.Filter
  fullName: VPEAR.Core.Entities.Filter
  nameWithType: Filter
- uid: VPEAR.Core.Entities.Filter.Device
  name: Device
  href: api/VPEAR.Core.Entities.Filter.html#VPEAR_Core_Entities_Filter_Device
  commentId: P:VPEAR.Core.Entities.Filter.Device
  fullName: VPEAR.Core.Entities.Filter.Device
  nameWithType: Filter.Device
- uid: VPEAR.Core.Entities.Filter.Device*
  name: Device
  href: api/VPEAR.Core.Entities.Filter.html#VPEAR_Core_Entities_Filter_Device_
  commentId: Overload:VPEAR.Core.Entities.Filter.Device
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Filter.Device
  nameWithType: Filter.Device
- uid: VPEAR.Core.Entities.Filter.DeviceForeignKey
  name: DeviceForeignKey
  href: api/VPEAR.Core.Entities.Filter.html#VPEAR_Core_Entities_Filter_DeviceForeignKey
  commentId: P:VPEAR.Core.Entities.Filter.DeviceForeignKey
  fullName: VPEAR.Core.Entities.Filter.DeviceForeignKey
  nameWithType: Filter.DeviceForeignKey
- uid: VPEAR.Core.Entities.Filter.DeviceForeignKey*
  name: DeviceForeignKey
  href: api/VPEAR.Core.Entities.Filter.html#VPEAR_Core_Entities_Filter_DeviceForeignKey_
  commentId: Overload:VPEAR.Core.Entities.Filter.DeviceForeignKey
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Filter.DeviceForeignKey
  nameWithType: Filter.DeviceForeignKey
- uid: VPEAR.Core.Entities.Filter.Frames
  name: Frames
  href: api/VPEAR.Core.Entities.Filter.html#VPEAR_Core_Entities_Filter_Frames
  commentId: P:VPEAR.Core.Entities.Filter.Frames
  fullName: VPEAR.Core.Entities.Filter.Frames
  nameWithType: Filter.Frames
- uid: VPEAR.Core.Entities.Filter.Frames*
  name: Frames
  href: api/VPEAR.Core.Entities.Filter.html#VPEAR_Core_Entities_Filter_Frames_
  commentId: Overload:VPEAR.Core.Entities.Filter.Frames
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Filter.Frames
  nameWithType: Filter.Frames
- uid: VPEAR.Core.Entities.Filter.Noise
  name: Noise
  href: api/VPEAR.Core.Entities.Filter.html#VPEAR_Core_Entities_Filter_Noise
  commentId: P:VPEAR.Core.Entities.Filter.Noise
  fullName: VPEAR.Core.Entities.Filter.Noise
  nameWithType: Filter.Noise
- uid: VPEAR.Core.Entities.Filter.Noise*
  name: Noise
  href: api/VPEAR.Core.Entities.Filter.html#VPEAR_Core_Entities_Filter_Noise_
  commentId: Overload:VPEAR.Core.Entities.Filter.Noise
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Filter.Noise
  nameWithType: Filter.Noise
- uid: VPEAR.Core.Entities.Filter.Smooth
  name: Smooth
  href: api/VPEAR.Core.Entities.Filter.html#VPEAR_Core_Entities_Filter_Smooth
  commentId: P:VPEAR.Core.Entities.Filter.Smooth
  fullName: VPEAR.Core.Entities.Filter.Smooth
  nameWithType: Filter.Smooth
- uid: VPEAR.Core.Entities.Filter.Smooth*
  name: Smooth
  href: api/VPEAR.Core.Entities.Filter.html#VPEAR_Core_Entities_Filter_Smooth_
  commentId: Overload:VPEAR.Core.Entities.Filter.Smooth
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Filter.Smooth
  nameWithType: Filter.Smooth
- uid: VPEAR.Core.Entities.Filter.Spot
  name: Spot
  href: api/VPEAR.Core.Entities.Filter.html#VPEAR_Core_Entities_Filter_Spot
  commentId: P:VPEAR.Core.Entities.Filter.Spot
  fullName: VPEAR.Core.Entities.Filter.Spot
  nameWithType: Filter.Spot
- uid: VPEAR.Core.Entities.Filter.Spot*
  name: Spot
  href: api/VPEAR.Core.Entities.Filter.html#VPEAR_Core_Entities_Filter_Spot_
  commentId: Overload:VPEAR.Core.Entities.Filter.Spot
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Filter.Spot
  nameWithType: Filter.Spot
- uid: VPEAR.Core.Entities.Frame
  name: Frame
  href: api/VPEAR.Core.Entities.Frame.html
  commentId: T:VPEAR.Core.Entities.Frame
  fullName: VPEAR.Core.Entities.Frame
  nameWithType: Frame
- uid: VPEAR.Core.Entities.Frame.Device
  name: Device
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_Device
  commentId: P:VPEAR.Core.Entities.Frame.Device
  fullName: VPEAR.Core.Entities.Frame.Device
  nameWithType: Frame.Device
- uid: VPEAR.Core.Entities.Frame.Device*
  name: Device
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_Device_
  commentId: Overload:VPEAR.Core.Entities.Frame.Device
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Frame.Device
  nameWithType: Frame.Device
- uid: VPEAR.Core.Entities.Frame.DeviceForeignKey
  name: DeviceForeignKey
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_DeviceForeignKey
  commentId: P:VPEAR.Core.Entities.Frame.DeviceForeignKey
  fullName: VPEAR.Core.Entities.Frame.DeviceForeignKey
  nameWithType: Frame.DeviceForeignKey
- uid: VPEAR.Core.Entities.Frame.DeviceForeignKey*
  name: DeviceForeignKey
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_DeviceForeignKey_
  commentId: Overload:VPEAR.Core.Entities.Frame.DeviceForeignKey
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Frame.DeviceForeignKey
  nameWithType: Frame.DeviceForeignKey
- uid: VPEAR.Core.Entities.Frame.Equals(VPEAR.Core.Entities.Frame)
  name: Equals(Frame)
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_Equals_VPEAR_Core_Entities_Frame_
  commentId: M:VPEAR.Core.Entities.Frame.Equals(VPEAR.Core.Entities.Frame)
  fullName: VPEAR.Core.Entities.Frame.Equals(VPEAR.Core.Entities.Frame)
  nameWithType: Frame.Equals(Frame)
- uid: VPEAR.Core.Entities.Frame.Equals*
  name: Equals
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_Equals_
  commentId: Overload:VPEAR.Core.Entities.Frame.Equals
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Frame.Equals
  nameWithType: Frame.Equals
- uid: VPEAR.Core.Entities.Frame.Filter
  name: Filter
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_Filter
  commentId: P:VPEAR.Core.Entities.Frame.Filter
  fullName: VPEAR.Core.Entities.Frame.Filter
  nameWithType: Frame.Filter
- uid: VPEAR.Core.Entities.Frame.Filter*
  name: Filter
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_Filter_
  commentId: Overload:VPEAR.Core.Entities.Frame.Filter
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Frame.Filter
  nameWithType: Frame.Filter
- uid: VPEAR.Core.Entities.Frame.FilterForeignKey
  name: FilterForeignKey
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_FilterForeignKey
  commentId: P:VPEAR.Core.Entities.Frame.FilterForeignKey
  fullName: VPEAR.Core.Entities.Frame.FilterForeignKey
  nameWithType: Frame.FilterForeignKey
- uid: VPEAR.Core.Entities.Frame.FilterForeignKey*
  name: FilterForeignKey
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_FilterForeignKey_
  commentId: Overload:VPEAR.Core.Entities.Frame.FilterForeignKey
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Frame.FilterForeignKey
  nameWithType: Frame.FilterForeignKey
- uid: VPEAR.Core.Entities.Frame.GetHashCode
  name: GetHashCode()
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_GetHashCode
  commentId: M:VPEAR.Core.Entities.Frame.GetHashCode
  fullName: VPEAR.Core.Entities.Frame.GetHashCode()
  nameWithType: Frame.GetHashCode()
- uid: VPEAR.Core.Entities.Frame.GetHashCode*
  name: GetHashCode
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_GetHashCode_
  commentId: Overload:VPEAR.Core.Entities.Frame.GetHashCode
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Frame.GetHashCode
  nameWithType: Frame.GetHashCode
- uid: VPEAR.Core.Entities.Frame.Index
  name: Index
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_Index
  commentId: P:VPEAR.Core.Entities.Frame.Index
  fullName: VPEAR.Core.Entities.Frame.Index
  nameWithType: Frame.Index
- uid: VPEAR.Core.Entities.Frame.Index*
  name: Index
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_Index_
  commentId: Overload:VPEAR.Core.Entities.Frame.Index
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Frame.Index
  nameWithType: Frame.Index
- uid: VPEAR.Core.Entities.Frame.Readings
  name: Readings
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_Readings
  commentId: P:VPEAR.Core.Entities.Frame.Readings
  fullName: VPEAR.Core.Entities.Frame.Readings
  nameWithType: Frame.Readings
- uid: VPEAR.Core.Entities.Frame.Readings*
  name: Readings
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_Readings_
  commentId: Overload:VPEAR.Core.Entities.Frame.Readings
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Frame.Readings
  nameWithType: Frame.Readings
- uid: VPEAR.Core.Entities.Frame.Time
  name: Time
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_Time
  commentId: P:VPEAR.Core.Entities.Frame.Time
  fullName: VPEAR.Core.Entities.Frame.Time
  nameWithType: Frame.Time
- uid: VPEAR.Core.Entities.Frame.Time*
  name: Time
  href: api/VPEAR.Core.Entities.Frame.html#VPEAR_Core_Entities_Frame_Time_
  commentId: Overload:VPEAR.Core.Entities.Frame.Time
  isSpec: "True"
  fullName: VPEAR.Core.Entities.Frame.Time
  nameWithType: Frame.Time
- uid: VPEAR.Core.Events
  name: VPEAR.Core.Events
  href: api/VPEAR.Core.Events.html
  commentId: N:VPEAR.Core.Events
  fullName: VPEAR.Core.Events
  nameWithType: VPEAR.Core.Events
- uid: VPEAR.Core.Events.DeviceFrequencyChangedEvent
  name: DeviceFrequencyChangedEvent
  href: api/VPEAR.Core.Events.DeviceFrequencyChangedEvent.html
  commentId: T:VPEAR.Core.Events.DeviceFrequencyChangedEvent
  fullName: VPEAR.Core.Events.DeviceFrequencyChangedEvent
  nameWithType: DeviceFrequencyChangedEvent
- uid: VPEAR.Core.Events.DeviceFrequencyChangedEvent.#ctor(VPEAR.Core.Entities.Device)
  name: DeviceFrequencyChangedEvent(Device)
  href: api/VPEAR.Core.Events.DeviceFrequencyChangedEvent.html#VPEAR_Core_Events_DeviceFrequencyChangedEvent__ctor_VPEAR_Core_Entities_Device_
  commentId: M:VPEAR.Core.Events.DeviceFrequencyChangedEvent.#ctor(VPEAR.Core.Entities.Device)
  fullName: VPEAR.Core.Events.DeviceFrequencyChangedEvent.DeviceFrequencyChangedEvent(VPEAR.Core.Entities.Device)
  nameWithType: DeviceFrequencyChangedEvent.DeviceFrequencyChangedEvent(Device)
- uid: VPEAR.Core.Events.DeviceFrequencyChangedEvent.#ctor*
  name: DeviceFrequencyChangedEvent
  href: api/VPEAR.Core.Events.DeviceFrequencyChangedEvent.html#VPEAR_Core_Events_DeviceFrequencyChangedEvent__ctor_
  commentId: Overload:VPEAR.Core.Events.DeviceFrequencyChangedEvent.#ctor
  isSpec: "True"
  fullName: VPEAR.Core.Events.DeviceFrequencyChangedEvent.DeviceFrequencyChangedEvent
  nameWithType: DeviceFrequencyChangedEvent.DeviceFrequencyChangedEvent
- uid: VPEAR.Core.Events.DeviceFrequencyChangedEvent.OriginalValue
  name: OriginalValue
  href: api/VPEAR.Core.Events.DeviceFrequencyChangedEvent.html#VPEAR_Core_Events_DeviceFrequencyChangedEvent_OriginalValue
  commentId: P:VPEAR.Core.Events.DeviceFrequencyChangedEvent.OriginalValue
  fullName: VPEAR.Core.Events.DeviceFrequencyChangedEvent.OriginalValue
  nameWithType: DeviceFrequencyChangedEvent.OriginalValue
- uid: VPEAR.Core.Events.DeviceFrequencyChangedEvent.OriginalValue*
  name: OriginalValue
  href: api/VPEAR.Core.Events.DeviceFrequencyChangedEvent.html#VPEAR_Core_Events_DeviceFrequencyChangedEvent_OriginalValue_
  commentId: Overload:VPEAR.Core.Events.DeviceFrequencyChangedEvent.OriginalValue
  isSpec: "True"
  fullName: VPEAR.Core.Events.DeviceFrequencyChangedEvent.OriginalValue
  nameWithType: DeviceFrequencyChangedEvent.OriginalValue
- uid: VPEAR.Core.Events.DeviceStatusChangedEvent
  name: DeviceStatusChangedEvent
  href: api/VPEAR.Core.Events.DeviceStatusChangedEvent.html
  commentId: T:VPEAR.Core.Events.DeviceStatusChangedEvent
  fullName: VPEAR.Core.Events.DeviceStatusChangedEvent
  nameWithType: DeviceStatusChangedEvent
- uid: VPEAR.Core.Events.DeviceStatusChangedEvent.#ctor(VPEAR.Core.Entities.Device)
  name: DeviceStatusChangedEvent(Device)
  href: api/VPEAR.Core.Events.DeviceStatusChangedEvent.html#VPEAR_Core_Events_DeviceStatusChangedEvent__ctor_VPEAR_Core_Entities_Device_
  commentId: M:VPEAR.Core.Events.DeviceStatusChangedEvent.#ctor(VPEAR.Core.Entities.Device)
  fullName: VPEAR.Core.Events.DeviceStatusChangedEvent.DeviceStatusChangedEvent(VPEAR.Core.Entities.Device)
  nameWithType: DeviceStatusChangedEvent.DeviceStatusChangedEvent(Device)
- uid: VPEAR.Core.Events.DeviceStatusChangedEvent.#ctor*
  name: DeviceStatusChangedEvent
  href: api/VPEAR.Core.Events.DeviceStatusChangedEvent.html#VPEAR_Core_Events_DeviceStatusChangedEvent__ctor_
  commentId: Overload:VPEAR.Core.Events.DeviceStatusChangedEvent.#ctor
  isSpec: "True"
  fullName: VPEAR.Core.Events.DeviceStatusChangedEvent.DeviceStatusChangedEvent
  nameWithType: DeviceStatusChangedEvent.DeviceStatusChangedEvent
- uid: VPEAR.Core.Events.DeviceStatusChangedEvent.OriginalValue
  name: OriginalValue
  href: api/VPEAR.Core.Events.DeviceStatusChangedEvent.html#VPEAR_Core_Events_DeviceStatusChangedEvent_OriginalValue
  commentId: P:VPEAR.Core.Events.DeviceStatusChangedEvent.OriginalValue
  fullName: VPEAR.Core.Events.DeviceStatusChangedEvent.OriginalValue
  nameWithType: DeviceStatusChangedEvent.OriginalValue
- uid: VPEAR.Core.Events.DeviceStatusChangedEvent.OriginalValue*
  name: OriginalValue
  href: api/VPEAR.Core.Events.DeviceStatusChangedEvent.html#VPEAR_Core_Events_DeviceStatusChangedEvent_OriginalValue_
  commentId: Overload:VPEAR.Core.Events.DeviceStatusChangedEvent.OriginalValue
  isSpec: "True"
  fullName: VPEAR.Core.Events.DeviceStatusChangedEvent.OriginalValue
  nameWithType: DeviceStatusChangedEvent.OriginalValue
- uid: VPEAR.Core.Extensions
  name: VPEAR.Core.Extensions
  href: api/VPEAR.Core.Extensions.html
  commentId: N:VPEAR.Core.Extensions
  fullName: VPEAR.Core.Extensions
  nameWithType: VPEAR.Core.Extensions
- uid: VPEAR.Core.Extensions.IPAddressExtensions
  name: IPAddressExtensions
  href: api/VPEAR.Core.Extensions.IPAddressExtensions.html
  commentId: T:VPEAR.Core.Extensions.IPAddressExtensions
  fullName: VPEAR.Core.Extensions.IPAddressExtensions
  nameWithType: IPAddressExtensions
- uid: VPEAR.Core.Extensions.IPAddressExtensions.GetBroadcastAddress(System.Net.IPAddress,System.Net.IPAddress)
  name: GetBroadcastAddress(IPAddress, IPAddress)
  href: api/VPEAR.Core.Extensions.IPAddressExtensions.html#VPEAR_Core_Extensions_IPAddressExtensions_GetBroadcastAddress_System_Net_IPAddress_System_Net_IPAddress_
  commentId: M:VPEAR.Core.Extensions.IPAddressExtensions.GetBroadcastAddress(System.Net.IPAddress,System.Net.IPAddress)
  fullName: VPEAR.Core.Extensions.IPAddressExtensions.GetBroadcastAddress(System.Net.IPAddress, System.Net.IPAddress)
  nameWithType: IPAddressExtensions.GetBroadcastAddress(IPAddress, IPAddress)
- uid: VPEAR.Core.Extensions.IPAddressExtensions.GetBroadcastAddress*
  name: GetBroadcastAddress
  href: api/VPEAR.Core.Extensions.IPAddressExtensions.html#VPEAR_Core_Extensions_IPAddressExtensions_GetBroadcastAddress_
  commentId: Overload:VPEAR.Core.Extensions.IPAddressExtensions.GetBroadcastAddress
  isSpec: "True"
  fullName: VPEAR.Core.Extensions.IPAddressExtensions.GetBroadcastAddress
  nameWithType: IPAddressExtensions.GetBroadcastAddress
- uid: VPEAR.Core.Extensions.IPAddressExtensions.GetNetworkAddress(System.Net.IPAddress,System.Net.IPAddress)
  name: GetNetworkAddress(IPAddress, IPAddress)
  href: api/VPEAR.Core.Extensions.IPAddressExtensions.html#VPEAR_Core_Extensions_IPAddressExtensions_GetNetworkAddress_System_Net_IPAddress_System_Net_IPAddress_
  commentId: M:VPEAR.Core.Extensions.IPAddressExtensions.GetNetworkAddress(System.Net.IPAddress,System.Net.IPAddress)
  fullName: VPEAR.Core.Extensions.IPAddressExtensions.GetNetworkAddress(System.Net.IPAddress, System.Net.IPAddress)
  nameWithType: IPAddressExtensions.GetNetworkAddress(IPAddress, IPAddress)
- uid: VPEAR.Core.Extensions.IPAddressExtensions.GetNetworkAddress*
  name: GetNetworkAddress
  href: api/VPEAR.Core.Extensions.IPAddressExtensions.html#VPEAR_Core_Extensions_IPAddressExtensions_GetNetworkAddress_
  commentId: Overload:VPEAR.Core.Extensions.IPAddressExtensions.GetNetworkAddress
  isSpec: "True"
  fullName: VPEAR.Core.Extensions.IPAddressExtensions.GetNetworkAddress
  nameWithType: IPAddressExtensions.GetNetworkAddress
- uid: VPEAR.Core.Extensions.IPAddressExtensions.IsIPv4(System.Net.IPAddress)
  name: IsIPv4(IPAddress)
  href: api/VPEAR.Core.Extensions.IPAddressExtensions.html#VPEAR_Core_Extensions_IPAddressExtensions_IsIPv4_System_Net_IPAddress_
  commentId: M:VPEAR.Core.Extensions.IPAddressExtensions.IsIPv4(System.Net.IPAddress)
  fullName: VPEAR.Core.Extensions.IPAddressExtensions.IsIPv4(System.Net.IPAddress)
  nameWithType: IPAddressExtensions.IsIPv4(IPAddress)
- uid: VPEAR.Core.Extensions.IPAddressExtensions.IsIPv4*
  name: IsIPv4
  href: api/VPEAR.Core.Extensions.IPAddressExtensions.html#VPEAR_Core_Extensions_IPAddressExtensions_IsIPv4_
  commentId: Overload:VPEAR.Core.Extensions.IPAddressExtensions.IsIPv4
  isSpec: "True"
  fullName: VPEAR.Core.Extensions.IPAddressExtensions.IsIPv4
  nameWithType: IPAddressExtensions.IsIPv4
- uid: VPEAR.Core.Extensions.IPAddressExtensions.IsIPv4SubnetMask(System.Net.IPAddress)
  name: IsIPv4SubnetMask(IPAddress)
  href: api/VPEAR.Core.Extensions.IPAddressExtensions.html#VPEAR_Core_Extensions_IPAddressExtensions_IsIPv4SubnetMask_System_Net_IPAddress_
  commentId: M:VPEAR.Core.Extensions.IPAddressExtensions.IsIPv4SubnetMask(System.Net.IPAddress)
  fullName: VPEAR.Core.Extensions.IPAddressExtensions.IsIPv4SubnetMask(System.Net.IPAddress)
  nameWithType: IPAddressExtensions.IsIPv4SubnetMask(IPAddress)
- uid: VPEAR.Core.Extensions.IPAddressExtensions.IsIPv4SubnetMask*
  name: IsIPv4SubnetMask
  href: api/VPEAR.Core.Extensions.IPAddressExtensions.html#VPEAR_Core_Extensions_IPAddressExtensions_IsIPv4SubnetMask_
  commentId: Overload:VPEAR.Core.Extensions.IPAddressExtensions.IsIPv4SubnetMask
  isSpec: "True"
  fullName: VPEAR.Core.Extensions.IPAddressExtensions.IsIPv4SubnetMask
  nameWithType: IPAddressExtensions.IsIPv4SubnetMask
- uid: VPEAR.Core.Extensions.StringExtensions
  name: StringExtensions
  href: api/VPEAR.Core.Extensions.StringExtensions.html
  commentId: T:VPEAR.Core.Extensions.StringExtensions
  fullName: VPEAR.Core.Extensions.StringExtensions
  nameWithType: StringExtensions
- uid: VPEAR.Core.Extensions.StringExtensions.FromJsonString*
  name: FromJsonString
  href: api/VPEAR.Core.Extensions.StringExtensions.html#VPEAR_Core_Extensions_StringExtensions_FromJsonString_
  commentId: Overload:VPEAR.Core.Extensions.StringExtensions.FromJsonString
  isSpec: "True"
  fullName: VPEAR.Core.Extensions.StringExtensions.FromJsonString
  nameWithType: StringExtensions.FromJsonString
- uid: VPEAR.Core.Extensions.StringExtensions.FromJsonString``1(System.String)
  name: FromJsonString<T>(String)
  href: api/VPEAR.Core.Extensions.StringExtensions.html#VPEAR_Core_Extensions_StringExtensions_FromJsonString__1_System_String_
  commentId: M:VPEAR.Core.Extensions.StringExtensions.FromJsonString``1(System.String)
  name.vb: FromJsonString(Of T)(String)
  fullName: VPEAR.Core.Extensions.StringExtensions.FromJsonString<T>(System.String)
  fullName.vb: VPEAR.Core.Extensions.StringExtensions.FromJsonString(Of T)(System.String)
  nameWithType: StringExtensions.FromJsonString<T>(String)
  nameWithType.vb: StringExtensions.FromJsonString(Of T)(String)
- uid: VPEAR.Core.Extensions.TypeExtensions
  name: TypeExtensions
  href: api/VPEAR.Core.Extensions.TypeExtensions.html
  commentId: T:VPEAR.Core.Extensions.TypeExtensions
  fullName: VPEAR.Core.Extensions.TypeExtensions
  nameWithType: TypeExtensions
- uid: VPEAR.Core.Extensions.TypeExtensions.Clone*
  name: Clone
  href: api/VPEAR.Core.Extensions.TypeExtensions.html#VPEAR_Core_Extensions_TypeExtensions_Clone_
  commentId: Overload:VPEAR.Core.Extensions.TypeExtensions.Clone
  isSpec: "True"
  fullName: VPEAR.Core.Extensions.TypeExtensions.Clone
  nameWithType: TypeExtensions.Clone
- uid: VPEAR.Core.Extensions.TypeExtensions.Clone``1(``0)
  name: Clone<T>(T)
  href: api/VPEAR.Core.Extensions.TypeExtensions.html#VPEAR_Core_Extensions_TypeExtensions_Clone__1___0_
  commentId: M:VPEAR.Core.Extensions.TypeExtensions.Clone``1(``0)
  name.vb: Clone(Of T)(T)
  fullName: VPEAR.Core.Extensions.TypeExtensions.Clone<T>(T)
  fullName.vb: VPEAR.Core.Extensions.TypeExtensions.Clone(Of T)(T)
  nameWithType: TypeExtensions.Clone<T>(T)
  nameWithType.vb: TypeExtensions.Clone(Of T)(T)
- uid: VPEAR.Core.Extensions.TypeExtensions.ToJsonString*
  name: ToJsonString
  href: api/VPEAR.Core.Extensions.TypeExtensions.html#VPEAR_Core_Extensions_TypeExtensions_ToJsonString_
  commentId: Overload:VPEAR.Core.Extensions.TypeExtensions.ToJsonString
  isSpec: "True"
  fullName: VPEAR.Core.Extensions.TypeExtensions.ToJsonString
  nameWithType: TypeExtensions.ToJsonString
- uid: VPEAR.Core.Extensions.TypeExtensions.ToJsonString``1(``0)
  name: ToJsonString<T>(T)
  href: api/VPEAR.Core.Extensions.TypeExtensions.html#VPEAR_Core_Extensions_TypeExtensions_ToJsonString__1___0_
  commentId: M:VPEAR.Core.Extensions.TypeExtensions.ToJsonString``1(``0)
  name.vb: ToJsonString(Of T)(T)
  fullName: VPEAR.Core.Extensions.TypeExtensions.ToJsonString<T>(T)
  fullName.vb: VPEAR.Core.Extensions.TypeExtensions.ToJsonString(Of T)(T)
  nameWithType: TypeExtensions.ToJsonString<T>(T)
  nameWithType.vb: TypeExtensions.ToJsonString(Of T)(T)
- uid: VPEAR.Core.Null
  name: "Null"
  href: api/VPEAR.Core.Null.html
  commentId: T:VPEAR.Core.Null
  fullName: VPEAR.Core.Null
  nameWithType: "Null"
- uid: VPEAR.Core.Null.#ctor
  name: Null()
  href: api/VPEAR.Core.Null.html#VPEAR_Core_Null__ctor
  commentId: M:VPEAR.Core.Null.#ctor
  fullName: VPEAR.Core.Null.Null()
  nameWithType: Null.Null()
- uid: VPEAR.Core.Null.#ctor*
  name: "Null"
  href: api/VPEAR.Core.Null.html#VPEAR_Core_Null__ctor_
  commentId: Overload:VPEAR.Core.Null.#ctor
  isSpec: "True"
  fullName: VPEAR.Core.Null.Null
  nameWithType: Null.Null
- uid: VPEAR.Core.Result`1
  name: Result<TSuccess>
  href: api/VPEAR.Core.Result-1.html
  commentId: T:VPEAR.Core.Result`1
  name.vb: Result(Of TSuccess)
  fullName: VPEAR.Core.Result<TSuccess>
  fullName.vb: VPEAR.Core.Result(Of TSuccess)
  nameWithType: Result<TSuccess>
  nameWithType.vb: Result(Of TSuccess)
- uid: VPEAR.Core.Result`1.#ctor(System.Net.HttpStatusCode)
  name: Result(HttpStatusCode)
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1__ctor_System_Net_HttpStatusCode_
  commentId: M:VPEAR.Core.Result`1.#ctor(System.Net.HttpStatusCode)
  fullName: VPEAR.Core.Result<TSuccess>.Result(System.Net.HttpStatusCode)
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Result(System.Net.HttpStatusCode)
  nameWithType: Result<TSuccess>.Result(HttpStatusCode)
  nameWithType.vb: Result(Of TSuccess).Result(HttpStatusCode)
- uid: VPEAR.Core.Result`1.#ctor(System.Net.HttpStatusCode,`0)
  name: Result(HttpStatusCode, TSuccess)
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1__ctor_System_Net_HttpStatusCode__0_
  commentId: M:VPEAR.Core.Result`1.#ctor(System.Net.HttpStatusCode,`0)
  fullName: VPEAR.Core.Result<TSuccess>.Result(System.Net.HttpStatusCode, TSuccess)
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Result(System.Net.HttpStatusCode, TSuccess)
  nameWithType: Result<TSuccess>.Result(HttpStatusCode, TSuccess)
  nameWithType.vb: Result(Of TSuccess).Result(HttpStatusCode, TSuccess)
- uid: VPEAR.Core.Result`1.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{System.String})
  name: Result(HttpStatusCode, IEnumerable<String>)
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1__ctor_System_Net_HttpStatusCode_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:VPEAR.Core.Result`1.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{System.String})
  name.vb: Result(HttpStatusCode, IEnumerable(Of String))
  fullName: VPEAR.Core.Result<TSuccess>.Result(System.Net.HttpStatusCode, System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Result(System.Net.HttpStatusCode, System.Collections.Generic.IEnumerable(Of System.String))
  nameWithType: Result<TSuccess>.Result(HttpStatusCode, IEnumerable<String>)
  nameWithType.vb: Result(Of TSuccess).Result(HttpStatusCode, IEnumerable(Of String))
- uid: VPEAR.Core.Result`1.#ctor(System.Net.HttpStatusCode,System.String)
  name: Result(HttpStatusCode, String)
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1__ctor_System_Net_HttpStatusCode_System_String_
  commentId: M:VPEAR.Core.Result`1.#ctor(System.Net.HttpStatusCode,System.String)
  fullName: VPEAR.Core.Result<TSuccess>.Result(System.Net.HttpStatusCode, System.String)
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Result(System.Net.HttpStatusCode, System.String)
  nameWithType: Result<TSuccess>.Result(HttpStatusCode, String)
  nameWithType.vb: Result(Of TSuccess).Result(HttpStatusCode, String)
- uid: VPEAR.Core.Result`1.#ctor*
  name: Result
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1__ctor_
  commentId: Overload:VPEAR.Core.Result`1.#ctor
  isSpec: "True"
  fullName: VPEAR.Core.Result<TSuccess>.Result
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Result
  nameWithType: Result<TSuccess>.Result
  nameWithType.vb: Result(Of TSuccess).Result
- uid: VPEAR.Core.Result`1.Error
  name: Error
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_Error
  commentId: P:VPEAR.Core.Result`1.Error
  fullName: VPEAR.Core.Result<TSuccess>.Error
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Error
  nameWithType: Result<TSuccess>.Error
  nameWithType.vb: Result(Of TSuccess).Error
- uid: VPEAR.Core.Result`1.Error*
  name: Error
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_Error_
  commentId: Overload:VPEAR.Core.Result`1.Error
  isSpec: "True"
  fullName: VPEAR.Core.Result<TSuccess>.Error
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Error
  nameWithType: Result<TSuccess>.Error
  nameWithType.vb: Result(Of TSuccess).Error
- uid: VPEAR.Core.Result`1.IsSuccess
  name: IsSuccess
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_IsSuccess
  commentId: P:VPEAR.Core.Result`1.IsSuccess
  fullName: VPEAR.Core.Result<TSuccess>.IsSuccess
  fullName.vb: VPEAR.Core.Result(Of TSuccess).IsSuccess
  nameWithType: Result<TSuccess>.IsSuccess
  nameWithType.vb: Result(Of TSuccess).IsSuccess
- uid: VPEAR.Core.Result`1.IsSuccess*
  name: IsSuccess
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_IsSuccess_
  commentId: Overload:VPEAR.Core.Result`1.IsSuccess
  isSpec: "True"
  fullName: VPEAR.Core.Result<TSuccess>.IsSuccess
  fullName.vb: VPEAR.Core.Result(Of TSuccess).IsSuccess
  nameWithType: Result<TSuccess>.IsSuccess
  nameWithType.vb: Result(Of TSuccess).IsSuccess
- uid: VPEAR.Core.Result`1.StatusCode
  name: StatusCode
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_StatusCode
  commentId: P:VPEAR.Core.Result`1.StatusCode
  fullName: VPEAR.Core.Result<TSuccess>.StatusCode
  fullName.vb: VPEAR.Core.Result(Of TSuccess).StatusCode
  nameWithType: Result<TSuccess>.StatusCode
  nameWithType.vb: Result(Of TSuccess).StatusCode
- uid: VPEAR.Core.Result`1.StatusCode*
  name: StatusCode
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_StatusCode_
  commentId: Overload:VPEAR.Core.Result`1.StatusCode
  isSpec: "True"
  fullName: VPEAR.Core.Result<TSuccess>.StatusCode
  fullName.vb: VPEAR.Core.Result(Of TSuccess).StatusCode
  nameWithType: Result<TSuccess>.StatusCode
  nameWithType.vb: Result(Of TSuccess).StatusCode
- uid: VPEAR.Core.Result`1.Value
  name: Value
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_Value
  commentId: P:VPEAR.Core.Result`1.Value
  fullName: VPEAR.Core.Result<TSuccess>.Value
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Value
  nameWithType: Result<TSuccess>.Value
  nameWithType.vb: Result(Of TSuccess).Value
- uid: VPEAR.Core.Result`1.Value*
  name: Value
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_Value_
  commentId: Overload:VPEAR.Core.Result`1.Value
  isSpec: "True"
  fullName: VPEAR.Core.Result<TSuccess>.Value
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Value
  nameWithType: Result<TSuccess>.Value
  nameWithType.vb: Result(Of TSuccess).Value
- uid: VPEAR.Core.VPEARClient
  name: VPEARClient
  href: api/VPEAR.Core.VPEARClient.html
  commentId: T:VPEAR.Core.VPEARClient
  fullName: VPEAR.Core.VPEARClient
  nameWithType: VPEARClient
- uid: VPEAR.Core.VPEARClient.#ctor(System.String,System.Net.Http.HttpClient)
  name: VPEARClient(String, HttpClient)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient__ctor_System_String_System_Net_Http_HttpClient_
  commentId: M:VPEAR.Core.VPEARClient.#ctor(System.String,System.Net.Http.HttpClient)
  fullName: VPEAR.Core.VPEARClient.VPEARClient(System.String, System.Net.Http.HttpClient)
  nameWithType: VPEARClient.VPEARClient(String, HttpClient)
- uid: VPEAR.Core.VPEARClient.#ctor*
  name: VPEARClient
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient__ctor_
  commentId: Overload:VPEAR.Core.VPEARClient.#ctor
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.VPEARClient
  nameWithType: VPEARClient.VPEARClient
- uid: VPEAR.Core.VPEARClient.CanConnectAsync
  name: CanConnectAsync()
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_CanConnectAsync
  commentId: M:VPEAR.Core.VPEARClient.CanConnectAsync
  fullName: VPEAR.Core.VPEARClient.CanConnectAsync()
  nameWithType: VPEARClient.CanConnectAsync()
- uid: VPEAR.Core.VPEARClient.CanConnectAsync*
  name: CanConnectAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_CanConnectAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.CanConnectAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.CanConnectAsync
  nameWithType: VPEARClient.CanConnectAsync
- uid: VPEAR.Core.VPEARClient.DeleteDeviceAsync(System.String)
  name: DeleteDeviceAsync(String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_DeleteDeviceAsync_System_String_
  commentId: M:VPEAR.Core.VPEARClient.DeleteDeviceAsync(System.String)
  fullName: VPEAR.Core.VPEARClient.DeleteDeviceAsync(System.String)
  nameWithType: VPEARClient.DeleteDeviceAsync(String)
- uid: VPEAR.Core.VPEARClient.DeleteDeviceAsync*
  name: DeleteDeviceAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_DeleteDeviceAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.DeleteDeviceAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.DeleteDeviceAsync
  nameWithType: VPEARClient.DeleteDeviceAsync
- uid: VPEAR.Core.VPEARClient.DeleteUserAsync(System.String)
  name: DeleteUserAsync(String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_DeleteUserAsync_System_String_
  commentId: M:VPEAR.Core.VPEARClient.DeleteUserAsync(System.String)
  fullName: VPEAR.Core.VPEARClient.DeleteUserAsync(System.String)
  nameWithType: VPEARClient.DeleteUserAsync(String)
- uid: VPEAR.Core.VPEARClient.DeleteUserAsync*
  name: DeleteUserAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_DeleteUserAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.DeleteUserAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.DeleteUserAsync
  nameWithType: VPEARClient.DeleteUserAsync
- uid: VPEAR.Core.VPEARClient.Dispose
  name: Dispose()
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_Dispose
  commentId: M:VPEAR.Core.VPEARClient.Dispose
  fullName: VPEAR.Core.VPEARClient.Dispose()
  nameWithType: VPEARClient.Dispose()
- uid: VPEAR.Core.VPEARClient.Dispose*
  name: Dispose
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_Dispose_
  commentId: Overload:VPEAR.Core.VPEARClient.Dispose
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.Dispose
  nameWithType: VPEARClient.Dispose
- uid: VPEAR.Core.VPEARClient.Error
  name: Error
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_Error
  commentId: P:VPEAR.Core.VPEARClient.Error
  fullName: VPEAR.Core.VPEARClient.Error
  nameWithType: VPEARClient.Error
- uid: VPEAR.Core.VPEARClient.Error*
  name: Error
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_Error_
  commentId: Overload:VPEAR.Core.VPEARClient.Error
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.Error
  nameWithType: VPEARClient.Error
- uid: VPEAR.Core.VPEARClient.ErrorMessage
  name: ErrorMessage
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_ErrorMessage
  commentId: P:VPEAR.Core.VPEARClient.ErrorMessage
  fullName: VPEAR.Core.VPEARClient.ErrorMessage
  nameWithType: VPEARClient.ErrorMessage
- uid: VPEAR.Core.VPEARClient.ErrorMessage*
  name: ErrorMessage
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_ErrorMessage_
  commentId: Overload:VPEAR.Core.VPEARClient.ErrorMessage
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.ErrorMessage
  nameWithType: VPEARClient.ErrorMessage
- uid: VPEAR.Core.VPEARClient.GetDevicesAsync(System.Nullable{VPEAR.Core.DeviceStatus})
  name: GetDevicesAsync(Nullable<DeviceStatus>)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetDevicesAsync_System_Nullable_VPEAR_Core_DeviceStatus__
  commentId: M:VPEAR.Core.VPEARClient.GetDevicesAsync(System.Nullable{VPEAR.Core.DeviceStatus})
  name.vb: GetDevicesAsync(Nullable(Of DeviceStatus))
  fullName: VPEAR.Core.VPEARClient.GetDevicesAsync(System.Nullable<VPEAR.Core.DeviceStatus>)
  fullName.vb: VPEAR.Core.VPEARClient.GetDevicesAsync(System.Nullable(Of VPEAR.Core.DeviceStatus))
  nameWithType: VPEARClient.GetDevicesAsync(Nullable<DeviceStatus>)
  nameWithType.vb: VPEARClient.GetDevicesAsync(Nullable(Of DeviceStatus))
- uid: VPEAR.Core.VPEARClient.GetDevicesAsync*
  name: GetDevicesAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetDevicesAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.GetDevicesAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.GetDevicesAsync
  nameWithType: VPEARClient.GetDevicesAsync
- uid: VPEAR.Core.VPEARClient.GetFiltersAsync(System.String)
  name: GetFiltersAsync(String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetFiltersAsync_System_String_
  commentId: M:VPEAR.Core.VPEARClient.GetFiltersAsync(System.String)
  fullName: VPEAR.Core.VPEARClient.GetFiltersAsync(System.String)
  nameWithType: VPEARClient.GetFiltersAsync(String)
- uid: VPEAR.Core.VPEARClient.GetFiltersAsync*
  name: GetFiltersAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetFiltersAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.GetFiltersAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.GetFiltersAsync
  nameWithType: VPEARClient.GetFiltersAsync
- uid: VPEAR.Core.VPEARClient.GetFirmwareAsync(System.String)
  name: GetFirmwareAsync(String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetFirmwareAsync_System_String_
  commentId: M:VPEAR.Core.VPEARClient.GetFirmwareAsync(System.String)
  fullName: VPEAR.Core.VPEARClient.GetFirmwareAsync(System.String)
  nameWithType: VPEARClient.GetFirmwareAsync(String)
- uid: VPEAR.Core.VPEARClient.GetFirmwareAsync*
  name: GetFirmwareAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetFirmwareAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.GetFirmwareAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.GetFirmwareAsync
  nameWithType: VPEARClient.GetFirmwareAsync
- uid: VPEAR.Core.VPEARClient.GetFramesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name: GetFramesAsync(String, Nullable<Int32>, Nullable<Int32>)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetFramesAsync_System_String_System_Nullable_System_Int32__System_Nullable_System_Int32__
  commentId: M:VPEAR.Core.VPEARClient.GetFramesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name.vb: GetFramesAsync(String, Nullable(Of Int32), Nullable(Of Int32))
  fullName: VPEAR.Core.VPEARClient.GetFramesAsync(System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  fullName.vb: VPEAR.Core.VPEARClient.GetFramesAsync(System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  nameWithType: VPEARClient.GetFramesAsync(String, Nullable<Int32>, Nullable<Int32>)
  nameWithType.vb: VPEARClient.GetFramesAsync(String, Nullable(Of Int32), Nullable(Of Int32))
- uid: VPEAR.Core.VPEARClient.GetFramesAsync*
  name: GetFramesAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetFramesAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.GetFramesAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.GetFramesAsync
  nameWithType: VPEARClient.GetFramesAsync
- uid: VPEAR.Core.VPEARClient.GetPowerAsync(System.String)
  name: GetPowerAsync(String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetPowerAsync_System_String_
  commentId: M:VPEAR.Core.VPEARClient.GetPowerAsync(System.String)
  fullName: VPEAR.Core.VPEARClient.GetPowerAsync(System.String)
  nameWithType: VPEARClient.GetPowerAsync(String)
- uid: VPEAR.Core.VPEARClient.GetPowerAsync*
  name: GetPowerAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetPowerAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.GetPowerAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.GetPowerAsync
  nameWithType: VPEARClient.GetPowerAsync
- uid: VPEAR.Core.VPEARClient.GetSensorsAsync(System.String)
  name: GetSensorsAsync(String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetSensorsAsync_System_String_
  commentId: M:VPEAR.Core.VPEARClient.GetSensorsAsync(System.String)
  fullName: VPEAR.Core.VPEARClient.GetSensorsAsync(System.String)
  nameWithType: VPEARClient.GetSensorsAsync(String)
- uid: VPEAR.Core.VPEARClient.GetSensorsAsync*
  name: GetSensorsAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetSensorsAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.GetSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.GetSensorsAsync
  nameWithType: VPEARClient.GetSensorsAsync
- uid: VPEAR.Core.VPEARClient.GetUsersAsync(System.String)
  name: GetUsersAsync(String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetUsersAsync_System_String_
  commentId: M:VPEAR.Core.VPEARClient.GetUsersAsync(System.String)
  fullName: VPEAR.Core.VPEARClient.GetUsersAsync(System.String)
  nameWithType: VPEARClient.GetUsersAsync(String)
- uid: VPEAR.Core.VPEARClient.GetUsersAsync*
  name: GetUsersAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetUsersAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.GetUsersAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.GetUsersAsync
  nameWithType: VPEARClient.GetUsersAsync
- uid: VPEAR.Core.VPEARClient.GetWifiAsync(System.String)
  name: GetWifiAsync(String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetWifiAsync_System_String_
  commentId: M:VPEAR.Core.VPEARClient.GetWifiAsync(System.String)
  fullName: VPEAR.Core.VPEARClient.GetWifiAsync(System.String)
  nameWithType: VPEARClient.GetWifiAsync(String)
- uid: VPEAR.Core.VPEARClient.GetWifiAsync*
  name: GetWifiAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetWifiAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.GetWifiAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.GetWifiAsync
  nameWithType: VPEARClient.GetWifiAsync
- uid: VPEAR.Core.VPEARClient.LoginAsync(System.String,System.String)
  name: LoginAsync(String, String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_LoginAsync_System_String_System_String_
  commentId: M:VPEAR.Core.VPEARClient.LoginAsync(System.String,System.String)
  fullName: VPEAR.Core.VPEARClient.LoginAsync(System.String, System.String)
  nameWithType: VPEARClient.LoginAsync(String, String)
- uid: VPEAR.Core.VPEARClient.LoginAsync*
  name: LoginAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_LoginAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.LoginAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.LoginAsync
  nameWithType: VPEARClient.LoginAsync
- uid: VPEAR.Core.VPEARClient.Logout
  name: Logout()
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_Logout
  commentId: M:VPEAR.Core.VPEARClient.Logout
  fullName: VPEAR.Core.VPEARClient.Logout()
  nameWithType: VPEARClient.Logout()
- uid: VPEAR.Core.VPEARClient.Logout*
  name: Logout
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_Logout_
  commentId: Overload:VPEAR.Core.VPEARClient.Logout
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.Logout
  nameWithType: VPEARClient.Logout
- uid: VPEAR.Core.VPEARClient.PostDevicesAsync(System.String,System.String)
  name: PostDevicesAsync(String, String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_PostDevicesAsync_System_String_System_String_
  commentId: M:VPEAR.Core.VPEARClient.PostDevicesAsync(System.String,System.String)
  fullName: VPEAR.Core.VPEARClient.PostDevicesAsync(System.String, System.String)
  nameWithType: VPEARClient.PostDevicesAsync(String, String)
- uid: VPEAR.Core.VPEARClient.PostDevicesAsync*
  name: PostDevicesAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_PostDevicesAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.PostDevicesAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.PostDevicesAsync
  nameWithType: VPEARClient.PostDevicesAsync
- uid: VPEAR.Core.VPEARClient.PutDeviceAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{VPEAR.Core.DeviceStatus})
  name: PutDeviceAsync(String, String, Nullable<Int32>, Nullable<Int32>, Nullable<DeviceStatus>)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_PutDeviceAsync_System_String_System_String_System_Nullable_System_Int32__System_Nullable_System_Int32__System_Nullable_VPEAR_Core_DeviceStatus__
  commentId: M:VPEAR.Core.VPEARClient.PutDeviceAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{VPEAR.Core.DeviceStatus})
  name.vb: PutDeviceAsync(String, String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of DeviceStatus))
  fullName: VPEAR.Core.VPEARClient.PutDeviceAsync(System.String, System.String, System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Nullable<VPEAR.Core.DeviceStatus>)
  fullName.vb: VPEAR.Core.VPEARClient.PutDeviceAsync(System.String, System.String, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Nullable(Of VPEAR.Core.DeviceStatus))
  nameWithType: VPEARClient.PutDeviceAsync(String, String, Nullable<Int32>, Nullable<Int32>, Nullable<DeviceStatus>)
  nameWithType.vb: VPEARClient.PutDeviceAsync(String, String, Nullable(Of Int32), Nullable(Of Int32), Nullable(Of DeviceStatus))
- uid: VPEAR.Core.VPEARClient.PutDeviceAsync*
  name: PutDeviceAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_PutDeviceAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.PutDeviceAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.PutDeviceAsync
  nameWithType: VPEARClient.PutDeviceAsync
- uid: VPEAR.Core.VPEARClient.PutFiltersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  name: PutFiltersAsync(String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_PutFiltersAsync_System_String_System_Nullable_System_Boolean__System_Nullable_System_Boolean__System_Nullable_System_Boolean__
  commentId: M:VPEAR.Core.VPEARClient.PutFiltersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  name.vb: PutFiltersAsync(String, Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
  fullName: VPEAR.Core.VPEARClient.PutFiltersAsync(System.String, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>)
  fullName.vb: VPEAR.Core.VPEARClient.PutFiltersAsync(System.String, System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean))
  nameWithType: VPEARClient.PutFiltersAsync(String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  nameWithType.vb: VPEARClient.PutFiltersAsync(String, Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
- uid: VPEAR.Core.VPEARClient.PutFiltersAsync*
  name: PutFiltersAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_PutFiltersAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.PutFiltersAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.PutFiltersAsync
  nameWithType: VPEARClient.PutFiltersAsync
- uid: VPEAR.Core.VPEARClient.PutFirmwareAsync(System.String,System.String,System.String,System.Boolean)
  name: PutFirmwareAsync(String, String, String, Boolean)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_PutFirmwareAsync_System_String_System_String_System_String_System_Boolean_
  commentId: M:VPEAR.Core.VPEARClient.PutFirmwareAsync(System.String,System.String,System.String,System.Boolean)
  fullName: VPEAR.Core.VPEARClient.PutFirmwareAsync(System.String, System.String, System.String, System.Boolean)
  nameWithType: VPEARClient.PutFirmwareAsync(String, String, String, Boolean)
- uid: VPEAR.Core.VPEARClient.PutFirmwareAsync*
  name: PutFirmwareAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_PutFirmwareAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.PutFirmwareAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.PutFirmwareAsync
  nameWithType: VPEARClient.PutFirmwareAsync
- uid: VPEAR.Core.VPEARClient.PutPasswordAsync(System.String,System.String,System.String)
  name: PutPasswordAsync(String, String, String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_PutPasswordAsync_System_String_System_String_System_String_
  commentId: M:VPEAR.Core.VPEARClient.PutPasswordAsync(System.String,System.String,System.String)
  fullName: VPEAR.Core.VPEARClient.PutPasswordAsync(System.String, System.String, System.String)
  nameWithType: VPEARClient.PutPasswordAsync(String, String, String)
- uid: VPEAR.Core.VPEARClient.PutPasswordAsync*
  name: PutPasswordAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_PutPasswordAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.PutPasswordAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.PutPasswordAsync
  nameWithType: VPEARClient.PutPasswordAsync
- uid: VPEAR.Core.VPEARClient.PutVerifyAsync(System.String,System.Boolean)
  name: PutVerifyAsync(String, Boolean)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_PutVerifyAsync_System_String_System_Boolean_
  commentId: M:VPEAR.Core.VPEARClient.PutVerifyAsync(System.String,System.Boolean)
  fullName: VPEAR.Core.VPEARClient.PutVerifyAsync(System.String, System.Boolean)
  nameWithType: VPEARClient.PutVerifyAsync(String, Boolean)
- uid: VPEAR.Core.VPEARClient.PutVerifyAsync*
  name: PutVerifyAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_PutVerifyAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.PutVerifyAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.PutVerifyAsync
  nameWithType: VPEARClient.PutVerifyAsync
- uid: VPEAR.Core.VPEARClient.PutWifiAsync(System.String,System.String,System.String,System.String)
  name: PutWifiAsync(String, String, String, String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_PutWifiAsync_System_String_System_String_System_String_System_String_
  commentId: M:VPEAR.Core.VPEARClient.PutWifiAsync(System.String,System.String,System.String,System.String)
  fullName: VPEAR.Core.VPEARClient.PutWifiAsync(System.String, System.String, System.String, System.String)
  nameWithType: VPEARClient.PutWifiAsync(String, String, String, String)
- uid: VPEAR.Core.VPEARClient.PutWifiAsync*
  name: PutWifiAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_PutWifiAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.PutWifiAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.PutWifiAsync
  nameWithType: VPEARClient.PutWifiAsync
- uid: VPEAR.Core.VPEARClient.RegisterAsync(System.String,System.String,System.Boolean)
  name: RegisterAsync(String, String, Boolean)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_RegisterAsync_System_String_System_String_System_Boolean_
  commentId: M:VPEAR.Core.VPEARClient.RegisterAsync(System.String,System.String,System.Boolean)
  fullName: VPEAR.Core.VPEARClient.RegisterAsync(System.String, System.String, System.Boolean)
  nameWithType: VPEARClient.RegisterAsync(String, String, Boolean)
- uid: VPEAR.Core.VPEARClient.RegisterAsync*
  name: RegisterAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_RegisterAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.RegisterAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.RegisterAsync
  nameWithType: VPEARClient.RegisterAsync
- uid: VPEAR.Core.Wrappers
  name: VPEAR.Core.Wrappers
  href: api/VPEAR.Core.Wrappers.html
  commentId: N:VPEAR.Core.Wrappers
  fullName: VPEAR.Core.Wrappers
  nameWithType: VPEAR.Core.Wrappers
- uid: VPEAR.Core.Wrappers.ApiResponse
  name: ApiResponse
  href: api/VPEAR.Core.Wrappers.ApiResponse.html
  commentId: T:VPEAR.Core.Wrappers.ApiResponse
  fullName: VPEAR.Core.Wrappers.ApiResponse
  nameWithType: ApiResponse
- uid: VPEAR.Core.Wrappers.ApiResponse.Device
  name: Device
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Device
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Device
  fullName: VPEAR.Core.Wrappers.ApiResponse.Device
  nameWithType: ApiResponse.Device
- uid: VPEAR.Core.Wrappers.ApiResponse.Device*
  name: Device
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Device_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Device
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Device
  nameWithType: ApiResponse.Device
- uid: VPEAR.Core.Wrappers.ApiResponse.Filters
  name: Filters
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Filters
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Filters
  fullName: VPEAR.Core.Wrappers.ApiResponse.Filters
  nameWithType: ApiResponse.Filters
- uid: VPEAR.Core.Wrappers.ApiResponse.Filters*
  name: Filters
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Filters_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Filters
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Filters
  nameWithType: ApiResponse.Filters
- uid: VPEAR.Core.Wrappers.ApiResponse.Firmware
  name: Firmware
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Firmware
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Firmware
  fullName: VPEAR.Core.Wrappers.ApiResponse.Firmware
  nameWithType: ApiResponse.Firmware
- uid: VPEAR.Core.Wrappers.ApiResponse.Firmware*
  name: Firmware
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Firmware_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Firmware
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Firmware
  nameWithType: ApiResponse.Firmware
- uid: VPEAR.Core.Wrappers.ApiResponse.Frames
  name: Frames
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Frames
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Frames
  fullName: VPEAR.Core.Wrappers.ApiResponse.Frames
  nameWithType: ApiResponse.Frames
- uid: VPEAR.Core.Wrappers.ApiResponse.Frames*
  name: Frames
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Frames_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Frames
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Frames
  nameWithType: ApiResponse.Frames
- uid: VPEAR.Core.Wrappers.ApiResponse.Frequency
  name: Frequency
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Frequency
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Frequency
  fullName: VPEAR.Core.Wrappers.ApiResponse.Frequency
  nameWithType: ApiResponse.Frequency
- uid: VPEAR.Core.Wrappers.ApiResponse.Frequency*
  name: Frequency
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Frequency_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Frequency
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Frequency
  nameWithType: ApiResponse.Frequency
- uid: VPEAR.Core.Wrappers.ApiResponse.Power
  name: Power
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Power
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Power
  fullName: VPEAR.Core.Wrappers.ApiResponse.Power
  nameWithType: ApiResponse.Power
- uid: VPEAR.Core.Wrappers.ApiResponse.Power*
  name: Power
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Power_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Power
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Power
  nameWithType: ApiResponse.Power
- uid: VPEAR.Core.Wrappers.ApiResponse.Sensors
  name: Sensors
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Sensors
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Sensors
  fullName: VPEAR.Core.Wrappers.ApiResponse.Sensors
  nameWithType: ApiResponse.Sensors
- uid: VPEAR.Core.Wrappers.ApiResponse.Sensors*
  name: Sensors
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Sensors_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Sensors
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Sensors
  nameWithType: ApiResponse.Sensors
- uid: VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  name: SensorsRequired
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_SensorsRequired
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  fullName: VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  nameWithType: ApiResponse.SensorsRequired
- uid: VPEAR.Core.Wrappers.ApiResponse.SensorsRequired*
  name: SensorsRequired
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_SensorsRequired_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  nameWithType: ApiResponse.SensorsRequired
- uid: VPEAR.Core.Wrappers.ApiResponse.Wifi
  name: Wifi
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Wifi
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Wifi
  fullName: VPEAR.Core.Wrappers.ApiResponse.Wifi
  nameWithType: ApiResponse.Wifi
- uid: VPEAR.Core.Wrappers.ApiResponse.Wifi*
  name: Wifi
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Wifi_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Wifi
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Wifi
  nameWithType: ApiResponse.Wifi
- uid: VPEAR.Core.Wrappers.Container`1
  name: Container<TItem>
  href: api/VPEAR.Core.Wrappers.Container-1.html
  commentId: T:VPEAR.Core.Wrappers.Container`1
  name.vb: Container(Of TItem)
  fullName: VPEAR.Core.Wrappers.Container<TItem>
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem)
  nameWithType: Container<TItem>
  nameWithType.vb: Container(Of TItem)
- uid: VPEAR.Core.Wrappers.Container`1.#ctor
  name: Container()
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1__ctor
  commentId: M:VPEAR.Core.Wrappers.Container`1.#ctor
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Container()
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Container()
  nameWithType: Container<TItem>.Container()
  nameWithType.vb: Container(Of TItem).Container()
- uid: VPEAR.Core.Wrappers.Container`1.#ctor(System.Int32,System.Collections.Generic.IList{`0})
  name: Container(Int32, IList<TItem>)
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1__ctor_System_Int32_System_Collections_Generic_IList__0__
  commentId: M:VPEAR.Core.Wrappers.Container`1.#ctor(System.Int32,System.Collections.Generic.IList{`0})
  name.vb: Container(Int32, IList(Of TItem))
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Container(System.Int32, System.Collections.Generic.IList<TItem>)
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Container(System.Int32, System.Collections.Generic.IList(Of TItem))
  nameWithType: Container<TItem>.Container(Int32, IList<TItem>)
  nameWithType.vb: Container(Of TItem).Container(Int32, IList(Of TItem))
- uid: VPEAR.Core.Wrappers.Container`1.#ctor(System.Int32,System.Int32,System.Collections.Generic.IList{`0})
  name: Container(Int32, Int32, IList<TItem>)
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1__ctor_System_Int32_System_Int32_System_Collections_Generic_IList__0__
  commentId: M:VPEAR.Core.Wrappers.Container`1.#ctor(System.Int32,System.Int32,System.Collections.Generic.IList{`0})
  name.vb: Container(Int32, Int32, IList(Of TItem))
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Container(System.Int32, System.Int32, System.Collections.Generic.IList<TItem>)
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Container(System.Int32, System.Int32, System.Collections.Generic.IList(Of TItem))
  nameWithType: Container<TItem>.Container(Int32, Int32, IList<TItem>)
  nameWithType.vb: Container(Of TItem).Container(Int32, Int32, IList(Of TItem))
- uid: VPEAR.Core.Wrappers.Container`1.#ctor*
  name: Container
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1__ctor_
  commentId: Overload:VPEAR.Core.Wrappers.Container`1.#ctor
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Container
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Container
  nameWithType: Container<TItem>.Container
  nameWithType.vb: Container(Of TItem).Container
- uid: VPEAR.Core.Wrappers.Container`1.Count
  name: Count
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_Count
  commentId: P:VPEAR.Core.Wrappers.Container`1.Count
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Count
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Count
  nameWithType: Container<TItem>.Count
  nameWithType.vb: Container(Of TItem).Count
- uid: VPEAR.Core.Wrappers.Container`1.Count*
  name: Count
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_Count_
  commentId: Overload:VPEAR.Core.Wrappers.Container`1.Count
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Count
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Count
  nameWithType: Container<TItem>.Count
  nameWithType.vb: Container(Of TItem).Count
- uid: VPEAR.Core.Wrappers.Container`1.Items
  name: Items
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_Items
  commentId: P:VPEAR.Core.Wrappers.Container`1.Items
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Items
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Items
  nameWithType: Container<TItem>.Items
  nameWithType.vb: Container(Of TItem).Items
- uid: VPEAR.Core.Wrappers.Container`1.Items*
  name: Items
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_Items_
  commentId: Overload:VPEAR.Core.Wrappers.Container`1.Items
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Items
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Items
  nameWithType: Container<TItem>.Items
  nameWithType.vb: Container(Of TItem).Items
- uid: VPEAR.Core.Wrappers.Container`1.Start
  name: Start
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_Start
  commentId: P:VPEAR.Core.Wrappers.Container`1.Start
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Start
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Start
  nameWithType: Container<TItem>.Start
  nameWithType.vb: Container(Of TItem).Start
- uid: VPEAR.Core.Wrappers.Container`1.Start*
  name: Start
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_Start_
  commentId: Overload:VPEAR.Core.Wrappers.Container`1.Start
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Start
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Start
  nameWithType: Container<TItem>.Start
  nameWithType.vb: Container(Of TItem).Start
- uid: VPEAR.Core.Wrappers.Container`1.TotalCount
  name: TotalCount
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_TotalCount
  commentId: P:VPEAR.Core.Wrappers.Container`1.TotalCount
  fullName: VPEAR.Core.Wrappers.Container<TItem>.TotalCount
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).TotalCount
  nameWithType: Container<TItem>.TotalCount
  nameWithType.vb: Container(Of TItem).TotalCount
- uid: VPEAR.Core.Wrappers.Container`1.TotalCount*
  name: TotalCount
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_TotalCount_
  commentId: Overload:VPEAR.Core.Wrappers.Container`1.TotalCount
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.Container<TItem>.TotalCount
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).TotalCount
  nameWithType: Container<TItem>.TotalCount
  nameWithType.vb: Container(Of TItem).TotalCount
- uid: VPEAR.Core.Wrappers.DeviceResponse
  name: DeviceResponse
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html
  commentId: T:VPEAR.Core.Wrappers.DeviceResponse
  fullName: VPEAR.Core.Wrappers.DeviceResponse
  nameWithType: DeviceResponse
- uid: VPEAR.Core.Wrappers.DeviceResponse.Address
  name: Address
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Address
  commentId: P:VPEAR.Core.Wrappers.DeviceResponse.Address
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Address
  nameWithType: DeviceResponse.Address
- uid: VPEAR.Core.Wrappers.DeviceResponse.Address*
  name: Address
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Address_
  commentId: Overload:VPEAR.Core.Wrappers.DeviceResponse.Address
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Address
  nameWithType: DeviceResponse.Address
- uid: VPEAR.Core.Wrappers.DeviceResponse.Class
  name: Class
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Class
  commentId: P:VPEAR.Core.Wrappers.DeviceResponse.Class
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Class
  nameWithType: DeviceResponse.Class
- uid: VPEAR.Core.Wrappers.DeviceResponse.Class*
  name: Class
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Class_
  commentId: Overload:VPEAR.Core.Wrappers.DeviceResponse.Class
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Class
  nameWithType: DeviceResponse.Class
- uid: VPEAR.Core.Wrappers.DeviceResponse.Name
  name: Name
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Name
  commentId: P:VPEAR.Core.Wrappers.DeviceResponse.Name
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Name
  nameWithType: DeviceResponse.Name
- uid: VPEAR.Core.Wrappers.DeviceResponse.Name*
  name: Name
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Name_
  commentId: Overload:VPEAR.Core.Wrappers.DeviceResponse.Name
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Name
  nameWithType: DeviceResponse.Name
- uid: VPEAR.Core.Wrappers.ErrorResponse
  name: ErrorResponse
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html
  commentId: T:VPEAR.Core.Wrappers.ErrorResponse
  fullName: VPEAR.Core.Wrappers.ErrorResponse
  nameWithType: ErrorResponse
- uid: VPEAR.Core.Wrappers.ErrorResponse.#ctor
  name: ErrorResponse()
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse__ctor
  commentId: M:VPEAR.Core.Wrappers.ErrorResponse.#ctor
  fullName: VPEAR.Core.Wrappers.ErrorResponse.ErrorResponse()
  nameWithType: ErrorResponse.ErrorResponse()
- uid: VPEAR.Core.Wrappers.ErrorResponse.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{System.String})
  name: ErrorResponse(HttpStatusCode, IEnumerable<String>)
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse__ctor_System_Net_HttpStatusCode_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:VPEAR.Core.Wrappers.ErrorResponse.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{System.String})
  name.vb: ErrorResponse(HttpStatusCode, IEnumerable(Of String))
  fullName: VPEAR.Core.Wrappers.ErrorResponse.ErrorResponse(System.Net.HttpStatusCode, System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: VPEAR.Core.Wrappers.ErrorResponse.ErrorResponse(System.Net.HttpStatusCode, System.Collections.Generic.IEnumerable(Of System.String))
  nameWithType: ErrorResponse.ErrorResponse(HttpStatusCode, IEnumerable<String>)
  nameWithType.vb: ErrorResponse.ErrorResponse(HttpStatusCode, IEnumerable(Of String))
- uid: VPEAR.Core.Wrappers.ErrorResponse.#ctor(System.Net.HttpStatusCode,System.String)
  name: ErrorResponse(HttpStatusCode, String)
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse__ctor_System_Net_HttpStatusCode_System_String_
  commentId: M:VPEAR.Core.Wrappers.ErrorResponse.#ctor(System.Net.HttpStatusCode,System.String)
  fullName: VPEAR.Core.Wrappers.ErrorResponse.ErrorResponse(System.Net.HttpStatusCode, System.String)
  nameWithType: ErrorResponse.ErrorResponse(HttpStatusCode, String)
- uid: VPEAR.Core.Wrappers.ErrorResponse.#ctor*
  name: ErrorResponse
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse__ctor_
  commentId: Overload:VPEAR.Core.Wrappers.ErrorResponse.#ctor
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ErrorResponse.ErrorResponse
  nameWithType: ErrorResponse.ErrorResponse
- uid: VPEAR.Core.Wrappers.ErrorResponse.Messages
  name: Messages
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse_Messages
  commentId: P:VPEAR.Core.Wrappers.ErrorResponse.Messages
  fullName: VPEAR.Core.Wrappers.ErrorResponse.Messages
  nameWithType: ErrorResponse.Messages
- uid: VPEAR.Core.Wrappers.ErrorResponse.Messages*
  name: Messages
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse_Messages_
  commentId: Overload:VPEAR.Core.Wrappers.ErrorResponse.Messages
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ErrorResponse.Messages
  nameWithType: ErrorResponse.Messages
- uid: VPEAR.Core.Wrappers.ErrorResponse.StatusCode
  name: StatusCode
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse_StatusCode
  commentId: P:VPEAR.Core.Wrappers.ErrorResponse.StatusCode
  fullName: VPEAR.Core.Wrappers.ErrorResponse.StatusCode
  nameWithType: ErrorResponse.StatusCode
- uid: VPEAR.Core.Wrappers.ErrorResponse.StatusCode*
  name: StatusCode
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse_StatusCode_
  commentId: Overload:VPEAR.Core.Wrappers.ErrorResponse.StatusCode
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ErrorResponse.StatusCode
  nameWithType: ErrorResponse.StatusCode
- uid: VPEAR.Core.Wrappers.FiltersResponse
  name: FiltersResponse
  href: api/VPEAR.Core.Wrappers.FiltersResponse.html
  commentId: T:VPEAR.Core.Wrappers.FiltersResponse
  fullName: VPEAR.Core.Wrappers.FiltersResponse
  nameWithType: FiltersResponse
- uid: VPEAR.Core.Wrappers.FiltersResponse.Noise
  name: Noise
  href: api/VPEAR.Core.Wrappers.FiltersResponse.html#VPEAR_Core_Wrappers_FiltersResponse_Noise
  commentId: P:VPEAR.Core.Wrappers.FiltersResponse.Noise
  fullName: VPEAR.Core.Wrappers.FiltersResponse.Noise
  nameWithType: FiltersResponse.Noise
- uid: VPEAR.Core.Wrappers.FiltersResponse.Noise*
  name: Noise
  href: api/VPEAR.Core.Wrappers.FiltersResponse.html#VPEAR_Core_Wrappers_FiltersResponse_Noise_
  commentId: Overload:VPEAR.Core.Wrappers.FiltersResponse.Noise
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FiltersResponse.Noise
  nameWithType: FiltersResponse.Noise
- uid: VPEAR.Core.Wrappers.FiltersResponse.Smooth
  name: Smooth
  href: api/VPEAR.Core.Wrappers.FiltersResponse.html#VPEAR_Core_Wrappers_FiltersResponse_Smooth
  commentId: P:VPEAR.Core.Wrappers.FiltersResponse.Smooth
  fullName: VPEAR.Core.Wrappers.FiltersResponse.Smooth
  nameWithType: FiltersResponse.Smooth
- uid: VPEAR.Core.Wrappers.FiltersResponse.Smooth*
  name: Smooth
  href: api/VPEAR.Core.Wrappers.FiltersResponse.html#VPEAR_Core_Wrappers_FiltersResponse_Smooth_
  commentId: Overload:VPEAR.Core.Wrappers.FiltersResponse.Smooth
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FiltersResponse.Smooth
  nameWithType: FiltersResponse.Smooth
- uid: VPEAR.Core.Wrappers.FiltersResponse.Spot
  name: Spot
  href: api/VPEAR.Core.Wrappers.FiltersResponse.html#VPEAR_Core_Wrappers_FiltersResponse_Spot
  commentId: P:VPEAR.Core.Wrappers.FiltersResponse.Spot
  fullName: VPEAR.Core.Wrappers.FiltersResponse.Spot
  nameWithType: FiltersResponse.Spot
- uid: VPEAR.Core.Wrappers.FiltersResponse.Spot*
  name: Spot
  href: api/VPEAR.Core.Wrappers.FiltersResponse.html#VPEAR_Core_Wrappers_FiltersResponse_Spot_
  commentId: Overload:VPEAR.Core.Wrappers.FiltersResponse.Spot
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FiltersResponse.Spot
  nameWithType: FiltersResponse.Spot
- uid: VPEAR.Core.Wrappers.FirmwareResponse
  name: FirmwareResponse
  href: api/VPEAR.Core.Wrappers.FirmwareResponse.html
  commentId: T:VPEAR.Core.Wrappers.FirmwareResponse
  fullName: VPEAR.Core.Wrappers.FirmwareResponse
  nameWithType: FirmwareResponse
- uid: VPEAR.Core.Wrappers.FirmwareResponse.Source
  name: Source
  href: api/VPEAR.Core.Wrappers.FirmwareResponse.html#VPEAR_Core_Wrappers_FirmwareResponse_Source
  commentId: P:VPEAR.Core.Wrappers.FirmwareResponse.Source
  fullName: VPEAR.Core.Wrappers.FirmwareResponse.Source
  nameWithType: FirmwareResponse.Source
- uid: VPEAR.Core.Wrappers.FirmwareResponse.Source*
  name: Source
  href: api/VPEAR.Core.Wrappers.FirmwareResponse.html#VPEAR_Core_Wrappers_FirmwareResponse_Source_
  commentId: Overload:VPEAR.Core.Wrappers.FirmwareResponse.Source
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FirmwareResponse.Source
  nameWithType: FirmwareResponse.Source
- uid: VPEAR.Core.Wrappers.FirmwareResponse.Upgrade
  name: Upgrade
  href: api/VPEAR.Core.Wrappers.FirmwareResponse.html#VPEAR_Core_Wrappers_FirmwareResponse_Upgrade
  commentId: P:VPEAR.Core.Wrappers.FirmwareResponse.Upgrade
  fullName: VPEAR.Core.Wrappers.FirmwareResponse.Upgrade
  nameWithType: FirmwareResponse.Upgrade
- uid: VPEAR.Core.Wrappers.FirmwareResponse.Upgrade*
  name: Upgrade
  href: api/VPEAR.Core.Wrappers.FirmwareResponse.html#VPEAR_Core_Wrappers_FirmwareResponse_Upgrade_
  commentId: Overload:VPEAR.Core.Wrappers.FirmwareResponse.Upgrade
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FirmwareResponse.Upgrade
  nameWithType: FirmwareResponse.Upgrade
- uid: VPEAR.Core.Wrappers.FirmwareResponse.Version
  name: Version
  href: api/VPEAR.Core.Wrappers.FirmwareResponse.html#VPEAR_Core_Wrappers_FirmwareResponse_Version
  commentId: P:VPEAR.Core.Wrappers.FirmwareResponse.Version
  fullName: VPEAR.Core.Wrappers.FirmwareResponse.Version
  nameWithType: FirmwareResponse.Version
- uid: VPEAR.Core.Wrappers.FirmwareResponse.Version*
  name: Version
  href: api/VPEAR.Core.Wrappers.FirmwareResponse.html#VPEAR_Core_Wrappers_FirmwareResponse_Version_
  commentId: Overload:VPEAR.Core.Wrappers.FirmwareResponse.Version
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FirmwareResponse.Version
  nameWithType: FirmwareResponse.Version
- uid: VPEAR.Core.Wrappers.FrameResponse
  name: FrameResponse
  href: api/VPEAR.Core.Wrappers.FrameResponse.html
  commentId: T:VPEAR.Core.Wrappers.FrameResponse
  fullName: VPEAR.Core.Wrappers.FrameResponse
  nameWithType: FrameResponse
- uid: VPEAR.Core.Wrappers.FrameResponse.Equals(VPEAR.Core.Wrappers.FrameResponse)
  name: Equals(FrameResponse)
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Equals_VPEAR_Core_Wrappers_FrameResponse_
  commentId: M:VPEAR.Core.Wrappers.FrameResponse.Equals(VPEAR.Core.Wrappers.FrameResponse)
  fullName: VPEAR.Core.Wrappers.FrameResponse.Equals(VPEAR.Core.Wrappers.FrameResponse)
  nameWithType: FrameResponse.Equals(FrameResponse)
- uid: VPEAR.Core.Wrappers.FrameResponse.Equals*
  name: Equals
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Equals_
  commentId: Overload:VPEAR.Core.Wrappers.FrameResponse.Equals
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FrameResponse.Equals
  nameWithType: FrameResponse.Equals
- uid: VPEAR.Core.Wrappers.FrameResponse.GetHashCode
  name: GetHashCode()
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_GetHashCode
  commentId: M:VPEAR.Core.Wrappers.FrameResponse.GetHashCode
  fullName: VPEAR.Core.Wrappers.FrameResponse.GetHashCode()
  nameWithType: FrameResponse.GetHashCode()
- uid: VPEAR.Core.Wrappers.FrameResponse.GetHashCode*
  name: GetHashCode
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_GetHashCode_
  commentId: Overload:VPEAR.Core.Wrappers.FrameResponse.GetHashCode
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FrameResponse.GetHashCode
  nameWithType: FrameResponse.GetHashCode
- uid: VPEAR.Core.Wrappers.FrameResponse.Id
  name: Id
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Id
  commentId: P:VPEAR.Core.Wrappers.FrameResponse.Id
  fullName: VPEAR.Core.Wrappers.FrameResponse.Id
  nameWithType: FrameResponse.Id
- uid: VPEAR.Core.Wrappers.FrameResponse.Id*
  name: Id
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Id_
  commentId: Overload:VPEAR.Core.Wrappers.FrameResponse.Id
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FrameResponse.Id
  nameWithType: FrameResponse.Id
- uid: VPEAR.Core.Wrappers.FrameResponse.Readings
  name: Readings
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Readings
  commentId: P:VPEAR.Core.Wrappers.FrameResponse.Readings
  fullName: VPEAR.Core.Wrappers.FrameResponse.Readings
  nameWithType: FrameResponse.Readings
- uid: VPEAR.Core.Wrappers.FrameResponse.Readings*
  name: Readings
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Readings_
  commentId: Overload:VPEAR.Core.Wrappers.FrameResponse.Readings
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FrameResponse.Readings
  nameWithType: FrameResponse.Readings
- uid: VPEAR.Core.Wrappers.FrameResponse.Time
  name: Time
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Time
  commentId: P:VPEAR.Core.Wrappers.FrameResponse.Time
  fullName: VPEAR.Core.Wrappers.FrameResponse.Time
  nameWithType: FrameResponse.Time
- uid: VPEAR.Core.Wrappers.FrameResponse.Time*
  name: Time
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Time_
  commentId: Overload:VPEAR.Core.Wrappers.FrameResponse.Time
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FrameResponse.Time
  nameWithType: FrameResponse.Time
- uid: VPEAR.Core.Wrappers.GetDeviceResponse
  name: GetDeviceResponse
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetDeviceResponse
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse
  nameWithType: GetDeviceResponse
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.Address
  name: Address
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_Address
  commentId: P:VPEAR.Core.Wrappers.GetDeviceResponse.Address
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.Address
  nameWithType: GetDeviceResponse.Address
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.Address*
  name: Address
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_Address_
  commentId: Overload:VPEAR.Core.Wrappers.GetDeviceResponse.Address
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.Address
  nameWithType: GetDeviceResponse.Address
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.DisplayName
  name: DisplayName
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_DisplayName
  commentId: P:VPEAR.Core.Wrappers.GetDeviceResponse.DisplayName
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.DisplayName
  nameWithType: GetDeviceResponse.DisplayName
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.DisplayName*
  name: DisplayName
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_DisplayName_
  commentId: Overload:VPEAR.Core.Wrappers.GetDeviceResponse.DisplayName
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.DisplayName
  nameWithType: GetDeviceResponse.DisplayName
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.Frequency
  name: Frequency
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_Frequency
  commentId: P:VPEAR.Core.Wrappers.GetDeviceResponse.Frequency
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.Frequency
  nameWithType: GetDeviceResponse.Frequency
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.Frequency*
  name: Frequency
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_Frequency_
  commentId: Overload:VPEAR.Core.Wrappers.GetDeviceResponse.Frequency
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.Frequency
  nameWithType: GetDeviceResponse.Frequency
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.Id
  name: Id
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_Id
  commentId: P:VPEAR.Core.Wrappers.GetDeviceResponse.Id
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.Id
  nameWithType: GetDeviceResponse.Id
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.Id*
  name: Id
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_Id_
  commentId: Overload:VPEAR.Core.Wrappers.GetDeviceResponse.Id
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.Id
  nameWithType: GetDeviceResponse.Id
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.RequiredSensors
  name: RequiredSensors
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_RequiredSensors
  commentId: P:VPEAR.Core.Wrappers.GetDeviceResponse.RequiredSensors
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.RequiredSensors
  nameWithType: GetDeviceResponse.RequiredSensors
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.RequiredSensors*
  name: RequiredSensors
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_RequiredSensors_
  commentId: Overload:VPEAR.Core.Wrappers.GetDeviceResponse.RequiredSensors
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.RequiredSensors
  nameWithType: GetDeviceResponse.RequiredSensors
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.Status
  name: Status
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_Status
  commentId: P:VPEAR.Core.Wrappers.GetDeviceResponse.Status
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.Status
  nameWithType: GetDeviceResponse.Status
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.Status*
  name: Status
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_Status_
  commentId: Overload:VPEAR.Core.Wrappers.GetDeviceResponse.Status
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.Status
  nameWithType: GetDeviceResponse.Status
- uid: VPEAR.Core.Wrappers.GetFiltersResponse
  name: GetFiltersResponse
  href: api/VPEAR.Core.Wrappers.GetFiltersResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetFiltersResponse
  fullName: VPEAR.Core.Wrappers.GetFiltersResponse
  nameWithType: GetFiltersResponse
- uid: VPEAR.Core.Wrappers.GetFiltersResponse.Noise
  name: Noise
  href: api/VPEAR.Core.Wrappers.GetFiltersResponse.html#VPEAR_Core_Wrappers_GetFiltersResponse_Noise
  commentId: P:VPEAR.Core.Wrappers.GetFiltersResponse.Noise
  fullName: VPEAR.Core.Wrappers.GetFiltersResponse.Noise
  nameWithType: GetFiltersResponse.Noise
- uid: VPEAR.Core.Wrappers.GetFiltersResponse.Noise*
  name: Noise
  href: api/VPEAR.Core.Wrappers.GetFiltersResponse.html#VPEAR_Core_Wrappers_GetFiltersResponse_Noise_
  commentId: Overload:VPEAR.Core.Wrappers.GetFiltersResponse.Noise
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFiltersResponse.Noise
  nameWithType: GetFiltersResponse.Noise
- uid: VPEAR.Core.Wrappers.GetFiltersResponse.Smooth
  name: Smooth
  href: api/VPEAR.Core.Wrappers.GetFiltersResponse.html#VPEAR_Core_Wrappers_GetFiltersResponse_Smooth
  commentId: P:VPEAR.Core.Wrappers.GetFiltersResponse.Smooth
  fullName: VPEAR.Core.Wrappers.GetFiltersResponse.Smooth
  nameWithType: GetFiltersResponse.Smooth
- uid: VPEAR.Core.Wrappers.GetFiltersResponse.Smooth*
  name: Smooth
  href: api/VPEAR.Core.Wrappers.GetFiltersResponse.html#VPEAR_Core_Wrappers_GetFiltersResponse_Smooth_
  commentId: Overload:VPEAR.Core.Wrappers.GetFiltersResponse.Smooth
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFiltersResponse.Smooth
  nameWithType: GetFiltersResponse.Smooth
- uid: VPEAR.Core.Wrappers.GetFiltersResponse.Spot
  name: Spot
  href: api/VPEAR.Core.Wrappers.GetFiltersResponse.html#VPEAR_Core_Wrappers_GetFiltersResponse_Spot
  commentId: P:VPEAR.Core.Wrappers.GetFiltersResponse.Spot
  fullName: VPEAR.Core.Wrappers.GetFiltersResponse.Spot
  nameWithType: GetFiltersResponse.Spot
- uid: VPEAR.Core.Wrappers.GetFiltersResponse.Spot*
  name: Spot
  href: api/VPEAR.Core.Wrappers.GetFiltersResponse.html#VPEAR_Core_Wrappers_GetFiltersResponse_Spot_
  commentId: Overload:VPEAR.Core.Wrappers.GetFiltersResponse.Spot
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFiltersResponse.Spot
  nameWithType: GetFiltersResponse.Spot
- uid: VPEAR.Core.Wrappers.GetFirmwareResponse
  name: GetFirmwareResponse
  href: api/VPEAR.Core.Wrappers.GetFirmwareResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetFirmwareResponse
  fullName: VPEAR.Core.Wrappers.GetFirmwareResponse
  nameWithType: GetFirmwareResponse
- uid: VPEAR.Core.Wrappers.GetFirmwareResponse.Source
  name: Source
  href: api/VPEAR.Core.Wrappers.GetFirmwareResponse.html#VPEAR_Core_Wrappers_GetFirmwareResponse_Source
  commentId: P:VPEAR.Core.Wrappers.GetFirmwareResponse.Source
  fullName: VPEAR.Core.Wrappers.GetFirmwareResponse.Source
  nameWithType: GetFirmwareResponse.Source
- uid: VPEAR.Core.Wrappers.GetFirmwareResponse.Source*
  name: Source
  href: api/VPEAR.Core.Wrappers.GetFirmwareResponse.html#VPEAR_Core_Wrappers_GetFirmwareResponse_Source_
  commentId: Overload:VPEAR.Core.Wrappers.GetFirmwareResponse.Source
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFirmwareResponse.Source
  nameWithType: GetFirmwareResponse.Source
- uid: VPEAR.Core.Wrappers.GetFirmwareResponse.Upgrade
  name: Upgrade
  href: api/VPEAR.Core.Wrappers.GetFirmwareResponse.html#VPEAR_Core_Wrappers_GetFirmwareResponse_Upgrade
  commentId: P:VPEAR.Core.Wrappers.GetFirmwareResponse.Upgrade
  fullName: VPEAR.Core.Wrappers.GetFirmwareResponse.Upgrade
  nameWithType: GetFirmwareResponse.Upgrade
- uid: VPEAR.Core.Wrappers.GetFirmwareResponse.Upgrade*
  name: Upgrade
  href: api/VPEAR.Core.Wrappers.GetFirmwareResponse.html#VPEAR_Core_Wrappers_GetFirmwareResponse_Upgrade_
  commentId: Overload:VPEAR.Core.Wrappers.GetFirmwareResponse.Upgrade
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFirmwareResponse.Upgrade
  nameWithType: GetFirmwareResponse.Upgrade
- uid: VPEAR.Core.Wrappers.GetFirmwareResponse.Version
  name: Version
  href: api/VPEAR.Core.Wrappers.GetFirmwareResponse.html#VPEAR_Core_Wrappers_GetFirmwareResponse_Version
  commentId: P:VPEAR.Core.Wrappers.GetFirmwareResponse.Version
  fullName: VPEAR.Core.Wrappers.GetFirmwareResponse.Version
  nameWithType: GetFirmwareResponse.Version
- uid: VPEAR.Core.Wrappers.GetFirmwareResponse.Version*
  name: Version
  href: api/VPEAR.Core.Wrappers.GetFirmwareResponse.html#VPEAR_Core_Wrappers_GetFirmwareResponse_Version_
  commentId: Overload:VPEAR.Core.Wrappers.GetFirmwareResponse.Version
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFirmwareResponse.Version
  nameWithType: GetFirmwareResponse.Version
- uid: VPEAR.Core.Wrappers.GetFrameResponse
  name: GetFrameResponse
  href: api/VPEAR.Core.Wrappers.GetFrameResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetFrameResponse
  fullName: VPEAR.Core.Wrappers.GetFrameResponse
  nameWithType: GetFrameResponse
- uid: VPEAR.Core.Wrappers.GetFrameResponse.Filter
  name: Filter
  href: api/VPEAR.Core.Wrappers.GetFrameResponse.html#VPEAR_Core_Wrappers_GetFrameResponse_Filter
  commentId: P:VPEAR.Core.Wrappers.GetFrameResponse.Filter
  fullName: VPEAR.Core.Wrappers.GetFrameResponse.Filter
  nameWithType: GetFrameResponse.Filter
- uid: VPEAR.Core.Wrappers.GetFrameResponse.Filter*
  name: Filter
  href: api/VPEAR.Core.Wrappers.GetFrameResponse.html#VPEAR_Core_Wrappers_GetFrameResponse_Filter_
  commentId: Overload:VPEAR.Core.Wrappers.GetFrameResponse.Filter
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFrameResponse.Filter
  nameWithType: GetFrameResponse.Filter
- uid: VPEAR.Core.Wrappers.GetFrameResponse.Readings
  name: Readings
  href: api/VPEAR.Core.Wrappers.GetFrameResponse.html#VPEAR_Core_Wrappers_GetFrameResponse_Readings
  commentId: P:VPEAR.Core.Wrappers.GetFrameResponse.Readings
  fullName: VPEAR.Core.Wrappers.GetFrameResponse.Readings
  nameWithType: GetFrameResponse.Readings
- uid: VPEAR.Core.Wrappers.GetFrameResponse.Readings*
  name: Readings
  href: api/VPEAR.Core.Wrappers.GetFrameResponse.html#VPEAR_Core_Wrappers_GetFrameResponse_Readings_
  commentId: Overload:VPEAR.Core.Wrappers.GetFrameResponse.Readings
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFrameResponse.Readings
  nameWithType: GetFrameResponse.Readings
- uid: VPEAR.Core.Wrappers.GetFrameResponse.Time
  name: Time
  href: api/VPEAR.Core.Wrappers.GetFrameResponse.html#VPEAR_Core_Wrappers_GetFrameResponse_Time
  commentId: P:VPEAR.Core.Wrappers.GetFrameResponse.Time
  fullName: VPEAR.Core.Wrappers.GetFrameResponse.Time
  nameWithType: GetFrameResponse.Time
- uid: VPEAR.Core.Wrappers.GetFrameResponse.Time*
  name: Time
  href: api/VPEAR.Core.Wrappers.GetFrameResponse.html#VPEAR_Core_Wrappers_GetFrameResponse_Time_
  commentId: Overload:VPEAR.Core.Wrappers.GetFrameResponse.Time
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFrameResponse.Time
  nameWithType: GetFrameResponse.Time
- uid: VPEAR.Core.Wrappers.GetPowerResponse
  name: GetPowerResponse
  href: api/VPEAR.Core.Wrappers.GetPowerResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetPowerResponse
  fullName: VPEAR.Core.Wrappers.GetPowerResponse
  nameWithType: GetPowerResponse
- uid: VPEAR.Core.Wrappers.GetPowerResponse.Level
  name: Level
  href: api/VPEAR.Core.Wrappers.GetPowerResponse.html#VPEAR_Core_Wrappers_GetPowerResponse_Level
  commentId: P:VPEAR.Core.Wrappers.GetPowerResponse.Level
  fullName: VPEAR.Core.Wrappers.GetPowerResponse.Level
  nameWithType: GetPowerResponse.Level
- uid: VPEAR.Core.Wrappers.GetPowerResponse.Level*
  name: Level
  href: api/VPEAR.Core.Wrappers.GetPowerResponse.html#VPEAR_Core_Wrappers_GetPowerResponse_Level_
  commentId: Overload:VPEAR.Core.Wrappers.GetPowerResponse.Level
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetPowerResponse.Level
  nameWithType: GetPowerResponse.Level
- uid: VPEAR.Core.Wrappers.GetPowerResponse.State
  name: State
  href: api/VPEAR.Core.Wrappers.GetPowerResponse.html#VPEAR_Core_Wrappers_GetPowerResponse_State
  commentId: P:VPEAR.Core.Wrappers.GetPowerResponse.State
  fullName: VPEAR.Core.Wrappers.GetPowerResponse.State
  nameWithType: GetPowerResponse.State
- uid: VPEAR.Core.Wrappers.GetPowerResponse.State*
  name: State
  href: api/VPEAR.Core.Wrappers.GetPowerResponse.html#VPEAR_Core_Wrappers_GetPowerResponse_State_
  commentId: Overload:VPEAR.Core.Wrappers.GetPowerResponse.State
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetPowerResponse.State
  nameWithType: GetPowerResponse.State
- uid: VPEAR.Core.Wrappers.GetSensorResponse
  name: GetSensorResponse
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetSensorResponse
  fullName: VPEAR.Core.Wrappers.GetSensorResponse
  nameWithType: GetSensorResponse
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Columns
  name: Columns
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Columns
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Columns
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Columns
  nameWithType: GetSensorResponse.Columns
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Columns*
  name: Columns
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Columns_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Columns
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Columns
  nameWithType: GetSensorResponse.Columns
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Height
  name: Height
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Height
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Height
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Height
  nameWithType: GetSensorResponse.Height
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Height*
  name: Height
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Height_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Height
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Height
  nameWithType: GetSensorResponse.Height
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Maximum
  name: Maximum
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Maximum
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Maximum
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Maximum
  nameWithType: GetSensorResponse.Maximum
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Maximum*
  name: Maximum
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Maximum_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Maximum
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Maximum
  nameWithType: GetSensorResponse.Maximum
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Minimum
  name: Minimum
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Minimum
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Minimum
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Minimum
  nameWithType: GetSensorResponse.Minimum
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Minimum*
  name: Minimum
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Minimum_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Minimum
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Minimum
  nameWithType: GetSensorResponse.Minimum
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Name
  name: Name
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Name
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Name
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Name
  nameWithType: GetSensorResponse.Name
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Name*
  name: Name
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Name_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Name
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Name
  nameWithType: GetSensorResponse.Name
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Rows
  name: Rows
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Rows
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Rows
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Rows
  nameWithType: GetSensorResponse.Rows
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Rows*
  name: Rows
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Rows_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Rows
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Rows
  nameWithType: GetSensorResponse.Rows
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Units
  name: Units
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Units
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Units
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Units
  nameWithType: GetSensorResponse.Units
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Units*
  name: Units
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Units_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Units
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Units
  nameWithType: GetSensorResponse.Units
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Width
  name: Width
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Width
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Width
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Width
  nameWithType: GetSensorResponse.Width
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Width*
  name: Width
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Width_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Width
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Width
  nameWithType: GetSensorResponse.Width
- uid: VPEAR.Core.Wrappers.GetUserResponse
  name: GetUserResponse
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetUserResponse
  fullName: VPEAR.Core.Wrappers.GetUserResponse
  nameWithType: GetUserResponse
- uid: VPEAR.Core.Wrappers.GetUserResponse.Id
  name: Id
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_Id
  commentId: P:VPEAR.Core.Wrappers.GetUserResponse.Id
  fullName: VPEAR.Core.Wrappers.GetUserResponse.Id
  nameWithType: GetUserResponse.Id
- uid: VPEAR.Core.Wrappers.GetUserResponse.Id*
  name: Id
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_Id_
  commentId: Overload:VPEAR.Core.Wrappers.GetUserResponse.Id
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetUserResponse.Id
  nameWithType: GetUserResponse.Id
- uid: VPEAR.Core.Wrappers.GetUserResponse.IsVerified
  name: IsVerified
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_IsVerified
  commentId: P:VPEAR.Core.Wrappers.GetUserResponse.IsVerified
  fullName: VPEAR.Core.Wrappers.GetUserResponse.IsVerified
  nameWithType: GetUserResponse.IsVerified
- uid: VPEAR.Core.Wrappers.GetUserResponse.IsVerified*
  name: IsVerified
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_IsVerified_
  commentId: Overload:VPEAR.Core.Wrappers.GetUserResponse.IsVerified
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetUserResponse.IsVerified
  nameWithType: GetUserResponse.IsVerified
- uid: VPEAR.Core.Wrappers.GetUserResponse.Name
  name: Name
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_Name
  commentId: P:VPEAR.Core.Wrappers.GetUserResponse.Name
  fullName: VPEAR.Core.Wrappers.GetUserResponse.Name
  nameWithType: GetUserResponse.Name
- uid: VPEAR.Core.Wrappers.GetUserResponse.Name*
  name: Name
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_Name_
  commentId: Overload:VPEAR.Core.Wrappers.GetUserResponse.Name
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetUserResponse.Name
  nameWithType: GetUserResponse.Name
- uid: VPEAR.Core.Wrappers.GetUserResponse.Roles
  name: Roles
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_Roles
  commentId: P:VPEAR.Core.Wrappers.GetUserResponse.Roles
  fullName: VPEAR.Core.Wrappers.GetUserResponse.Roles
  nameWithType: GetUserResponse.Roles
- uid: VPEAR.Core.Wrappers.GetUserResponse.Roles*
  name: Roles
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_Roles_
  commentId: Overload:VPEAR.Core.Wrappers.GetUserResponse.Roles
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetUserResponse.Roles
  nameWithType: GetUserResponse.Roles
- uid: VPEAR.Core.Wrappers.GetWifiResponse
  name: GetWifiResponse
  href: api/VPEAR.Core.Wrappers.GetWifiResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetWifiResponse
  fullName: VPEAR.Core.Wrappers.GetWifiResponse
  nameWithType: GetWifiResponse
- uid: VPEAR.Core.Wrappers.GetWifiResponse.Mode
  name: Mode
  href: api/VPEAR.Core.Wrappers.GetWifiResponse.html#VPEAR_Core_Wrappers_GetWifiResponse_Mode
  commentId: P:VPEAR.Core.Wrappers.GetWifiResponse.Mode
  fullName: VPEAR.Core.Wrappers.GetWifiResponse.Mode
  nameWithType: GetWifiResponse.Mode
- uid: VPEAR.Core.Wrappers.GetWifiResponse.Mode*
  name: Mode
  href: api/VPEAR.Core.Wrappers.GetWifiResponse.html#VPEAR_Core_Wrappers_GetWifiResponse_Mode_
  commentId: Overload:VPEAR.Core.Wrappers.GetWifiResponse.Mode
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetWifiResponse.Mode
  nameWithType: GetWifiResponse.Mode
- uid: VPEAR.Core.Wrappers.GetWifiResponse.Neighbors
  name: Neighbors
  href: api/VPEAR.Core.Wrappers.GetWifiResponse.html#VPEAR_Core_Wrappers_GetWifiResponse_Neighbors
  commentId: P:VPEAR.Core.Wrappers.GetWifiResponse.Neighbors
  fullName: VPEAR.Core.Wrappers.GetWifiResponse.Neighbors
  nameWithType: GetWifiResponse.Neighbors
- uid: VPEAR.Core.Wrappers.GetWifiResponse.Neighbors*
  name: Neighbors
  href: api/VPEAR.Core.Wrappers.GetWifiResponse.html#VPEAR_Core_Wrappers_GetWifiResponse_Neighbors_
  commentId: Overload:VPEAR.Core.Wrappers.GetWifiResponse.Neighbors
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetWifiResponse.Neighbors
  nameWithType: GetWifiResponse.Neighbors
- uid: VPEAR.Core.Wrappers.GetWifiResponse.Ssid
  name: Ssid
  href: api/VPEAR.Core.Wrappers.GetWifiResponse.html#VPEAR_Core_Wrappers_GetWifiResponse_Ssid
  commentId: P:VPEAR.Core.Wrappers.GetWifiResponse.Ssid
  fullName: VPEAR.Core.Wrappers.GetWifiResponse.Ssid
  nameWithType: GetWifiResponse.Ssid
- uid: VPEAR.Core.Wrappers.GetWifiResponse.Ssid*
  name: Ssid
  href: api/VPEAR.Core.Wrappers.GetWifiResponse.html#VPEAR_Core_Wrappers_GetWifiResponse_Ssid_
  commentId: Overload:VPEAR.Core.Wrappers.GetWifiResponse.Ssid
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetWifiResponse.Ssid
  nameWithType: GetWifiResponse.Ssid
- uid: VPEAR.Core.Wrappers.PostDeviceRequest
  name: PostDeviceRequest
  href: api/VPEAR.Core.Wrappers.PostDeviceRequest.html
  commentId: T:VPEAR.Core.Wrappers.PostDeviceRequest
  fullName: VPEAR.Core.Wrappers.PostDeviceRequest
  nameWithType: PostDeviceRequest
- uid: VPEAR.Core.Wrappers.PostDeviceRequest.Address
  name: Address
  href: api/VPEAR.Core.Wrappers.PostDeviceRequest.html#VPEAR_Core_Wrappers_PostDeviceRequest_Address
  commentId: P:VPEAR.Core.Wrappers.PostDeviceRequest.Address
  fullName: VPEAR.Core.Wrappers.PostDeviceRequest.Address
  nameWithType: PostDeviceRequest.Address
- uid: VPEAR.Core.Wrappers.PostDeviceRequest.Address*
  name: Address
  href: api/VPEAR.Core.Wrappers.PostDeviceRequest.html#VPEAR_Core_Wrappers_PostDeviceRequest_Address_
  commentId: Overload:VPEAR.Core.Wrappers.PostDeviceRequest.Address
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PostDeviceRequest.Address
  nameWithType: PostDeviceRequest.Address
- uid: VPEAR.Core.Wrappers.PostDeviceRequest.SubnetMask
  name: SubnetMask
  href: api/VPEAR.Core.Wrappers.PostDeviceRequest.html#VPEAR_Core_Wrappers_PostDeviceRequest_SubnetMask
  commentId: P:VPEAR.Core.Wrappers.PostDeviceRequest.SubnetMask
  fullName: VPEAR.Core.Wrappers.PostDeviceRequest.SubnetMask
  nameWithType: PostDeviceRequest.SubnetMask
- uid: VPEAR.Core.Wrappers.PostDeviceRequest.SubnetMask*
  name: SubnetMask
  href: api/VPEAR.Core.Wrappers.PostDeviceRequest.html#VPEAR_Core_Wrappers_PostDeviceRequest_SubnetMask_
  commentId: Overload:VPEAR.Core.Wrappers.PostDeviceRequest.SubnetMask
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PostDeviceRequest.SubnetMask
  nameWithType: PostDeviceRequest.SubnetMask
- uid: VPEAR.Core.Wrappers.PostRegisterRequest
  name: PostRegisterRequest
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html
  commentId: T:VPEAR.Core.Wrappers.PostRegisterRequest
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest
  nameWithType: PostRegisterRequest
- uid: VPEAR.Core.Wrappers.PostRegisterRequest.IsAdmin
  name: IsAdmin
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html#VPEAR_Core_Wrappers_PostRegisterRequest_IsAdmin
  commentId: P:VPEAR.Core.Wrappers.PostRegisterRequest.IsAdmin
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest.IsAdmin
  nameWithType: PostRegisterRequest.IsAdmin
- uid: VPEAR.Core.Wrappers.PostRegisterRequest.IsAdmin*
  name: IsAdmin
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html#VPEAR_Core_Wrappers_PostRegisterRequest_IsAdmin_
  commentId: Overload:VPEAR.Core.Wrappers.PostRegisterRequest.IsAdmin
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest.IsAdmin
  nameWithType: PostRegisterRequest.IsAdmin
- uid: VPEAR.Core.Wrappers.PostRegisterRequest.Name
  name: Name
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html#VPEAR_Core_Wrappers_PostRegisterRequest_Name
  commentId: P:VPEAR.Core.Wrappers.PostRegisterRequest.Name
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest.Name
  nameWithType: PostRegisterRequest.Name
- uid: VPEAR.Core.Wrappers.PostRegisterRequest.Name*
  name: Name
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html#VPEAR_Core_Wrappers_PostRegisterRequest_Name_
  commentId: Overload:VPEAR.Core.Wrappers.PostRegisterRequest.Name
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest.Name
  nameWithType: PostRegisterRequest.Name
- uid: VPEAR.Core.Wrappers.PostRegisterRequest.Password
  name: Password
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html#VPEAR_Core_Wrappers_PostRegisterRequest_Password
  commentId: P:VPEAR.Core.Wrappers.PostRegisterRequest.Password
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest.Password
  nameWithType: PostRegisterRequest.Password
- uid: VPEAR.Core.Wrappers.PostRegisterRequest.Password*
  name: Password
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html#VPEAR_Core_Wrappers_PostRegisterRequest_Password_
  commentId: Overload:VPEAR.Core.Wrappers.PostRegisterRequest.Password
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest.Password
  nameWithType: PostRegisterRequest.Password
- uid: VPEAR.Core.Wrappers.PowerResponse
  name: PowerResponse
  href: api/VPEAR.Core.Wrappers.PowerResponse.html
  commentId: T:VPEAR.Core.Wrappers.PowerResponse
  fullName: VPEAR.Core.Wrappers.PowerResponse
  nameWithType: PowerResponse
- uid: VPEAR.Core.Wrappers.PowerResponse.Level
  name: Level
  href: api/VPEAR.Core.Wrappers.PowerResponse.html#VPEAR_Core_Wrappers_PowerResponse_Level
  commentId: P:VPEAR.Core.Wrappers.PowerResponse.Level
  fullName: VPEAR.Core.Wrappers.PowerResponse.Level
  nameWithType: PowerResponse.Level
- uid: VPEAR.Core.Wrappers.PowerResponse.Level*
  name: Level
  href: api/VPEAR.Core.Wrappers.PowerResponse.html#VPEAR_Core_Wrappers_PowerResponse_Level_
  commentId: Overload:VPEAR.Core.Wrappers.PowerResponse.Level
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PowerResponse.Level
  nameWithType: PowerResponse.Level
- uid: VPEAR.Core.Wrappers.PowerResponse.State
  name: State
  href: api/VPEAR.Core.Wrappers.PowerResponse.html#VPEAR_Core_Wrappers_PowerResponse_State
  commentId: P:VPEAR.Core.Wrappers.PowerResponse.State
  fullName: VPEAR.Core.Wrappers.PowerResponse.State
  nameWithType: PowerResponse.State
- uid: VPEAR.Core.Wrappers.PowerResponse.State*
  name: State
  href: api/VPEAR.Core.Wrappers.PowerResponse.html#VPEAR_Core_Wrappers_PowerResponse_State_
  commentId: Overload:VPEAR.Core.Wrappers.PowerResponse.State
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PowerResponse.State
  nameWithType: PowerResponse.State
- uid: VPEAR.Core.Wrappers.PutDeviceRequest
  name: PutDeviceRequest
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html
  commentId: T:VPEAR.Core.Wrappers.PutDeviceRequest
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest
  nameWithType: PutDeviceRequest
- uid: VPEAR.Core.Wrappers.PutDeviceRequest.DisplayName
  name: DisplayName
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html#VPEAR_Core_Wrappers_PutDeviceRequest_DisplayName
  commentId: P:VPEAR.Core.Wrappers.PutDeviceRequest.DisplayName
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest.DisplayName
  nameWithType: PutDeviceRequest.DisplayName
- uid: VPEAR.Core.Wrappers.PutDeviceRequest.DisplayName*
  name: DisplayName
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html#VPEAR_Core_Wrappers_PutDeviceRequest_DisplayName_
  commentId: Overload:VPEAR.Core.Wrappers.PutDeviceRequest.DisplayName
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest.DisplayName
  nameWithType: PutDeviceRequest.DisplayName
- uid: VPEAR.Core.Wrappers.PutDeviceRequest.Frequency
  name: Frequency
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html#VPEAR_Core_Wrappers_PutDeviceRequest_Frequency
  commentId: P:VPEAR.Core.Wrappers.PutDeviceRequest.Frequency
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest.Frequency
  nameWithType: PutDeviceRequest.Frequency
- uid: VPEAR.Core.Wrappers.PutDeviceRequest.Frequency*
  name: Frequency
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html#VPEAR_Core_Wrappers_PutDeviceRequest_Frequency_
  commentId: Overload:VPEAR.Core.Wrappers.PutDeviceRequest.Frequency
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest.Frequency
  nameWithType: PutDeviceRequest.Frequency
- uid: VPEAR.Core.Wrappers.PutDeviceRequest.RequiredSensors
  name: RequiredSensors
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html#VPEAR_Core_Wrappers_PutDeviceRequest_RequiredSensors
  commentId: P:VPEAR.Core.Wrappers.PutDeviceRequest.RequiredSensors
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest.RequiredSensors
  nameWithType: PutDeviceRequest.RequiredSensors
- uid: VPEAR.Core.Wrappers.PutDeviceRequest.RequiredSensors*
  name: RequiredSensors
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html#VPEAR_Core_Wrappers_PutDeviceRequest_RequiredSensors_
  commentId: Overload:VPEAR.Core.Wrappers.PutDeviceRequest.RequiredSensors
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest.RequiredSensors
  nameWithType: PutDeviceRequest.RequiredSensors
- uid: VPEAR.Core.Wrappers.PutDeviceRequest.Status
  name: Status
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html#VPEAR_Core_Wrappers_PutDeviceRequest_Status
  commentId: P:VPEAR.Core.Wrappers.PutDeviceRequest.Status
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest.Status
  nameWithType: PutDeviceRequest.Status
- uid: VPEAR.Core.Wrappers.PutDeviceRequest.Status*
  name: Status
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html#VPEAR_Core_Wrappers_PutDeviceRequest_Status_
  commentId: Overload:VPEAR.Core.Wrappers.PutDeviceRequest.Status
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest.Status
  nameWithType: PutDeviceRequest.Status
- uid: VPEAR.Core.Wrappers.PutFilterRequest
  name: PutFilterRequest
  href: api/VPEAR.Core.Wrappers.PutFilterRequest.html
  commentId: T:VPEAR.Core.Wrappers.PutFilterRequest
  fullName: VPEAR.Core.Wrappers.PutFilterRequest
  nameWithType: PutFilterRequest
- uid: VPEAR.Core.Wrappers.PutFilterRequest.Noise
  name: Noise
  href: api/VPEAR.Core.Wrappers.PutFilterRequest.html#VPEAR_Core_Wrappers_PutFilterRequest_Noise
  commentId: P:VPEAR.Core.Wrappers.PutFilterRequest.Noise
  fullName: VPEAR.Core.Wrappers.PutFilterRequest.Noise
  nameWithType: PutFilterRequest.Noise
- uid: VPEAR.Core.Wrappers.PutFilterRequest.Noise*
  name: Noise
  href: api/VPEAR.Core.Wrappers.PutFilterRequest.html#VPEAR_Core_Wrappers_PutFilterRequest_Noise_
  commentId: Overload:VPEAR.Core.Wrappers.PutFilterRequest.Noise
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutFilterRequest.Noise
  nameWithType: PutFilterRequest.Noise
- uid: VPEAR.Core.Wrappers.PutFilterRequest.Smooth
  name: Smooth
  href: api/VPEAR.Core.Wrappers.PutFilterRequest.html#VPEAR_Core_Wrappers_PutFilterRequest_Smooth
  commentId: P:VPEAR.Core.Wrappers.PutFilterRequest.Smooth
  fullName: VPEAR.Core.Wrappers.PutFilterRequest.Smooth
  nameWithType: PutFilterRequest.Smooth
- uid: VPEAR.Core.Wrappers.PutFilterRequest.Smooth*
  name: Smooth
  href: api/VPEAR.Core.Wrappers.PutFilterRequest.html#VPEAR_Core_Wrappers_PutFilterRequest_Smooth_
  commentId: Overload:VPEAR.Core.Wrappers.PutFilterRequest.Smooth
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutFilterRequest.Smooth
  nameWithType: PutFilterRequest.Smooth
- uid: VPEAR.Core.Wrappers.PutFilterRequest.Spot
  name: Spot
  href: api/VPEAR.Core.Wrappers.PutFilterRequest.html#VPEAR_Core_Wrappers_PutFilterRequest_Spot
  commentId: P:VPEAR.Core.Wrappers.PutFilterRequest.Spot
  fullName: VPEAR.Core.Wrappers.PutFilterRequest.Spot
  nameWithType: PutFilterRequest.Spot
- uid: VPEAR.Core.Wrappers.PutFilterRequest.Spot*
  name: Spot
  href: api/VPEAR.Core.Wrappers.PutFilterRequest.html#VPEAR_Core_Wrappers_PutFilterRequest_Spot_
  commentId: Overload:VPEAR.Core.Wrappers.PutFilterRequest.Spot
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutFilterRequest.Spot
  nameWithType: PutFilterRequest.Spot
- uid: VPEAR.Core.Wrappers.PutFirmwareRequest
  name: PutFirmwareRequest
  href: api/VPEAR.Core.Wrappers.PutFirmwareRequest.html
  commentId: T:VPEAR.Core.Wrappers.PutFirmwareRequest
  fullName: VPEAR.Core.Wrappers.PutFirmwareRequest
  nameWithType: PutFirmwareRequest
- uid: VPEAR.Core.Wrappers.PutFirmwareRequest.Package
  name: Package
  href: api/VPEAR.Core.Wrappers.PutFirmwareRequest.html#VPEAR_Core_Wrappers_PutFirmwareRequest_Package
  commentId: P:VPEAR.Core.Wrappers.PutFirmwareRequest.Package
  fullName: VPEAR.Core.Wrappers.PutFirmwareRequest.Package
  nameWithType: PutFirmwareRequest.Package
- uid: VPEAR.Core.Wrappers.PutFirmwareRequest.Package*
  name: Package
  href: api/VPEAR.Core.Wrappers.PutFirmwareRequest.html#VPEAR_Core_Wrappers_PutFirmwareRequest_Package_
  commentId: Overload:VPEAR.Core.Wrappers.PutFirmwareRequest.Package
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutFirmwareRequest.Package
  nameWithType: PutFirmwareRequest.Package
- uid: VPEAR.Core.Wrappers.PutFirmwareRequest.Source
  name: Source
  href: api/VPEAR.Core.Wrappers.PutFirmwareRequest.html#VPEAR_Core_Wrappers_PutFirmwareRequest_Source
  commentId: P:VPEAR.Core.Wrappers.PutFirmwareRequest.Source
  fullName: VPEAR.Core.Wrappers.PutFirmwareRequest.Source
  nameWithType: PutFirmwareRequest.Source
- uid: VPEAR.Core.Wrappers.PutFirmwareRequest.Source*
  name: Source
  href: api/VPEAR.Core.Wrappers.PutFirmwareRequest.html#VPEAR_Core_Wrappers_PutFirmwareRequest_Source_
  commentId: Overload:VPEAR.Core.Wrappers.PutFirmwareRequest.Source
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutFirmwareRequest.Source
  nameWithType: PutFirmwareRequest.Source
- uid: VPEAR.Core.Wrappers.PutFirmwareRequest.Upgrade
  name: Upgrade
  href: api/VPEAR.Core.Wrappers.PutFirmwareRequest.html#VPEAR_Core_Wrappers_PutFirmwareRequest_Upgrade
  commentId: P:VPEAR.Core.Wrappers.PutFirmwareRequest.Upgrade
  fullName: VPEAR.Core.Wrappers.PutFirmwareRequest.Upgrade
  nameWithType: PutFirmwareRequest.Upgrade
- uid: VPEAR.Core.Wrappers.PutFirmwareRequest.Upgrade*
  name: Upgrade
  href: api/VPEAR.Core.Wrappers.PutFirmwareRequest.html#VPEAR_Core_Wrappers_PutFirmwareRequest_Upgrade_
  commentId: Overload:VPEAR.Core.Wrappers.PutFirmwareRequest.Upgrade
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutFirmwareRequest.Upgrade
  nameWithType: PutFirmwareRequest.Upgrade
- uid: VPEAR.Core.Wrappers.PutLoginRequest
  name: PutLoginRequest
  href: api/VPEAR.Core.Wrappers.PutLoginRequest.html
  commentId: T:VPEAR.Core.Wrappers.PutLoginRequest
  fullName: VPEAR.Core.Wrappers.PutLoginRequest
  nameWithType: PutLoginRequest
- uid: VPEAR.Core.Wrappers.PutLoginRequest.Name
  name: Name
  href: api/VPEAR.Core.Wrappers.PutLoginRequest.html#VPEAR_Core_Wrappers_PutLoginRequest_Name
  commentId: P:VPEAR.Core.Wrappers.PutLoginRequest.Name
  fullName: VPEAR.Core.Wrappers.PutLoginRequest.Name
  nameWithType: PutLoginRequest.Name
- uid: VPEAR.Core.Wrappers.PutLoginRequest.Name*
  name: Name
  href: api/VPEAR.Core.Wrappers.PutLoginRequest.html#VPEAR_Core_Wrappers_PutLoginRequest_Name_
  commentId: Overload:VPEAR.Core.Wrappers.PutLoginRequest.Name
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutLoginRequest.Name
  nameWithType: PutLoginRequest.Name
- uid: VPEAR.Core.Wrappers.PutLoginRequest.Password
  name: Password
  href: api/VPEAR.Core.Wrappers.PutLoginRequest.html#VPEAR_Core_Wrappers_PutLoginRequest_Password
  commentId: P:VPEAR.Core.Wrappers.PutLoginRequest.Password
  fullName: VPEAR.Core.Wrappers.PutLoginRequest.Password
  nameWithType: PutLoginRequest.Password
- uid: VPEAR.Core.Wrappers.PutLoginRequest.Password*
  name: Password
  href: api/VPEAR.Core.Wrappers.PutLoginRequest.html#VPEAR_Core_Wrappers_PutLoginRequest_Password_
  commentId: Overload:VPEAR.Core.Wrappers.PutLoginRequest.Password
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutLoginRequest.Password
  nameWithType: PutLoginRequest.Password
- uid: VPEAR.Core.Wrappers.PutLoginResponse
  name: PutLoginResponse
  href: api/VPEAR.Core.Wrappers.PutLoginResponse.html
  commentId: T:VPEAR.Core.Wrappers.PutLoginResponse
  fullName: VPEAR.Core.Wrappers.PutLoginResponse
  nameWithType: PutLoginResponse
- uid: VPEAR.Core.Wrappers.PutLoginResponse.ExpiresAt
  name: ExpiresAt
  href: api/VPEAR.Core.Wrappers.PutLoginResponse.html#VPEAR_Core_Wrappers_PutLoginResponse_ExpiresAt
  commentId: P:VPEAR.Core.Wrappers.PutLoginResponse.ExpiresAt
  fullName: VPEAR.Core.Wrappers.PutLoginResponse.ExpiresAt
  nameWithType: PutLoginResponse.ExpiresAt
- uid: VPEAR.Core.Wrappers.PutLoginResponse.ExpiresAt*
  name: ExpiresAt
  href: api/VPEAR.Core.Wrappers.PutLoginResponse.html#VPEAR_Core_Wrappers_PutLoginResponse_ExpiresAt_
  commentId: Overload:VPEAR.Core.Wrappers.PutLoginResponse.ExpiresAt
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutLoginResponse.ExpiresAt
  nameWithType: PutLoginResponse.ExpiresAt
- uid: VPEAR.Core.Wrappers.PutLoginResponse.Token
  name: Token
  href: api/VPEAR.Core.Wrappers.PutLoginResponse.html#VPEAR_Core_Wrappers_PutLoginResponse_Token
  commentId: P:VPEAR.Core.Wrappers.PutLoginResponse.Token
  fullName: VPEAR.Core.Wrappers.PutLoginResponse.Token
  nameWithType: PutLoginResponse.Token
- uid: VPEAR.Core.Wrappers.PutLoginResponse.Token*
  name: Token
  href: api/VPEAR.Core.Wrappers.PutLoginResponse.html#VPEAR_Core_Wrappers_PutLoginResponse_Token_
  commentId: Overload:VPEAR.Core.Wrappers.PutLoginResponse.Token
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutLoginResponse.Token
  nameWithType: PutLoginResponse.Token
- uid: VPEAR.Core.Wrappers.PutPasswordRequest
  name: PutPasswordRequest
  href: api/VPEAR.Core.Wrappers.PutPasswordRequest.html
  commentId: T:VPEAR.Core.Wrappers.PutPasswordRequest
  fullName: VPEAR.Core.Wrappers.PutPasswordRequest
  nameWithType: PutPasswordRequest
- uid: VPEAR.Core.Wrappers.PutPasswordRequest.NewPassword
  name: NewPassword
  href: api/VPEAR.Core.Wrappers.PutPasswordRequest.html#VPEAR_Core_Wrappers_PutPasswordRequest_NewPassword
  commentId: P:VPEAR.Core.Wrappers.PutPasswordRequest.NewPassword
  fullName: VPEAR.Core.Wrappers.PutPasswordRequest.NewPassword
  nameWithType: PutPasswordRequest.NewPassword
- uid: VPEAR.Core.Wrappers.PutPasswordRequest.NewPassword*
  name: NewPassword
  href: api/VPEAR.Core.Wrappers.PutPasswordRequest.html#VPEAR_Core_Wrappers_PutPasswordRequest_NewPassword_
  commentId: Overload:VPEAR.Core.Wrappers.PutPasswordRequest.NewPassword
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutPasswordRequest.NewPassword
  nameWithType: PutPasswordRequest.NewPassword
- uid: VPEAR.Core.Wrappers.PutPasswordRequest.OldPassword
  name: OldPassword
  href: api/VPEAR.Core.Wrappers.PutPasswordRequest.html#VPEAR_Core_Wrappers_PutPasswordRequest_OldPassword
  commentId: P:VPEAR.Core.Wrappers.PutPasswordRequest.OldPassword
  fullName: VPEAR.Core.Wrappers.PutPasswordRequest.OldPassword
  nameWithType: PutPasswordRequest.OldPassword
- uid: VPEAR.Core.Wrappers.PutPasswordRequest.OldPassword*
  name: OldPassword
  href: api/VPEAR.Core.Wrappers.PutPasswordRequest.html#VPEAR_Core_Wrappers_PutPasswordRequest_OldPassword_
  commentId: Overload:VPEAR.Core.Wrappers.PutPasswordRequest.OldPassword
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutPasswordRequest.OldPassword
  nameWithType: PutPasswordRequest.OldPassword
- uid: VPEAR.Core.Wrappers.PutPasswordRequest.Token
  name: Token
  href: api/VPEAR.Core.Wrappers.PutPasswordRequest.html#VPEAR_Core_Wrappers_PutPasswordRequest_Token
  commentId: P:VPEAR.Core.Wrappers.PutPasswordRequest.Token
  fullName: VPEAR.Core.Wrappers.PutPasswordRequest.Token
  nameWithType: PutPasswordRequest.Token
- uid: VPEAR.Core.Wrappers.PutPasswordRequest.Token*
  name: Token
  href: api/VPEAR.Core.Wrappers.PutPasswordRequest.html#VPEAR_Core_Wrappers_PutPasswordRequest_Token_
  commentId: Overload:VPEAR.Core.Wrappers.PutPasswordRequest.Token
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutPasswordRequest.Token
  nameWithType: PutPasswordRequest.Token
- uid: VPEAR.Core.Wrappers.PutVerifyRequest
  name: PutVerifyRequest
  href: api/VPEAR.Core.Wrappers.PutVerifyRequest.html
  commentId: T:VPEAR.Core.Wrappers.PutVerifyRequest
  fullName: VPEAR.Core.Wrappers.PutVerifyRequest
  nameWithType: PutVerifyRequest
- uid: VPEAR.Core.Wrappers.PutVerifyRequest.IsVerified
  name: IsVerified
  href: api/VPEAR.Core.Wrappers.PutVerifyRequest.html#VPEAR_Core_Wrappers_PutVerifyRequest_IsVerified
  commentId: P:VPEAR.Core.Wrappers.PutVerifyRequest.IsVerified
  fullName: VPEAR.Core.Wrappers.PutVerifyRequest.IsVerified
  nameWithType: PutVerifyRequest.IsVerified
- uid: VPEAR.Core.Wrappers.PutVerifyRequest.IsVerified*
  name: IsVerified
  href: api/VPEAR.Core.Wrappers.PutVerifyRequest.html#VPEAR_Core_Wrappers_PutVerifyRequest_IsVerified_
  commentId: Overload:VPEAR.Core.Wrappers.PutVerifyRequest.IsVerified
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutVerifyRequest.IsVerified
  nameWithType: PutVerifyRequest.IsVerified
- uid: VPEAR.Core.Wrappers.PutWifiRequest
  name: PutWifiRequest
  href: api/VPEAR.Core.Wrappers.PutWifiRequest.html
  commentId: T:VPEAR.Core.Wrappers.PutWifiRequest
  fullName: VPEAR.Core.Wrappers.PutWifiRequest
  nameWithType: PutWifiRequest
- uid: VPEAR.Core.Wrappers.PutWifiRequest.Mode
  name: Mode
  href: api/VPEAR.Core.Wrappers.PutWifiRequest.html#VPEAR_Core_Wrappers_PutWifiRequest_Mode
  commentId: P:VPEAR.Core.Wrappers.PutWifiRequest.Mode
  fullName: VPEAR.Core.Wrappers.PutWifiRequest.Mode
  nameWithType: PutWifiRequest.Mode
- uid: VPEAR.Core.Wrappers.PutWifiRequest.Mode*
  name: Mode
  href: api/VPEAR.Core.Wrappers.PutWifiRequest.html#VPEAR_Core_Wrappers_PutWifiRequest_Mode_
  commentId: Overload:VPEAR.Core.Wrappers.PutWifiRequest.Mode
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutWifiRequest.Mode
  nameWithType: PutWifiRequest.Mode
- uid: VPEAR.Core.Wrappers.PutWifiRequest.Password
  name: Password
  href: api/VPEAR.Core.Wrappers.PutWifiRequest.html#VPEAR_Core_Wrappers_PutWifiRequest_Password
  commentId: P:VPEAR.Core.Wrappers.PutWifiRequest.Password
  fullName: VPEAR.Core.Wrappers.PutWifiRequest.Password
  nameWithType: PutWifiRequest.Password
- uid: VPEAR.Core.Wrappers.PutWifiRequest.Password*
  name: Password
  href: api/VPEAR.Core.Wrappers.PutWifiRequest.html#VPEAR_Core_Wrappers_PutWifiRequest_Password_
  commentId: Overload:VPEAR.Core.Wrappers.PutWifiRequest.Password
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutWifiRequest.Password
  nameWithType: PutWifiRequest.Password
- uid: VPEAR.Core.Wrappers.PutWifiRequest.Ssid
  name: Ssid
  href: api/VPEAR.Core.Wrappers.PutWifiRequest.html#VPEAR_Core_Wrappers_PutWifiRequest_Ssid
  commentId: P:VPEAR.Core.Wrappers.PutWifiRequest.Ssid
  fullName: VPEAR.Core.Wrappers.PutWifiRequest.Ssid
  nameWithType: PutWifiRequest.Ssid
- uid: VPEAR.Core.Wrappers.PutWifiRequest.Ssid*
  name: Ssid
  href: api/VPEAR.Core.Wrappers.PutWifiRequest.html#VPEAR_Core_Wrappers_PutWifiRequest_Ssid_
  commentId: Overload:VPEAR.Core.Wrappers.PutWifiRequest.Ssid
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutWifiRequest.Ssid
  nameWithType: PutWifiRequest.Ssid
- uid: VPEAR.Core.Wrappers.SensorResponse
  name: SensorResponse
  href: api/VPEAR.Core.Wrappers.SensorResponse.html
  commentId: T:VPEAR.Core.Wrappers.SensorResponse
  fullName: VPEAR.Core.Wrappers.SensorResponse
  nameWithType: SensorResponse
- uid: VPEAR.Core.Wrappers.SensorResponse.Columns
  name: Columns
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Columns
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Columns
  fullName: VPEAR.Core.Wrappers.SensorResponse.Columns
  nameWithType: SensorResponse.Columns
- uid: VPEAR.Core.Wrappers.SensorResponse.Columns*
  name: Columns
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Columns_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Columns
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Columns
  nameWithType: SensorResponse.Columns
- uid: VPEAR.Core.Wrappers.SensorResponse.Height
  name: Height
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Height
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Height
  fullName: VPEAR.Core.Wrappers.SensorResponse.Height
  nameWithType: SensorResponse.Height
- uid: VPEAR.Core.Wrappers.SensorResponse.Height*
  name: Height
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Height_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Height
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Height
  nameWithType: SensorResponse.Height
- uid: VPEAR.Core.Wrappers.SensorResponse.Maximum
  name: Maximum
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Maximum
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Maximum
  fullName: VPEAR.Core.Wrappers.SensorResponse.Maximum
  nameWithType: SensorResponse.Maximum
- uid: VPEAR.Core.Wrappers.SensorResponse.Maximum*
  name: Maximum
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Maximum_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Maximum
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Maximum
  nameWithType: SensorResponse.Maximum
- uid: VPEAR.Core.Wrappers.SensorResponse.Minimum
  name: Minimum
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Minimum
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Minimum
  fullName: VPEAR.Core.Wrappers.SensorResponse.Minimum
  nameWithType: SensorResponse.Minimum
- uid: VPEAR.Core.Wrappers.SensorResponse.Minimum*
  name: Minimum
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Minimum_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Minimum
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Minimum
  nameWithType: SensorResponse.Minimum
- uid: VPEAR.Core.Wrappers.SensorResponse.Name
  name: Name
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Name
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Name
  fullName: VPEAR.Core.Wrappers.SensorResponse.Name
  nameWithType: SensorResponse.Name
- uid: VPEAR.Core.Wrappers.SensorResponse.Name*
  name: Name
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Name_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Name
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Name
  nameWithType: SensorResponse.Name
- uid: VPEAR.Core.Wrappers.SensorResponse.Rows
  name: Rows
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Rows
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Rows
  fullName: VPEAR.Core.Wrappers.SensorResponse.Rows
  nameWithType: SensorResponse.Rows
- uid: VPEAR.Core.Wrappers.SensorResponse.Rows*
  name: Rows
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Rows_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Rows
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Rows
  nameWithType: SensorResponse.Rows
- uid: VPEAR.Core.Wrappers.SensorResponse.Units
  name: Units
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Units
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Units
  fullName: VPEAR.Core.Wrappers.SensorResponse.Units
  nameWithType: SensorResponse.Units
- uid: VPEAR.Core.Wrappers.SensorResponse.Units*
  name: Units
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Units_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Units
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Units
  nameWithType: SensorResponse.Units
- uid: VPEAR.Core.Wrappers.SensorResponse.Width
  name: Width
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Width
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Width
  fullName: VPEAR.Core.Wrappers.SensorResponse.Width
  nameWithType: SensorResponse.Width
- uid: VPEAR.Core.Wrappers.SensorResponse.Width*
  name: Width
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Width_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Width
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Width
  nameWithType: SensorResponse.Width
- uid: VPEAR.Core.Wrappers.WifiResponse
  name: WifiResponse
  href: api/VPEAR.Core.Wrappers.WifiResponse.html
  commentId: T:VPEAR.Core.Wrappers.WifiResponse
  fullName: VPEAR.Core.Wrappers.WifiResponse
  nameWithType: WifiResponse
- uid: VPEAR.Core.Wrappers.WifiResponse.Mode
  name: Mode
  href: api/VPEAR.Core.Wrappers.WifiResponse.html#VPEAR_Core_Wrappers_WifiResponse_Mode
  commentId: P:VPEAR.Core.Wrappers.WifiResponse.Mode
  fullName: VPEAR.Core.Wrappers.WifiResponse.Mode
  nameWithType: WifiResponse.Mode
- uid: VPEAR.Core.Wrappers.WifiResponse.Mode*
  name: Mode
  href: api/VPEAR.Core.Wrappers.WifiResponse.html#VPEAR_Core_Wrappers_WifiResponse_Mode_
  commentId: Overload:VPEAR.Core.Wrappers.WifiResponse.Mode
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.WifiResponse.Mode
  nameWithType: WifiResponse.Mode
- uid: VPEAR.Core.Wrappers.WifiResponse.Neighbors
  name: Neighbors
  href: api/VPEAR.Core.Wrappers.WifiResponse.html#VPEAR_Core_Wrappers_WifiResponse_Neighbors
  commentId: P:VPEAR.Core.Wrappers.WifiResponse.Neighbors
  fullName: VPEAR.Core.Wrappers.WifiResponse.Neighbors
  nameWithType: WifiResponse.Neighbors
- uid: VPEAR.Core.Wrappers.WifiResponse.Neighbors*
  name: Neighbors
  href: api/VPEAR.Core.Wrappers.WifiResponse.html#VPEAR_Core_Wrappers_WifiResponse_Neighbors_
  commentId: Overload:VPEAR.Core.Wrappers.WifiResponse.Neighbors
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.WifiResponse.Neighbors
  nameWithType: WifiResponse.Neighbors
- uid: VPEAR.Core.Wrappers.WifiResponse.Ssid
  name: Ssid
  href: api/VPEAR.Core.Wrappers.WifiResponse.html#VPEAR_Core_Wrappers_WifiResponse_Ssid
  commentId: P:VPEAR.Core.Wrappers.WifiResponse.Ssid
  fullName: VPEAR.Core.Wrappers.WifiResponse.Ssid
  nameWithType: WifiResponse.Ssid
- uid: VPEAR.Core.Wrappers.WifiResponse.Ssid*
  name: Ssid
  href: api/VPEAR.Core.Wrappers.WifiResponse.html#VPEAR_Core_Wrappers_WifiResponse_Ssid_
  commentId: Overload:VPEAR.Core.Wrappers.WifiResponse.Ssid
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.WifiResponse.Ssid
  nameWithType: WifiResponse.Ssid
- uid: VPEAR.Server
  name: VPEAR.Server
  href: api/VPEAR.Server.html
  commentId: N:VPEAR.Server
  fullName: VPEAR.Server
  nameWithType: VPEAR.Server
- uid: VPEAR.Server.Controllers
  name: VPEAR.Server.Controllers
  href: api/VPEAR.Server.Controllers.html
  commentId: N:VPEAR.Server.Controllers
  fullName: VPEAR.Server.Controllers
  nameWithType: VPEAR.Server.Controllers
- uid: VPEAR.Server.Controllers.BaseController
  name: BaseController
  href: api/VPEAR.Server.Controllers.BaseController.html
  commentId: T:VPEAR.Server.Controllers.BaseController
  fullName: VPEAR.Server.Controllers.BaseController
  nameWithType: BaseController
- uid: VPEAR.Server.Controllers.BaseController.OnGet
  name: OnGet()
  href: api/VPEAR.Server.Controllers.BaseController.html#VPEAR_Server_Controllers_BaseController_OnGet
  commentId: M:VPEAR.Server.Controllers.BaseController.OnGet
  fullName: VPEAR.Server.Controllers.BaseController.OnGet()
  nameWithType: BaseController.OnGet()
- uid: VPEAR.Server.Controllers.BaseController.OnGet*
  name: OnGet
  href: api/VPEAR.Server.Controllers.BaseController.html#VPEAR_Server_Controllers_BaseController_OnGet_
  commentId: Overload:VPEAR.Server.Controllers.BaseController.OnGet
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.BaseController.OnGet
  nameWithType: BaseController.OnGet
- uid: VPEAR.Server.Controllers.DeviceController
  name: DeviceController
  href: api/VPEAR.Server.Controllers.DeviceController.html
  commentId: T:VPEAR.Server.Controllers.DeviceController
  fullName: VPEAR.Server.Controllers.DeviceController
  nameWithType: DeviceController
- uid: VPEAR.Server.Controllers.DeviceController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.DeviceController},VPEAR.Core.Abstractions.IDeviceService)
  name: DeviceController(ILogger<DeviceController>, IDeviceService)
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController__ctor_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_DeviceController__VPEAR_Core_Abstractions_IDeviceService_
  commentId: M:VPEAR.Server.Controllers.DeviceController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.DeviceController},VPEAR.Core.Abstractions.IDeviceService)
  name.vb: DeviceController(ILogger(Of DeviceController), IDeviceService)
  fullName: VPEAR.Server.Controllers.DeviceController.DeviceController(Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.DeviceController>, VPEAR.Core.Abstractions.IDeviceService)
  fullName.vb: VPEAR.Server.Controllers.DeviceController.DeviceController(Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.DeviceController), VPEAR.Core.Abstractions.IDeviceService)
  nameWithType: DeviceController.DeviceController(ILogger<DeviceController>, IDeviceService)
  nameWithType.vb: DeviceController.DeviceController(ILogger(Of DeviceController), IDeviceService)
- uid: VPEAR.Server.Controllers.DeviceController.#ctor*
  name: DeviceController
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController__ctor_
  commentId: Overload:VPEAR.Server.Controllers.DeviceController.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.DeviceController.DeviceController
  nameWithType: DeviceController.DeviceController
- uid: VPEAR.Server.Controllers.DeviceController.OnDeleteAsync(System.Guid)
  name: OnDeleteAsync(Guid)
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnDeleteAsync_System_Guid_
  commentId: M:VPEAR.Server.Controllers.DeviceController.OnDeleteAsync(System.Guid)
  fullName: VPEAR.Server.Controllers.DeviceController.OnDeleteAsync(System.Guid)
  nameWithType: DeviceController.OnDeleteAsync(Guid)
- uid: VPEAR.Server.Controllers.DeviceController.OnDeleteAsync*
  name: OnDeleteAsync
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnDeleteAsync_
  commentId: Overload:VPEAR.Server.Controllers.DeviceController.OnDeleteAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.DeviceController.OnDeleteAsync
  nameWithType: DeviceController.OnDeleteAsync
- uid: VPEAR.Server.Controllers.DeviceController.OnGetAsync(System.Nullable{VPEAR.Core.DeviceStatus})
  name: OnGetAsync(Nullable<DeviceStatus>)
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnGetAsync_System_Nullable_VPEAR_Core_DeviceStatus__
  commentId: M:VPEAR.Server.Controllers.DeviceController.OnGetAsync(System.Nullable{VPEAR.Core.DeviceStatus})
  name.vb: OnGetAsync(Nullable(Of DeviceStatus))
  fullName: VPEAR.Server.Controllers.DeviceController.OnGetAsync(System.Nullable<VPEAR.Core.DeviceStatus>)
  fullName.vb: VPEAR.Server.Controllers.DeviceController.OnGetAsync(System.Nullable(Of VPEAR.Core.DeviceStatus))
  nameWithType: DeviceController.OnGetAsync(Nullable<DeviceStatus>)
  nameWithType.vb: DeviceController.OnGetAsync(Nullable(Of DeviceStatus))
- uid: VPEAR.Server.Controllers.DeviceController.OnGetAsync*
  name: OnGetAsync
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnGetAsync_
  commentId: Overload:VPEAR.Server.Controllers.DeviceController.OnGetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.DeviceController.OnGetAsync
  nameWithType: DeviceController.OnGetAsync
- uid: VPEAR.Server.Controllers.DeviceController.OnPostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  name: OnPostAsync(PostDeviceRequest)
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnPostAsync_VPEAR_Core_Wrappers_PostDeviceRequest_
  commentId: M:VPEAR.Server.Controllers.DeviceController.OnPostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  fullName: VPEAR.Server.Controllers.DeviceController.OnPostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  nameWithType: DeviceController.OnPostAsync(PostDeviceRequest)
- uid: VPEAR.Server.Controllers.DeviceController.OnPostAsync*
  name: OnPostAsync
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnPostAsync_
  commentId: Overload:VPEAR.Server.Controllers.DeviceController.OnPostAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.DeviceController.OnPostAsync
  nameWithType: DeviceController.OnPostAsync
- uid: VPEAR.Server.Controllers.DeviceController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutDeviceRequest)
  name: OnPutAsync(Guid, PutDeviceRequest)
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnPutAsync_System_Guid_VPEAR_Core_Wrappers_PutDeviceRequest_
  commentId: M:VPEAR.Server.Controllers.DeviceController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutDeviceRequest)
  fullName: VPEAR.Server.Controllers.DeviceController.OnPutAsync(System.Guid, VPEAR.Core.Wrappers.PutDeviceRequest)
  nameWithType: DeviceController.OnPutAsync(Guid, PutDeviceRequest)
- uid: VPEAR.Server.Controllers.DeviceController.OnPutAsync*
  name: OnPutAsync
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnPutAsync_
  commentId: Overload:VPEAR.Server.Controllers.DeviceController.OnPutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.DeviceController.OnPutAsync
  nameWithType: DeviceController.OnPutAsync
- uid: VPEAR.Server.Controllers.FilterController
  name: FilterController
  href: api/VPEAR.Server.Controllers.FilterController.html
  commentId: T:VPEAR.Server.Controllers.FilterController
  fullName: VPEAR.Server.Controllers.FilterController
  nameWithType: FilterController
- uid: VPEAR.Server.Controllers.FilterController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FilterController},VPEAR.Core.Abstractions.IFilterService)
  name: FilterController(ILogger<FilterController>, IFilterService)
  href: api/VPEAR.Server.Controllers.FilterController.html#VPEAR_Server_Controllers_FilterController__ctor_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_FilterController__VPEAR_Core_Abstractions_IFilterService_
  commentId: M:VPEAR.Server.Controllers.FilterController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FilterController},VPEAR.Core.Abstractions.IFilterService)
  name.vb: FilterController(ILogger(Of FilterController), IFilterService)
  fullName: VPEAR.Server.Controllers.FilterController.FilterController(Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.FilterController>, VPEAR.Core.Abstractions.IFilterService)
  fullName.vb: VPEAR.Server.Controllers.FilterController.FilterController(Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.FilterController), VPEAR.Core.Abstractions.IFilterService)
  nameWithType: FilterController.FilterController(ILogger<FilterController>, IFilterService)
  nameWithType.vb: FilterController.FilterController(ILogger(Of FilterController), IFilterService)
- uid: VPEAR.Server.Controllers.FilterController.#ctor*
  name: FilterController
  href: api/VPEAR.Server.Controllers.FilterController.html#VPEAR_Server_Controllers_FilterController__ctor_
  commentId: Overload:VPEAR.Server.Controllers.FilterController.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.FilterController.FilterController
  nameWithType: FilterController.FilterController
- uid: VPEAR.Server.Controllers.FilterController.OnGetAsync(System.Guid)
  name: OnGetAsync(Guid)
  href: api/VPEAR.Server.Controllers.FilterController.html#VPEAR_Server_Controllers_FilterController_OnGetAsync_System_Guid_
  commentId: M:VPEAR.Server.Controllers.FilterController.OnGetAsync(System.Guid)
  fullName: VPEAR.Server.Controllers.FilterController.OnGetAsync(System.Guid)
  nameWithType: FilterController.OnGetAsync(Guid)
- uid: VPEAR.Server.Controllers.FilterController.OnGetAsync*
  name: OnGetAsync
  href: api/VPEAR.Server.Controllers.FilterController.html#VPEAR_Server_Controllers_FilterController_OnGetAsync_
  commentId: Overload:VPEAR.Server.Controllers.FilterController.OnGetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.FilterController.OnGetAsync
  nameWithType: FilterController.OnGetAsync
- uid: VPEAR.Server.Controllers.FilterController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutFilterRequest)
  name: OnPutAsync(Guid, PutFilterRequest)
  href: api/VPEAR.Server.Controllers.FilterController.html#VPEAR_Server_Controllers_FilterController_OnPutAsync_System_Guid_VPEAR_Core_Wrappers_PutFilterRequest_
  commentId: M:VPEAR.Server.Controllers.FilterController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutFilterRequest)
  fullName: VPEAR.Server.Controllers.FilterController.OnPutAsync(System.Guid, VPEAR.Core.Wrappers.PutFilterRequest)
  nameWithType: FilterController.OnPutAsync(Guid, PutFilterRequest)
- uid: VPEAR.Server.Controllers.FilterController.OnPutAsync*
  name: OnPutAsync
  href: api/VPEAR.Server.Controllers.FilterController.html#VPEAR_Server_Controllers_FilterController_OnPutAsync_
  commentId: Overload:VPEAR.Server.Controllers.FilterController.OnPutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.FilterController.OnPutAsync
  nameWithType: FilterController.OnPutAsync
- uid: VPEAR.Server.Controllers.FirmwareController
  name: FirmwareController
  href: api/VPEAR.Server.Controllers.FirmwareController.html
  commentId: T:VPEAR.Server.Controllers.FirmwareController
  fullName: VPEAR.Server.Controllers.FirmwareController
  nameWithType: FirmwareController
- uid: VPEAR.Server.Controllers.FirmwareController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FirmwareController},VPEAR.Core.Abstractions.IFirmwareService)
  name: FirmwareController(ILogger<FirmwareController>, IFirmwareService)
  href: api/VPEAR.Server.Controllers.FirmwareController.html#VPEAR_Server_Controllers_FirmwareController__ctor_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_FirmwareController__VPEAR_Core_Abstractions_IFirmwareService_
  commentId: M:VPEAR.Server.Controllers.FirmwareController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FirmwareController},VPEAR.Core.Abstractions.IFirmwareService)
  name.vb: FirmwareController(ILogger(Of FirmwareController), IFirmwareService)
  fullName: VPEAR.Server.Controllers.FirmwareController.FirmwareController(Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.FirmwareController>, VPEAR.Core.Abstractions.IFirmwareService)
  fullName.vb: VPEAR.Server.Controllers.FirmwareController.FirmwareController(Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.FirmwareController), VPEAR.Core.Abstractions.IFirmwareService)
  nameWithType: FirmwareController.FirmwareController(ILogger<FirmwareController>, IFirmwareService)
  nameWithType.vb: FirmwareController.FirmwareController(ILogger(Of FirmwareController), IFirmwareService)
- uid: VPEAR.Server.Controllers.FirmwareController.#ctor*
  name: FirmwareController
  href: api/VPEAR.Server.Controllers.FirmwareController.html#VPEAR_Server_Controllers_FirmwareController__ctor_
  commentId: Overload:VPEAR.Server.Controllers.FirmwareController.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.FirmwareController.FirmwareController
  nameWithType: FirmwareController.FirmwareController
- uid: VPEAR.Server.Controllers.FirmwareController.OnGetAsync(System.Guid)
  name: OnGetAsync(Guid)
  href: api/VPEAR.Server.Controllers.FirmwareController.html#VPEAR_Server_Controllers_FirmwareController_OnGetAsync_System_Guid_
  commentId: M:VPEAR.Server.Controllers.FirmwareController.OnGetAsync(System.Guid)
  fullName: VPEAR.Server.Controllers.FirmwareController.OnGetAsync(System.Guid)
  nameWithType: FirmwareController.OnGetAsync(Guid)
- uid: VPEAR.Server.Controllers.FirmwareController.OnGetAsync*
  name: OnGetAsync
  href: api/VPEAR.Server.Controllers.FirmwareController.html#VPEAR_Server_Controllers_FirmwareController_OnGetAsync_
  commentId: Overload:VPEAR.Server.Controllers.FirmwareController.OnGetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.FirmwareController.OnGetAsync
  nameWithType: FirmwareController.OnGetAsync
- uid: VPEAR.Server.Controllers.FirmwareController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutFirmwareRequest)
  name: OnPutAsync(Guid, PutFirmwareRequest)
  href: api/VPEAR.Server.Controllers.FirmwareController.html#VPEAR_Server_Controllers_FirmwareController_OnPutAsync_System_Guid_VPEAR_Core_Wrappers_PutFirmwareRequest_
  commentId: M:VPEAR.Server.Controllers.FirmwareController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutFirmwareRequest)
  fullName: VPEAR.Server.Controllers.FirmwareController.OnPutAsync(System.Guid, VPEAR.Core.Wrappers.PutFirmwareRequest)
  nameWithType: FirmwareController.OnPutAsync(Guid, PutFirmwareRequest)
- uid: VPEAR.Server.Controllers.FirmwareController.OnPutAsync*
  name: OnPutAsync
  href: api/VPEAR.Server.Controllers.FirmwareController.html#VPEAR_Server_Controllers_FirmwareController_OnPutAsync_
  commentId: Overload:VPEAR.Server.Controllers.FirmwareController.OnPutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.FirmwareController.OnPutAsync
  nameWithType: FirmwareController.OnPutAsync
- uid: VPEAR.Server.Controllers.PowerController
  name: PowerController
  href: api/VPEAR.Server.Controllers.PowerController.html
  commentId: T:VPEAR.Server.Controllers.PowerController
  fullName: VPEAR.Server.Controllers.PowerController
  nameWithType: PowerController
- uid: VPEAR.Server.Controllers.PowerController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.PowerController},VPEAR.Core.Abstractions.IPowerService)
  name: PowerController(ILogger<PowerController>, IPowerService)
  href: api/VPEAR.Server.Controllers.PowerController.html#VPEAR_Server_Controllers_PowerController__ctor_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_PowerController__VPEAR_Core_Abstractions_IPowerService_
  commentId: M:VPEAR.Server.Controllers.PowerController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.PowerController},VPEAR.Core.Abstractions.IPowerService)
  name.vb: PowerController(ILogger(Of PowerController), IPowerService)
  fullName: VPEAR.Server.Controllers.PowerController.PowerController(Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.PowerController>, VPEAR.Core.Abstractions.IPowerService)
  fullName.vb: VPEAR.Server.Controllers.PowerController.PowerController(Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.PowerController), VPEAR.Core.Abstractions.IPowerService)
  nameWithType: PowerController.PowerController(ILogger<PowerController>, IPowerService)
  nameWithType.vb: PowerController.PowerController(ILogger(Of PowerController), IPowerService)
- uid: VPEAR.Server.Controllers.PowerController.#ctor*
  name: PowerController
  href: api/VPEAR.Server.Controllers.PowerController.html#VPEAR_Server_Controllers_PowerController__ctor_
  commentId: Overload:VPEAR.Server.Controllers.PowerController.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.PowerController.PowerController
  nameWithType: PowerController.PowerController
- uid: VPEAR.Server.Controllers.PowerController.OnGetAsync(System.Guid)
  name: OnGetAsync(Guid)
  href: api/VPEAR.Server.Controllers.PowerController.html#VPEAR_Server_Controllers_PowerController_OnGetAsync_System_Guid_
  commentId: M:VPEAR.Server.Controllers.PowerController.OnGetAsync(System.Guid)
  fullName: VPEAR.Server.Controllers.PowerController.OnGetAsync(System.Guid)
  nameWithType: PowerController.OnGetAsync(Guid)
- uid: VPEAR.Server.Controllers.PowerController.OnGetAsync*
  name: OnGetAsync
  href: api/VPEAR.Server.Controllers.PowerController.html#VPEAR_Server_Controllers_PowerController_OnGetAsync_
  commentId: Overload:VPEAR.Server.Controllers.PowerController.OnGetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.PowerController.OnGetAsync
  nameWithType: PowerController.OnGetAsync
- uid: VPEAR.Server.Controllers.SensorController
  name: SensorController
  href: api/VPEAR.Server.Controllers.SensorController.html
  commentId: T:VPEAR.Server.Controllers.SensorController
  fullName: VPEAR.Server.Controllers.SensorController
  nameWithType: SensorController
- uid: VPEAR.Server.Controllers.SensorController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.SensorController},VPEAR.Core.Abstractions.ISensorService)
  name: SensorController(ILogger<SensorController>, ISensorService)
  href: api/VPEAR.Server.Controllers.SensorController.html#VPEAR_Server_Controllers_SensorController__ctor_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_SensorController__VPEAR_Core_Abstractions_ISensorService_
  commentId: M:VPEAR.Server.Controllers.SensorController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.SensorController},VPEAR.Core.Abstractions.ISensorService)
  name.vb: SensorController(ILogger(Of SensorController), ISensorService)
  fullName: VPEAR.Server.Controllers.SensorController.SensorController(Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.SensorController>, VPEAR.Core.Abstractions.ISensorService)
  fullName.vb: VPEAR.Server.Controllers.SensorController.SensorController(Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.SensorController), VPEAR.Core.Abstractions.ISensorService)
  nameWithType: SensorController.SensorController(ILogger<SensorController>, ISensorService)
  nameWithType.vb: SensorController.SensorController(ILogger(Of SensorController), ISensorService)
- uid: VPEAR.Server.Controllers.SensorController.#ctor*
  name: SensorController
  href: api/VPEAR.Server.Controllers.SensorController.html#VPEAR_Server_Controllers_SensorController__ctor_
  commentId: Overload:VPEAR.Server.Controllers.SensorController.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.SensorController.SensorController
  nameWithType: SensorController.SensorController
- uid: VPEAR.Server.Controllers.SensorController.OnGetFramesAsync(System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name: OnGetFramesAsync(Guid, Nullable<Int32>, Nullable<Int32>)
  href: api/VPEAR.Server.Controllers.SensorController.html#VPEAR_Server_Controllers_SensorController_OnGetFramesAsync_System_Guid_System_Nullable_System_Int32__System_Nullable_System_Int32__
  commentId: M:VPEAR.Server.Controllers.SensorController.OnGetFramesAsync(System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name.vb: OnGetFramesAsync(Guid, Nullable(Of Int32), Nullable(Of Int32))
  fullName: VPEAR.Server.Controllers.SensorController.OnGetFramesAsync(System.Guid, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  fullName.vb: VPEAR.Server.Controllers.SensorController.OnGetFramesAsync(System.Guid, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  nameWithType: SensorController.OnGetFramesAsync(Guid, Nullable<Int32>, Nullable<Int32>)
  nameWithType.vb: SensorController.OnGetFramesAsync(Guid, Nullable(Of Int32), Nullable(Of Int32))
- uid: VPEAR.Server.Controllers.SensorController.OnGetFramesAsync*
  name: OnGetFramesAsync
  href: api/VPEAR.Server.Controllers.SensorController.html#VPEAR_Server_Controllers_SensorController_OnGetFramesAsync_
  commentId: Overload:VPEAR.Server.Controllers.SensorController.OnGetFramesAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.SensorController.OnGetFramesAsync
  nameWithType: SensorController.OnGetFramesAsync
- uid: VPEAR.Server.Controllers.SensorController.OnGetSensorsAsync(System.Guid)
  name: OnGetSensorsAsync(Guid)
  href: api/VPEAR.Server.Controllers.SensorController.html#VPEAR_Server_Controllers_SensorController_OnGetSensorsAsync_System_Guid_
  commentId: M:VPEAR.Server.Controllers.SensorController.OnGetSensorsAsync(System.Guid)
  fullName: VPEAR.Server.Controllers.SensorController.OnGetSensorsAsync(System.Guid)
  nameWithType: SensorController.OnGetSensorsAsync(Guid)
- uid: VPEAR.Server.Controllers.SensorController.OnGetSensorsAsync*
  name: OnGetSensorsAsync
  href: api/VPEAR.Server.Controllers.SensorController.html#VPEAR_Server_Controllers_SensorController_OnGetSensorsAsync_
  commentId: Overload:VPEAR.Server.Controllers.SensorController.OnGetSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.SensorController.OnGetSensorsAsync
  nameWithType: SensorController.OnGetSensorsAsync
- uid: VPEAR.Server.Controllers.UserController
  name: UserController
  href: api/VPEAR.Server.Controllers.UserController.html
  commentId: T:VPEAR.Server.Controllers.UserController
  fullName: VPEAR.Server.Controllers.UserController
  nameWithType: UserController
- uid: VPEAR.Server.Controllers.UserController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.UserController},VPEAR.Core.Abstractions.IUserService)
  name: UserController(ILogger<UserController>, IUserService)
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController__ctor_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_UserController__VPEAR_Core_Abstractions_IUserService_
  commentId: M:VPEAR.Server.Controllers.UserController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.UserController},VPEAR.Core.Abstractions.IUserService)
  name.vb: UserController(ILogger(Of UserController), IUserService)
  fullName: VPEAR.Server.Controllers.UserController.UserController(Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.UserController>, VPEAR.Core.Abstractions.IUserService)
  fullName.vb: VPEAR.Server.Controllers.UserController.UserController(Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.UserController), VPEAR.Core.Abstractions.IUserService)
  nameWithType: UserController.UserController(ILogger<UserController>, IUserService)
  nameWithType.vb: UserController.UserController(ILogger(Of UserController), IUserService)
- uid: VPEAR.Server.Controllers.UserController.#ctor*
  name: UserController
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController__ctor_
  commentId: Overload:VPEAR.Server.Controllers.UserController.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.UserController.UserController
  nameWithType: UserController.UserController
- uid: VPEAR.Server.Controllers.UserController.OnDeleteAsync(System.String)
  name: OnDeleteAsync(String)
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnDeleteAsync_System_String_
  commentId: M:VPEAR.Server.Controllers.UserController.OnDeleteAsync(System.String)
  fullName: VPEAR.Server.Controllers.UserController.OnDeleteAsync(System.String)
  nameWithType: UserController.OnDeleteAsync(String)
- uid: VPEAR.Server.Controllers.UserController.OnDeleteAsync*
  name: OnDeleteAsync
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnDeleteAsync_
  commentId: Overload:VPEAR.Server.Controllers.UserController.OnDeleteAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.UserController.OnDeleteAsync
  nameWithType: UserController.OnDeleteAsync
- uid: VPEAR.Server.Controllers.UserController.OnGetAsync(System.String)
  name: OnGetAsync(String)
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnGetAsync_System_String_
  commentId: M:VPEAR.Server.Controllers.UserController.OnGetAsync(System.String)
  fullName: VPEAR.Server.Controllers.UserController.OnGetAsync(System.String)
  nameWithType: UserController.OnGetAsync(String)
- uid: VPEAR.Server.Controllers.UserController.OnGetAsync*
  name: OnGetAsync
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnGetAsync_
  commentId: Overload:VPEAR.Server.Controllers.UserController.OnGetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.UserController.OnGetAsync
  nameWithType: UserController.OnGetAsync
- uid: VPEAR.Server.Controllers.UserController.OnPostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  name: OnPostRegisterAsync(PostRegisterRequest)
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnPostRegisterAsync_VPEAR_Core_Wrappers_PostRegisterRequest_
  commentId: M:VPEAR.Server.Controllers.UserController.OnPostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  fullName: VPEAR.Server.Controllers.UserController.OnPostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  nameWithType: UserController.OnPostRegisterAsync(PostRegisterRequest)
- uid: VPEAR.Server.Controllers.UserController.OnPostRegisterAsync*
  name: OnPostRegisterAsync
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnPostRegisterAsync_
  commentId: Overload:VPEAR.Server.Controllers.UserController.OnPostRegisterAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.UserController.OnPostRegisterAsync
  nameWithType: UserController.OnPostRegisterAsync
- uid: VPEAR.Server.Controllers.UserController.OnPutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  name: OnPutLoginAsync(PutLoginRequest)
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnPutLoginAsync_VPEAR_Core_Wrappers_PutLoginRequest_
  commentId: M:VPEAR.Server.Controllers.UserController.OnPutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  fullName: VPEAR.Server.Controllers.UserController.OnPutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  nameWithType: UserController.OnPutLoginAsync(PutLoginRequest)
- uid: VPEAR.Server.Controllers.UserController.OnPutLoginAsync*
  name: OnPutLoginAsync
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnPutLoginAsync_
  commentId: Overload:VPEAR.Server.Controllers.UserController.OnPutLoginAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.UserController.OnPutLoginAsync
  nameWithType: UserController.OnPutLoginAsync
- uid: VPEAR.Server.Controllers.UserController.OnPutPassword(System.String,VPEAR.Core.Wrappers.PutPasswordRequest)
  name: OnPutPassword(String, PutPasswordRequest)
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnPutPassword_System_String_VPEAR_Core_Wrappers_PutPasswordRequest_
  commentId: M:VPEAR.Server.Controllers.UserController.OnPutPassword(System.String,VPEAR.Core.Wrappers.PutPasswordRequest)
  fullName: VPEAR.Server.Controllers.UserController.OnPutPassword(System.String, VPEAR.Core.Wrappers.PutPasswordRequest)
  nameWithType: UserController.OnPutPassword(String, PutPasswordRequest)
- uid: VPEAR.Server.Controllers.UserController.OnPutPassword*
  name: OnPutPassword
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnPutPassword_
  commentId: Overload:VPEAR.Server.Controllers.UserController.OnPutPassword
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.UserController.OnPutPassword
  nameWithType: UserController.OnPutPassword
- uid: VPEAR.Server.Controllers.UserController.OnPutVerifyAsync(System.String,VPEAR.Core.Wrappers.PutVerifyRequest)
  name: OnPutVerifyAsync(String, PutVerifyRequest)
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnPutVerifyAsync_System_String_VPEAR_Core_Wrappers_PutVerifyRequest_
  commentId: M:VPEAR.Server.Controllers.UserController.OnPutVerifyAsync(System.String,VPEAR.Core.Wrappers.PutVerifyRequest)
  fullName: VPEAR.Server.Controllers.UserController.OnPutVerifyAsync(System.String, VPEAR.Core.Wrappers.PutVerifyRequest)
  nameWithType: UserController.OnPutVerifyAsync(String, PutVerifyRequest)
- uid: VPEAR.Server.Controllers.UserController.OnPutVerifyAsync*
  name: OnPutVerifyAsync
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnPutVerifyAsync_
  commentId: Overload:VPEAR.Server.Controllers.UserController.OnPutVerifyAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.UserController.OnPutVerifyAsync
  nameWithType: UserController.OnPutVerifyAsync
- uid: VPEAR.Server.Controllers.WifiController
  name: WifiController
  href: api/VPEAR.Server.Controllers.WifiController.html
  commentId: T:VPEAR.Server.Controllers.WifiController
  fullName: VPEAR.Server.Controllers.WifiController
  nameWithType: WifiController
- uid: VPEAR.Server.Controllers.WifiController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.WifiController},VPEAR.Core.Abstractions.IWifiService)
  name: WifiController(ILogger<WifiController>, IWifiService)
  href: api/VPEAR.Server.Controllers.WifiController.html#VPEAR_Server_Controllers_WifiController__ctor_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_WifiController__VPEAR_Core_Abstractions_IWifiService_
  commentId: M:VPEAR.Server.Controllers.WifiController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.WifiController},VPEAR.Core.Abstractions.IWifiService)
  name.vb: WifiController(ILogger(Of WifiController), IWifiService)
  fullName: VPEAR.Server.Controllers.WifiController.WifiController(Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.WifiController>, VPEAR.Core.Abstractions.IWifiService)
  fullName.vb: VPEAR.Server.Controllers.WifiController.WifiController(Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.WifiController), VPEAR.Core.Abstractions.IWifiService)
  nameWithType: WifiController.WifiController(ILogger<WifiController>, IWifiService)
  nameWithType.vb: WifiController.WifiController(ILogger(Of WifiController), IWifiService)
- uid: VPEAR.Server.Controllers.WifiController.#ctor*
  name: WifiController
  href: api/VPEAR.Server.Controllers.WifiController.html#VPEAR_Server_Controllers_WifiController__ctor_
  commentId: Overload:VPEAR.Server.Controllers.WifiController.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.WifiController.WifiController
  nameWithType: WifiController.WifiController
- uid: VPEAR.Server.Controllers.WifiController.OnGetAsync(System.Guid)
  name: OnGetAsync(Guid)
  href: api/VPEAR.Server.Controllers.WifiController.html#VPEAR_Server_Controllers_WifiController_OnGetAsync_System_Guid_
  commentId: M:VPEAR.Server.Controllers.WifiController.OnGetAsync(System.Guid)
  fullName: VPEAR.Server.Controllers.WifiController.OnGetAsync(System.Guid)
  nameWithType: WifiController.OnGetAsync(Guid)
- uid: VPEAR.Server.Controllers.WifiController.OnGetAsync*
  name: OnGetAsync
  href: api/VPEAR.Server.Controllers.WifiController.html#VPEAR_Server_Controllers_WifiController_OnGetAsync_
  commentId: Overload:VPEAR.Server.Controllers.WifiController.OnGetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.WifiController.OnGetAsync
  nameWithType: WifiController.OnGetAsync
- uid: VPEAR.Server.Controllers.WifiController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutWifiRequest)
  name: OnPutAsync(Guid, PutWifiRequest)
  href: api/VPEAR.Server.Controllers.WifiController.html#VPEAR_Server_Controllers_WifiController_OnPutAsync_System_Guid_VPEAR_Core_Wrappers_PutWifiRequest_
  commentId: M:VPEAR.Server.Controllers.WifiController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutWifiRequest)
  fullName: VPEAR.Server.Controllers.WifiController.OnPutAsync(System.Guid, VPEAR.Core.Wrappers.PutWifiRequest)
  nameWithType: WifiController.OnPutAsync(Guid, PutWifiRequest)
- uid: VPEAR.Server.Controllers.WifiController.OnPutAsync*
  name: OnPutAsync
  href: api/VPEAR.Server.Controllers.WifiController.html#VPEAR_Server_Controllers_WifiController_OnPutAsync_
  commentId: Overload:VPEAR.Server.Controllers.WifiController.OnPutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.WifiController.OnPutAsync
  nameWithType: WifiController.OnPutAsync
- uid: VPEAR.Server.Data
  name: VPEAR.Server.Data
  href: api/VPEAR.Server.Data.html
  commentId: N:VPEAR.Server.Data
  fullName: VPEAR.Server.Data
  nameWithType: VPEAR.Server.Data
- uid: VPEAR.Server.Data.Configuration
  name: VPEAR.Server.Data.Configuration
  href: api/VPEAR.Server.Data.Configuration.html
  commentId: N:VPEAR.Server.Data.Configuration
  fullName: VPEAR.Server.Data.Configuration
  nameWithType: VPEAR.Server.Data.Configuration
- uid: VPEAR.Server.Data.Configuration.AbstractEntityConfiguration`2
  name: AbstractEntityConfiguration<TEntity, TKey>
  href: api/VPEAR.Server.Data.Configuration.AbstractEntityConfiguration-2.html
  commentId: T:VPEAR.Server.Data.Configuration.AbstractEntityConfiguration`2
  name.vb: AbstractEntityConfiguration(Of TEntity, TKey)
  fullName: VPEAR.Server.Data.Configuration.AbstractEntityConfiguration<TEntity, TKey>
  fullName.vb: VPEAR.Server.Data.Configuration.AbstractEntityConfiguration(Of TEntity, TKey)
  nameWithType: AbstractEntityConfiguration<TEntity, TKey>
  nameWithType.vb: AbstractEntityConfiguration(Of TEntity, TKey)
- uid: VPEAR.Server.Data.Configuration.AbstractEntityConfiguration`2.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{`0})
  name: Configure(EntityTypeBuilder<TEntity>)
  href: api/VPEAR.Server.Data.Configuration.AbstractEntityConfiguration-2.html#VPEAR_Server_Data_Configuration_AbstractEntityConfiguration_2_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder__0__
  commentId: M:VPEAR.Server.Data.Configuration.AbstractEntityConfiguration`2.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{`0})
  name.vb: Configure(EntityTypeBuilder(Of TEntity))
  fullName: VPEAR.Server.Data.Configuration.AbstractEntityConfiguration<TEntity, TKey>.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>)
  fullName.vb: VPEAR.Server.Data.Configuration.AbstractEntityConfiguration(Of TEntity, TKey).Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity))
  nameWithType: AbstractEntityConfiguration<TEntity, TKey>.Configure(EntityTypeBuilder<TEntity>)
  nameWithType.vb: AbstractEntityConfiguration(Of TEntity, TKey).Configure(EntityTypeBuilder(Of TEntity))
- uid: VPEAR.Server.Data.Configuration.AbstractEntityConfiguration`2.Configure*
  name: Configure
  href: api/VPEAR.Server.Data.Configuration.AbstractEntityConfiguration-2.html#VPEAR_Server_Data_Configuration_AbstractEntityConfiguration_2_Configure_
  commentId: Overload:VPEAR.Server.Data.Configuration.AbstractEntityConfiguration`2.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Data.Configuration.AbstractEntityConfiguration<TEntity, TKey>.Configure
  fullName.vb: VPEAR.Server.Data.Configuration.AbstractEntityConfiguration(Of TEntity, TKey).Configure
  nameWithType: AbstractEntityConfiguration<TEntity, TKey>.Configure
  nameWithType.vb: AbstractEntityConfiguration(Of TEntity, TKey).Configure
- uid: VPEAR.Server.Data.Configuration.DeviceConfiguration
  name: DeviceConfiguration
  href: api/VPEAR.Server.Data.Configuration.DeviceConfiguration.html
  commentId: T:VPEAR.Server.Data.Configuration.DeviceConfiguration
  fullName: VPEAR.Server.Data.Configuration.DeviceConfiguration
  nameWithType: DeviceConfiguration
- uid: VPEAR.Server.Data.Configuration.DeviceConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Entities.Device})
  name: Configure(EntityTypeBuilder<Device>)
  href: api/VPEAR.Server.Data.Configuration.DeviceConfiguration.html#VPEAR_Server_Data_Configuration_DeviceConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Core_Entities_Device__
  commentId: M:VPEAR.Server.Data.Configuration.DeviceConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Entities.Device})
  name.vb: Configure(EntityTypeBuilder(Of Device))
  fullName: VPEAR.Server.Data.Configuration.DeviceConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Core.Entities.Device>)
  fullName.vb: VPEAR.Server.Data.Configuration.DeviceConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Core.Entities.Device))
  nameWithType: DeviceConfiguration.Configure(EntityTypeBuilder<Device>)
  nameWithType.vb: DeviceConfiguration.Configure(EntityTypeBuilder(Of Device))
- uid: VPEAR.Server.Data.Configuration.DeviceConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Data.Configuration.DeviceConfiguration.html#VPEAR_Server_Data_Configuration_DeviceConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Data.Configuration.DeviceConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Data.Configuration.DeviceConfiguration.Configure
  nameWithType: DeviceConfiguration.Configure
- uid: VPEAR.Server.Data.Configuration.FilterConfiguration
  name: FilterConfiguration
  href: api/VPEAR.Server.Data.Configuration.FilterConfiguration.html
  commentId: T:VPEAR.Server.Data.Configuration.FilterConfiguration
  fullName: VPEAR.Server.Data.Configuration.FilterConfiguration
  nameWithType: FilterConfiguration
- uid: VPEAR.Server.Data.Configuration.FilterConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Entities.Filter})
  name: Configure(EntityTypeBuilder<Filter>)
  href: api/VPEAR.Server.Data.Configuration.FilterConfiguration.html#VPEAR_Server_Data_Configuration_FilterConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Core_Entities_Filter__
  commentId: M:VPEAR.Server.Data.Configuration.FilterConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Entities.Filter})
  name.vb: Configure(EntityTypeBuilder(Of Filter))
  fullName: VPEAR.Server.Data.Configuration.FilterConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Core.Entities.Filter>)
  fullName.vb: VPEAR.Server.Data.Configuration.FilterConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Core.Entities.Filter))
  nameWithType: FilterConfiguration.Configure(EntityTypeBuilder<Filter>)
  nameWithType.vb: FilterConfiguration.Configure(EntityTypeBuilder(Of Filter))
- uid: VPEAR.Server.Data.Configuration.FilterConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Data.Configuration.FilterConfiguration.html#VPEAR_Server_Data_Configuration_FilterConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Data.Configuration.FilterConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Data.Configuration.FilterConfiguration.Configure
  nameWithType: FilterConfiguration.Configure
- uid: VPEAR.Server.Data.Configuration.FrameConfiguration
  name: FrameConfiguration
  href: api/VPEAR.Server.Data.Configuration.FrameConfiguration.html
  commentId: T:VPEAR.Server.Data.Configuration.FrameConfiguration
  fullName: VPEAR.Server.Data.Configuration.FrameConfiguration
  nameWithType: FrameConfiguration
- uid: VPEAR.Server.Data.Configuration.FrameConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Entities.Frame})
  name: Configure(EntityTypeBuilder<Frame>)
  href: api/VPEAR.Server.Data.Configuration.FrameConfiguration.html#VPEAR_Server_Data_Configuration_FrameConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Core_Entities_Frame__
  commentId: M:VPEAR.Server.Data.Configuration.FrameConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Entities.Frame})
  name.vb: Configure(EntityTypeBuilder(Of Frame))
  fullName: VPEAR.Server.Data.Configuration.FrameConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Core.Entities.Frame>)
  fullName.vb: VPEAR.Server.Data.Configuration.FrameConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Core.Entities.Frame))
  nameWithType: FrameConfiguration.Configure(EntityTypeBuilder<Frame>)
  nameWithType.vb: FrameConfiguration.Configure(EntityTypeBuilder(Of Frame))
- uid: VPEAR.Server.Data.Configuration.FrameConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Data.Configuration.FrameConfiguration.html#VPEAR_Server_Data_Configuration_FrameConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Data.Configuration.FrameConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Data.Configuration.FrameConfiguration.Configure
  nameWithType: FrameConfiguration.Configure
- uid: VPEAR.Server.Data.DataSeed
  name: DataSeed
  href: api/VPEAR.Server.Data.DataSeed.html
  commentId: T:VPEAR.Server.Data.DataSeed
  fullName: VPEAR.Server.Data.DataSeed
  nameWithType: DataSeed
- uid: VPEAR.Server.Data.DataSeed.Devices
  name: Devices
  href: api/VPEAR.Server.Data.DataSeed.html#VPEAR_Server_Data_DataSeed_Devices
  commentId: P:VPEAR.Server.Data.DataSeed.Devices
  fullName: VPEAR.Server.Data.DataSeed.Devices
  nameWithType: DataSeed.Devices
- uid: VPEAR.Server.Data.DataSeed.Devices*
  name: Devices
  href: api/VPEAR.Server.Data.DataSeed.html#VPEAR_Server_Data_DataSeed_Devices_
  commentId: Overload:VPEAR.Server.Data.DataSeed.Devices
  isSpec: "True"
  fullName: VPEAR.Server.Data.DataSeed.Devices
  nameWithType: DataSeed.Devices
- uid: VPEAR.Server.Data.DataSeed.Filters
  name: Filters
  href: api/VPEAR.Server.Data.DataSeed.html#VPEAR_Server_Data_DataSeed_Filters
  commentId: P:VPEAR.Server.Data.DataSeed.Filters
  fullName: VPEAR.Server.Data.DataSeed.Filters
  nameWithType: DataSeed.Filters
- uid: VPEAR.Server.Data.DataSeed.Filters*
  name: Filters
  href: api/VPEAR.Server.Data.DataSeed.html#VPEAR_Server_Data_DataSeed_Filters_
  commentId: Overload:VPEAR.Server.Data.DataSeed.Filters
  isSpec: "True"
  fullName: VPEAR.Server.Data.DataSeed.Filters
  nameWithType: DataSeed.Filters
- uid: VPEAR.Server.Data.DataSeed.Frames
  name: Frames
  href: api/VPEAR.Server.Data.DataSeed.html#VPEAR_Server_Data_DataSeed_Frames
  commentId: P:VPEAR.Server.Data.DataSeed.Frames
  fullName: VPEAR.Server.Data.DataSeed.Frames
  nameWithType: DataSeed.Frames
- uid: VPEAR.Server.Data.DataSeed.Frames*
  name: Frames
  href: api/VPEAR.Server.Data.DataSeed.html#VPEAR_Server_Data_DataSeed_Frames_
  commentId: Overload:VPEAR.Server.Data.DataSeed.Frames
  isSpec: "True"
  fullName: VPEAR.Server.Data.DataSeed.Frames
  nameWithType: DataSeed.Frames
- uid: VPEAR.Server.Data.DataSeed.Seed(Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser})
  name: Seed(RoleManager<IdentityRole>, UserManager<IdentityUser>)
  href: api/VPEAR.Server.Data.DataSeed.html#VPEAR_Server_Data_DataSeed_Seed_Microsoft_AspNetCore_Identity_RoleManager_Microsoft_AspNetCore_Identity_IdentityRole__Microsoft_AspNetCore_Identity_UserManager_Microsoft_AspNetCore_Identity_IdentityUser__
  commentId: M:VPEAR.Server.Data.DataSeed.Seed(Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser})
  name.vb: Seed(RoleManager(Of IdentityRole), UserManager(Of IdentityUser))
  fullName: VPEAR.Server.Data.DataSeed.Seed(Microsoft.AspNetCore.Identity.RoleManager<Microsoft.AspNetCore.Identity.IdentityRole>, Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.IdentityUser>)
  fullName.vb: VPEAR.Server.Data.DataSeed.Seed(Microsoft.AspNetCore.Identity.RoleManager(Of Microsoft.AspNetCore.Identity.IdentityRole), Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.IdentityUser))
  nameWithType: DataSeed.Seed(RoleManager<IdentityRole>, UserManager<IdentityUser>)
  nameWithType.vb: DataSeed.Seed(RoleManager(Of IdentityRole), UserManager(Of IdentityUser))
- uid: VPEAR.Server.Data.DataSeed.Seed*
  name: Seed
  href: api/VPEAR.Server.Data.DataSeed.html#VPEAR_Server_Data_DataSeed_Seed_
  commentId: Overload:VPEAR.Server.Data.DataSeed.Seed
  isSpec: "True"
  fullName: VPEAR.Server.Data.DataSeed.Seed
  nameWithType: DataSeed.Seed
- uid: VPEAR.Server.Data.DesignTimeVPEARDbContextFactory
  name: DesignTimeVPEARDbContextFactory
  href: api/VPEAR.Server.Data.DesignTimeVPEARDbContextFactory.html
  commentId: T:VPEAR.Server.Data.DesignTimeVPEARDbContextFactory
  fullName: VPEAR.Server.Data.DesignTimeVPEARDbContextFactory
  nameWithType: DesignTimeVPEARDbContextFactory
- uid: VPEAR.Server.Data.DesignTimeVPEARDbContextFactory.CreateDbContext(System.String[])
  name: CreateDbContext(String[])
  href: api/VPEAR.Server.Data.DesignTimeVPEARDbContextFactory.html#VPEAR_Server_Data_DesignTimeVPEARDbContextFactory_CreateDbContext_System_String___
  commentId: M:VPEAR.Server.Data.DesignTimeVPEARDbContextFactory.CreateDbContext(System.String[])
  name.vb: CreateDbContext(String())
  fullName: VPEAR.Server.Data.DesignTimeVPEARDbContextFactory.CreateDbContext(System.String[])
  fullName.vb: VPEAR.Server.Data.DesignTimeVPEARDbContextFactory.CreateDbContext(System.String())
  nameWithType: DesignTimeVPEARDbContextFactory.CreateDbContext(String[])
  nameWithType.vb: DesignTimeVPEARDbContextFactory.CreateDbContext(String())
- uid: VPEAR.Server.Data.DesignTimeVPEARDbContextFactory.CreateDbContext*
  name: CreateDbContext
  href: api/VPEAR.Server.Data.DesignTimeVPEARDbContextFactory.html#VPEAR_Server_Data_DesignTimeVPEARDbContextFactory_CreateDbContext_
  commentId: Overload:VPEAR.Server.Data.DesignTimeVPEARDbContextFactory.CreateDbContext
  isSpec: "True"
  fullName: VPEAR.Server.Data.DesignTimeVPEARDbContextFactory.CreateDbContext
  nameWithType: DesignTimeVPEARDbContextFactory.CreateDbContext
- uid: VPEAR.Server.Data.Repository`3
  name: Repository<TDbContext, TEntity, TKey>
  href: api/VPEAR.Server.Data.Repository-3.html
  commentId: T:VPEAR.Server.Data.Repository`3
  name.vb: Repository(Of TDbContext, TEntity, TKey)
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey)
  nameWithType: Repository<TDbContext, TEntity, TKey>
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey)
- uid: VPEAR.Server.Data.Repository`3.#ctor(`0,Microsoft.Extensions.Logging.ILogger{VPEAR.Core.Abstractions.IRepository{`1,`2}})
  name: Repository(TDbContext, ILogger<IRepository<TEntity, TKey>>)
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3__ctor__0_Microsoft_Extensions_Logging_ILogger_VPEAR_Core_Abstractions_IRepository__1__2___
  commentId: M:VPEAR.Server.Data.Repository`3.#ctor(`0,Microsoft.Extensions.Logging.ILogger{VPEAR.Core.Abstractions.IRepository{`1,`2}})
  name.vb: Repository(TDbContext, ILogger(Of IRepository(Of TEntity, TKey)))
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.Repository(TDbContext, Microsoft.Extensions.Logging.ILogger<VPEAR.Core.Abstractions.IRepository<TEntity, TKey>>)
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).Repository(TDbContext, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey)))
  nameWithType: Repository<TDbContext, TEntity, TKey>.Repository(TDbContext, ILogger<IRepository<TEntity, TKey>>)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).Repository(TDbContext, ILogger(Of IRepository(Of TEntity, TKey)))
- uid: VPEAR.Server.Data.Repository`3.#ctor*
  name: Repository
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3__ctor_
  commentId: Overload:VPEAR.Server.Data.Repository`3.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.Repository
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).Repository
  nameWithType: Repository<TDbContext, TEntity, TKey>.Repository
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).Repository
- uid: VPEAR.Server.Data.Repository`3.CreateAsync(`1)
  name: CreateAsync(TEntity)
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3_CreateAsync__1_
  commentId: M:VPEAR.Server.Data.Repository`3.CreateAsync(`1)
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.CreateAsync(TEntity)
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).CreateAsync(TEntity)
  nameWithType: Repository<TDbContext, TEntity, TKey>.CreateAsync(TEntity)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).CreateAsync(TEntity)
- uid: VPEAR.Server.Data.Repository`3.CreateAsync*
  name: CreateAsync
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3_CreateAsync_
  commentId: Overload:VPEAR.Server.Data.Repository`3.CreateAsync
  isSpec: "True"
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.CreateAsync
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).CreateAsync
  nameWithType: Repository<TDbContext, TEntity, TKey>.CreateAsync
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).CreateAsync
- uid: VPEAR.Server.Data.Repository`3.DeleteAsync(`1)
  name: DeleteAsync(TEntity)
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3_DeleteAsync__1_
  commentId: M:VPEAR.Server.Data.Repository`3.DeleteAsync(`1)
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.DeleteAsync(TEntity)
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).DeleteAsync(TEntity)
  nameWithType: Repository<TDbContext, TEntity, TKey>.DeleteAsync(TEntity)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).DeleteAsync(TEntity)
- uid: VPEAR.Server.Data.Repository`3.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3_DeleteAsync_
  commentId: Overload:VPEAR.Server.Data.Repository`3.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.DeleteAsync
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).DeleteAsync
  nameWithType: Repository<TDbContext, TEntity, TKey>.DeleteAsync
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).DeleteAsync
- uid: VPEAR.Server.Data.Repository`3.Get
  name: Get()
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3_Get
  commentId: M:VPEAR.Server.Data.Repository`3.Get
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.Get()
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).Get()
  nameWithType: Repository<TDbContext, TEntity, TKey>.Get()
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).Get()
- uid: VPEAR.Server.Data.Repository`3.Get*
  name: Get
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3_Get_
  commentId: Overload:VPEAR.Server.Data.Repository`3.Get
  isSpec: "True"
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.Get
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).Get
  nameWithType: Repository<TDbContext, TEntity, TKey>.Get
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).Get
- uid: VPEAR.Server.Data.Repository`3.GetAsync(`2)
  name: GetAsync(TKey)
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3_GetAsync__2_
  commentId: M:VPEAR.Server.Data.Repository`3.GetAsync(`2)
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.GetAsync(TKey)
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).GetAsync(TKey)
  nameWithType: Repository<TDbContext, TEntity, TKey>.GetAsync(TKey)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).GetAsync(TKey)
- uid: VPEAR.Server.Data.Repository`3.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3_GetAsync_
  commentId: Overload:VPEAR.Server.Data.Repository`3.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.GetAsync
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).GetAsync
  nameWithType: Repository<TDbContext, TEntity, TKey>.GetAsync
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).GetAsync
- uid: VPEAR.Server.Data.Repository`3.SaveChanges
  name: SaveChanges()
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3_SaveChanges
  commentId: M:VPEAR.Server.Data.Repository`3.SaveChanges
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.SaveChanges()
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).SaveChanges()
  nameWithType: Repository<TDbContext, TEntity, TKey>.SaveChanges()
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).SaveChanges()
- uid: VPEAR.Server.Data.Repository`3.SaveChanges*
  name: SaveChanges
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3_SaveChanges_
  commentId: Overload:VPEAR.Server.Data.Repository`3.SaveChanges
  isSpec: "True"
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.SaveChanges
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).SaveChanges
  nameWithType: Repository<TDbContext, TEntity, TKey>.SaveChanges
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).SaveChanges
- uid: VPEAR.Server.Data.Repository`3.SaveChangesAsync
  name: SaveChangesAsync()
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3_SaveChangesAsync
  commentId: M:VPEAR.Server.Data.Repository`3.SaveChangesAsync
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.SaveChangesAsync()
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).SaveChangesAsync()
  nameWithType: Repository<TDbContext, TEntity, TKey>.SaveChangesAsync()
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).SaveChangesAsync()
- uid: VPEAR.Server.Data.Repository`3.SaveChangesAsync*
  name: SaveChangesAsync
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3_SaveChangesAsync_
  commentId: Overload:VPEAR.Server.Data.Repository`3.SaveChangesAsync
  isSpec: "True"
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.SaveChangesAsync
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).SaveChangesAsync
  nameWithType: Repository<TDbContext, TEntity, TKey>.SaveChangesAsync
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).SaveChangesAsync
- uid: VPEAR.Server.Data.Repository`3.UpdateAsync(`1)
  name: UpdateAsync(TEntity)
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3_UpdateAsync__1_
  commentId: M:VPEAR.Server.Data.Repository`3.UpdateAsync(`1)
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.UpdateAsync(TEntity)
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).UpdateAsync(TEntity)
  nameWithType: Repository<TDbContext, TEntity, TKey>.UpdateAsync(TEntity)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).UpdateAsync(TEntity)
- uid: VPEAR.Server.Data.Repository`3.UpdateAsync*
  name: UpdateAsync
  href: api/VPEAR.Server.Data.Repository-3.html#VPEAR_Server_Data_Repository_3_UpdateAsync_
  commentId: Overload:VPEAR.Server.Data.Repository`3.UpdateAsync
  isSpec: "True"
  fullName: VPEAR.Server.Data.Repository<TDbContext, TEntity, TKey>.UpdateAsync
  fullName.vb: VPEAR.Server.Data.Repository(Of TDbContext, TEntity, TKey).UpdateAsync
  nameWithType: Repository<TDbContext, TEntity, TKey>.UpdateAsync
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).UpdateAsync
- uid: VPEAR.Server.Data.VPEARDbContext
  name: VPEARDbContext
  href: api/VPEAR.Server.Data.VPEARDbContext.html
  commentId: T:VPEAR.Server.Data.VPEARDbContext
  fullName: VPEAR.Server.Data.VPEARDbContext
  nameWithType: VPEARDbContext
- uid: VPEAR.Server.Data.VPEARDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{VPEAR.Server.Data.VPEARDbContext},MediatR.IMediator)
  name: VPEARDbContext(DbContextOptions<VPEARDbContext>, IMediator)
  href: api/VPEAR.Server.Data.VPEARDbContext.html#VPEAR_Server_Data_VPEARDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_VPEAR_Server_Data_VPEARDbContext__MediatR_IMediator_
  commentId: M:VPEAR.Server.Data.VPEARDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{VPEAR.Server.Data.VPEARDbContext},MediatR.IMediator)
  name.vb: VPEARDbContext(DbContextOptions(Of VPEARDbContext), IMediator)
  fullName: VPEAR.Server.Data.VPEARDbContext.VPEARDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<VPEAR.Server.Data.VPEARDbContext>, MediatR.IMediator)
  fullName.vb: VPEAR.Server.Data.VPEARDbContext.VPEARDbContext(Microsoft.EntityFrameworkCore.DbContextOptions(Of VPEAR.Server.Data.VPEARDbContext), MediatR.IMediator)
  nameWithType: VPEARDbContext.VPEARDbContext(DbContextOptions<VPEARDbContext>, IMediator)
  nameWithType.vb: VPEARDbContext.VPEARDbContext(DbContextOptions(Of VPEARDbContext), IMediator)
- uid: VPEAR.Server.Data.VPEARDbContext.#ctor*
  name: VPEARDbContext
  href: api/VPEAR.Server.Data.VPEARDbContext.html#VPEAR_Server_Data_VPEARDbContext__ctor_
  commentId: Overload:VPEAR.Server.Data.VPEARDbContext.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Data.VPEARDbContext.VPEARDbContext
  nameWithType: VPEARDbContext.VPEARDbContext
- uid: VPEAR.Server.Data.VPEARDbContext.Devices
  name: Devices
  href: api/VPEAR.Server.Data.VPEARDbContext.html#VPEAR_Server_Data_VPEARDbContext_Devices
  commentId: P:VPEAR.Server.Data.VPEARDbContext.Devices
  fullName: VPEAR.Server.Data.VPEARDbContext.Devices
  nameWithType: VPEARDbContext.Devices
- uid: VPEAR.Server.Data.VPEARDbContext.Devices*
  name: Devices
  href: api/VPEAR.Server.Data.VPEARDbContext.html#VPEAR_Server_Data_VPEARDbContext_Devices_
  commentId: Overload:VPEAR.Server.Data.VPEARDbContext.Devices
  isSpec: "True"
  fullName: VPEAR.Server.Data.VPEARDbContext.Devices
  nameWithType: VPEARDbContext.Devices
- uid: VPEAR.Server.Data.VPEARDbContext.Filters
  name: Filters
  href: api/VPEAR.Server.Data.VPEARDbContext.html#VPEAR_Server_Data_VPEARDbContext_Filters
  commentId: P:VPEAR.Server.Data.VPEARDbContext.Filters
  fullName: VPEAR.Server.Data.VPEARDbContext.Filters
  nameWithType: VPEARDbContext.Filters
- uid: VPEAR.Server.Data.VPEARDbContext.Filters*
  name: Filters
  href: api/VPEAR.Server.Data.VPEARDbContext.html#VPEAR_Server_Data_VPEARDbContext_Filters_
  commentId: Overload:VPEAR.Server.Data.VPEARDbContext.Filters
  isSpec: "True"
  fullName: VPEAR.Server.Data.VPEARDbContext.Filters
  nameWithType: VPEARDbContext.Filters
- uid: VPEAR.Server.Data.VPEARDbContext.Frames
  name: Frames
  href: api/VPEAR.Server.Data.VPEARDbContext.html#VPEAR_Server_Data_VPEARDbContext_Frames
  commentId: P:VPEAR.Server.Data.VPEARDbContext.Frames
  fullName: VPEAR.Server.Data.VPEARDbContext.Frames
  nameWithType: VPEARDbContext.Frames
- uid: VPEAR.Server.Data.VPEARDbContext.Frames*
  name: Frames
  href: api/VPEAR.Server.Data.VPEARDbContext.html#VPEAR_Server_Data_VPEARDbContext_Frames_
  commentId: Overload:VPEAR.Server.Data.VPEARDbContext.Frames
  isSpec: "True"
  fullName: VPEAR.Server.Data.VPEARDbContext.Frames
  nameWithType: VPEARDbContext.Frames
- uid: VPEAR.Server.Data.VPEARDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/VPEAR.Server.Data.VPEARDbContext.html#VPEAR_Server_Data_VPEARDbContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:VPEAR.Server.Data.VPEARDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: VPEAR.Server.Data.VPEARDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: VPEARDbContext.OnModelCreating(ModelBuilder)
- uid: VPEAR.Server.Data.VPEARDbContext.OnModelCreating*
  name: OnModelCreating
  href: api/VPEAR.Server.Data.VPEARDbContext.html#VPEAR_Server_Data_VPEARDbContext_OnModelCreating_
  commentId: Overload:VPEAR.Server.Data.VPEARDbContext.OnModelCreating
  isSpec: "True"
  fullName: VPEAR.Server.Data.VPEARDbContext.OnModelCreating
  nameWithType: VPEARDbContext.OnModelCreating
- uid: VPEAR.Server.Data.VPEARDbContext.SaveChanges
  name: SaveChanges()
  href: api/VPEAR.Server.Data.VPEARDbContext.html#VPEAR_Server_Data_VPEARDbContext_SaveChanges
  commentId: M:VPEAR.Server.Data.VPEARDbContext.SaveChanges
  fullName: VPEAR.Server.Data.VPEARDbContext.SaveChanges()
  nameWithType: VPEARDbContext.SaveChanges()
- uid: VPEAR.Server.Data.VPEARDbContext.SaveChanges*
  name: SaveChanges
  href: api/VPEAR.Server.Data.VPEARDbContext.html#VPEAR_Server_Data_VPEARDbContext_SaveChanges_
  commentId: Overload:VPEAR.Server.Data.VPEARDbContext.SaveChanges
  isSpec: "True"
  fullName: VPEAR.Server.Data.VPEARDbContext.SaveChanges
  nameWithType: VPEARDbContext.SaveChanges
- uid: VPEAR.Server.Data.VPEARDbContext.SaveChangesAsync(System.Threading.CancellationToken)
  name: SaveChangesAsync(CancellationToken)
  href: api/VPEAR.Server.Data.VPEARDbContext.html#VPEAR_Server_Data_VPEARDbContext_SaveChangesAsync_System_Threading_CancellationToken_
  commentId: M:VPEAR.Server.Data.VPEARDbContext.SaveChangesAsync(System.Threading.CancellationToken)
  fullName: VPEAR.Server.Data.VPEARDbContext.SaveChangesAsync(System.Threading.CancellationToken)
  nameWithType: VPEARDbContext.SaveChangesAsync(CancellationToken)
- uid: VPEAR.Server.Data.VPEARDbContext.SaveChangesAsync*
  name: SaveChangesAsync
  href: api/VPEAR.Server.Data.VPEARDbContext.html#VPEAR_Server_Data_VPEARDbContext_SaveChangesAsync_
  commentId: Overload:VPEAR.Server.Data.VPEARDbContext.SaveChangesAsync
  isSpec: "True"
  fullName: VPEAR.Server.Data.VPEARDbContext.SaveChangesAsync
  nameWithType: VPEARDbContext.SaveChangesAsync
- uid: VPEAR.Server.Filters
  name: VPEAR.Server.Filters
  href: api/VPEAR.Server.Filters.html
  commentId: N:VPEAR.Server.Filters
  fullName: VPEAR.Server.Filters
  nameWithType: VPEAR.Server.Filters
- uid: VPEAR.Server.Filters.GlobalExceptionFilter
  name: GlobalExceptionFilter
  href: api/VPEAR.Server.Filters.GlobalExceptionFilter.html
  commentId: T:VPEAR.Server.Filters.GlobalExceptionFilter
  fullName: VPEAR.Server.Filters.GlobalExceptionFilter
  nameWithType: GlobalExceptionFilter
- uid: VPEAR.Server.Filters.GlobalExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)
  name: OnException(ExceptionContext)
  href: api/VPEAR.Server.Filters.GlobalExceptionFilter.html#VPEAR_Server_Filters_GlobalExceptionFilter_OnException_Microsoft_AspNetCore_Mvc_Filters_ExceptionContext_
  commentId: M:VPEAR.Server.Filters.GlobalExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)
  fullName: VPEAR.Server.Filters.GlobalExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)
  nameWithType: GlobalExceptionFilter.OnException(ExceptionContext)
- uid: VPEAR.Server.Filters.GlobalExceptionFilter.OnException*
  name: OnException
  href: api/VPEAR.Server.Filters.GlobalExceptionFilter.html#VPEAR_Server_Filters_GlobalExceptionFilter_OnException_
  commentId: Overload:VPEAR.Server.Filters.GlobalExceptionFilter.OnException
  isSpec: "True"
  fullName: VPEAR.Server.Filters.GlobalExceptionFilter.OnException
  nameWithType: GlobalExceptionFilter.OnException
- uid: VPEAR.Server.Handlers
  name: VPEAR.Server.Handlers
  href: api/VPEAR.Server.Handlers.html
  commentId: N:VPEAR.Server.Handlers
  fullName: VPEAR.Server.Handlers
  nameWithType: VPEAR.Server.Handlers
- uid: VPEAR.Server.Handlers.DeviceFrequencyChangedHandler
  name: DeviceFrequencyChangedHandler
  href: api/VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.html
  commentId: T:VPEAR.Server.Handlers.DeviceFrequencyChangedHandler
  fullName: VPEAR.Server.Handlers.DeviceFrequencyChangedHandler
  nameWithType: DeviceFrequencyChangedHandler
- uid: VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.#ctor(Quartz.ISchedulerFactory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Handlers.DeviceFrequencyChangedHandler})
  name: DeviceFrequencyChangedHandler(ISchedulerFactory, ILogger<DeviceFrequencyChangedHandler>)
  href: api/VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.html#VPEAR_Server_Handlers_DeviceFrequencyChangedHandler__ctor_Quartz_ISchedulerFactory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Handlers_DeviceFrequencyChangedHandler__
  commentId: M:VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.#ctor(Quartz.ISchedulerFactory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Handlers.DeviceFrequencyChangedHandler})
  name.vb: DeviceFrequencyChangedHandler(ISchedulerFactory, ILogger(Of DeviceFrequencyChangedHandler))
  fullName: VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.DeviceFrequencyChangedHandler(Quartz.ISchedulerFactory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Handlers.DeviceFrequencyChangedHandler>)
  fullName.vb: VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.DeviceFrequencyChangedHandler(Quartz.ISchedulerFactory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Handlers.DeviceFrequencyChangedHandler))
  nameWithType: DeviceFrequencyChangedHandler.DeviceFrequencyChangedHandler(ISchedulerFactory, ILogger<DeviceFrequencyChangedHandler>)
  nameWithType.vb: DeviceFrequencyChangedHandler.DeviceFrequencyChangedHandler(ISchedulerFactory, ILogger(Of DeviceFrequencyChangedHandler))
- uid: VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.#ctor*
  name: DeviceFrequencyChangedHandler
  href: api/VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.html#VPEAR_Server_Handlers_DeviceFrequencyChangedHandler__ctor_
  commentId: Overload:VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.DeviceFrequencyChangedHandler
  nameWithType: DeviceFrequencyChangedHandler.DeviceFrequencyChangedHandler
- uid: VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.Handle(VPEAR.Core.Events.DeviceFrequencyChangedEvent,System.Threading.CancellationToken)
  name: Handle(DeviceFrequencyChangedEvent, CancellationToken)
  href: api/VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.html#VPEAR_Server_Handlers_DeviceFrequencyChangedHandler_Handle_VPEAR_Core_Events_DeviceFrequencyChangedEvent_System_Threading_CancellationToken_
  commentId: M:VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.Handle(VPEAR.Core.Events.DeviceFrequencyChangedEvent,System.Threading.CancellationToken)
  fullName: VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.Handle(VPEAR.Core.Events.DeviceFrequencyChangedEvent, System.Threading.CancellationToken)
  nameWithType: DeviceFrequencyChangedHandler.Handle(DeviceFrequencyChangedEvent, CancellationToken)
- uid: VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.Handle*
  name: Handle
  href: api/VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.html#VPEAR_Server_Handlers_DeviceFrequencyChangedHandler_Handle_
  commentId: Overload:VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.Handle
  isSpec: "True"
  fullName: VPEAR.Server.Handlers.DeviceFrequencyChangedHandler.Handle
  nameWithType: DeviceFrequencyChangedHandler.Handle
- uid: VPEAR.Server.Handlers.DeviceStatusChangedHandler
  name: DeviceStatusChangedHandler
  href: api/VPEAR.Server.Handlers.DeviceStatusChangedHandler.html
  commentId: T:VPEAR.Server.Handlers.DeviceStatusChangedHandler
  fullName: VPEAR.Server.Handlers.DeviceStatusChangedHandler
  nameWithType: DeviceStatusChangedHandler
- uid: VPEAR.Server.Handlers.DeviceStatusChangedHandler.#ctor(Quartz.ISchedulerFactory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Handlers.DeviceStatusChangedHandler})
  name: DeviceStatusChangedHandler(ISchedulerFactory, ILogger<DeviceStatusChangedHandler>)
  href: api/VPEAR.Server.Handlers.DeviceStatusChangedHandler.html#VPEAR_Server_Handlers_DeviceStatusChangedHandler__ctor_Quartz_ISchedulerFactory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Handlers_DeviceStatusChangedHandler__
  commentId: M:VPEAR.Server.Handlers.DeviceStatusChangedHandler.#ctor(Quartz.ISchedulerFactory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Handlers.DeviceStatusChangedHandler})
  name.vb: DeviceStatusChangedHandler(ISchedulerFactory, ILogger(Of DeviceStatusChangedHandler))
  fullName: VPEAR.Server.Handlers.DeviceStatusChangedHandler.DeviceStatusChangedHandler(Quartz.ISchedulerFactory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Handlers.DeviceStatusChangedHandler>)
  fullName.vb: VPEAR.Server.Handlers.DeviceStatusChangedHandler.DeviceStatusChangedHandler(Quartz.ISchedulerFactory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Handlers.DeviceStatusChangedHandler))
  nameWithType: DeviceStatusChangedHandler.DeviceStatusChangedHandler(ISchedulerFactory, ILogger<DeviceStatusChangedHandler>)
  nameWithType.vb: DeviceStatusChangedHandler.DeviceStatusChangedHandler(ISchedulerFactory, ILogger(Of DeviceStatusChangedHandler))
- uid: VPEAR.Server.Handlers.DeviceStatusChangedHandler.#ctor*
  name: DeviceStatusChangedHandler
  href: api/VPEAR.Server.Handlers.DeviceStatusChangedHandler.html#VPEAR_Server_Handlers_DeviceStatusChangedHandler__ctor_
  commentId: Overload:VPEAR.Server.Handlers.DeviceStatusChangedHandler.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Handlers.DeviceStatusChangedHandler.DeviceStatusChangedHandler
  nameWithType: DeviceStatusChangedHandler.DeviceStatusChangedHandler
- uid: VPEAR.Server.Handlers.DeviceStatusChangedHandler.Handle(VPEAR.Core.Events.DeviceStatusChangedEvent,System.Threading.CancellationToken)
  name: Handle(DeviceStatusChangedEvent, CancellationToken)
  href: api/VPEAR.Server.Handlers.DeviceStatusChangedHandler.html#VPEAR_Server_Handlers_DeviceStatusChangedHandler_Handle_VPEAR_Core_Events_DeviceStatusChangedEvent_System_Threading_CancellationToken_
  commentId: M:VPEAR.Server.Handlers.DeviceStatusChangedHandler.Handle(VPEAR.Core.Events.DeviceStatusChangedEvent,System.Threading.CancellationToken)
  fullName: VPEAR.Server.Handlers.DeviceStatusChangedHandler.Handle(VPEAR.Core.Events.DeviceStatusChangedEvent, System.Threading.CancellationToken)
  nameWithType: DeviceStatusChangedHandler.Handle(DeviceStatusChangedEvent, CancellationToken)
- uid: VPEAR.Server.Handlers.DeviceStatusChangedHandler.Handle*
  name: Handle
  href: api/VPEAR.Server.Handlers.DeviceStatusChangedHandler.html#VPEAR_Server_Handlers_DeviceStatusChangedHandler_Handle_
  commentId: Overload:VPEAR.Server.Handlers.DeviceStatusChangedHandler.Handle
  isSpec: "True"
  fullName: VPEAR.Server.Handlers.DeviceStatusChangedHandler.Handle
  nameWithType: DeviceStatusChangedHandler.Handle
- uid: VPEAR.Server.Modules
  name: VPEAR.Server.Modules
  href: api/VPEAR.Server.Modules.html
  commentId: N:VPEAR.Server.Modules
  fullName: VPEAR.Server.Modules
  nameWithType: VPEAR.Server.Modules
- uid: VPEAR.Server.Modules.ClientModule
  name: ClientModule
  href: api/VPEAR.Server.Modules.ClientModule.html
  commentId: T:VPEAR.Server.Modules.ClientModule
  fullName: VPEAR.Server.Modules.ClientModule
  nameWithType: ClientModule
- uid: VPEAR.Server.Modules.ClientModule.Load(Autofac.ContainerBuilder)
  name: Load(ContainerBuilder)
  href: api/VPEAR.Server.Modules.ClientModule.html#VPEAR_Server_Modules_ClientModule_Load_Autofac_ContainerBuilder_
  commentId: M:VPEAR.Server.Modules.ClientModule.Load(Autofac.ContainerBuilder)
  fullName: VPEAR.Server.Modules.ClientModule.Load(Autofac.ContainerBuilder)
  nameWithType: ClientModule.Load(ContainerBuilder)
- uid: VPEAR.Server.Modules.ClientModule.Load*
  name: Load
  href: api/VPEAR.Server.Modules.ClientModule.html#VPEAR_Server_Modules_ClientModule_Load_
  commentId: Overload:VPEAR.Server.Modules.ClientModule.Load
  isSpec: "True"
  fullName: VPEAR.Server.Modules.ClientModule.Load
  nameWithType: ClientModule.Load
- uid: VPEAR.Server.Modules.HandlerModule
  name: HandlerModule
  href: api/VPEAR.Server.Modules.HandlerModule.html
  commentId: T:VPEAR.Server.Modules.HandlerModule
  fullName: VPEAR.Server.Modules.HandlerModule
  nameWithType: HandlerModule
- uid: VPEAR.Server.Modules.HandlerModule.Load(Autofac.ContainerBuilder)
  name: Load(ContainerBuilder)
  href: api/VPEAR.Server.Modules.HandlerModule.html#VPEAR_Server_Modules_HandlerModule_Load_Autofac_ContainerBuilder_
  commentId: M:VPEAR.Server.Modules.HandlerModule.Load(Autofac.ContainerBuilder)
  fullName: VPEAR.Server.Modules.HandlerModule.Load(Autofac.ContainerBuilder)
  nameWithType: HandlerModule.Load(ContainerBuilder)
- uid: VPEAR.Server.Modules.HandlerModule.Load*
  name: Load
  href: api/VPEAR.Server.Modules.HandlerModule.html#VPEAR_Server_Modules_HandlerModule_Load_
  commentId: Overload:VPEAR.Server.Modules.HandlerModule.Load
  isSpec: "True"
  fullName: VPEAR.Server.Modules.HandlerModule.Load
  nameWithType: HandlerModule.Load
- uid: VPEAR.Server.Modules.JobModule
  name: JobModule
  href: api/VPEAR.Server.Modules.JobModule.html
  commentId: T:VPEAR.Server.Modules.JobModule
  fullName: VPEAR.Server.Modules.JobModule
  nameWithType: JobModule
- uid: VPEAR.Server.Modules.JobModule.Load(Autofac.ContainerBuilder)
  name: Load(ContainerBuilder)
  href: api/VPEAR.Server.Modules.JobModule.html#VPEAR_Server_Modules_JobModule_Load_Autofac_ContainerBuilder_
  commentId: M:VPEAR.Server.Modules.JobModule.Load(Autofac.ContainerBuilder)
  fullName: VPEAR.Server.Modules.JobModule.Load(Autofac.ContainerBuilder)
  nameWithType: JobModule.Load(ContainerBuilder)
- uid: VPEAR.Server.Modules.JobModule.Load*
  name: Load
  href: api/VPEAR.Server.Modules.JobModule.html#VPEAR_Server_Modules_JobModule_Load_
  commentId: Overload:VPEAR.Server.Modules.JobModule.Load
  isSpec: "True"
  fullName: VPEAR.Server.Modules.JobModule.Load
  nameWithType: JobModule.Load
- uid: VPEAR.Server.Modules.RepositoryModule
  name: RepositoryModule
  href: api/VPEAR.Server.Modules.RepositoryModule.html
  commentId: T:VPEAR.Server.Modules.RepositoryModule
  fullName: VPEAR.Server.Modules.RepositoryModule
  nameWithType: RepositoryModule
- uid: VPEAR.Server.Modules.RepositoryModule.Load(Autofac.ContainerBuilder)
  name: Load(ContainerBuilder)
  href: api/VPEAR.Server.Modules.RepositoryModule.html#VPEAR_Server_Modules_RepositoryModule_Load_Autofac_ContainerBuilder_
  commentId: M:VPEAR.Server.Modules.RepositoryModule.Load(Autofac.ContainerBuilder)
  fullName: VPEAR.Server.Modules.RepositoryModule.Load(Autofac.ContainerBuilder)
  nameWithType: RepositoryModule.Load(ContainerBuilder)
- uid: VPEAR.Server.Modules.RepositoryModule.Load*
  name: Load
  href: api/VPEAR.Server.Modules.RepositoryModule.html#VPEAR_Server_Modules_RepositoryModule_Load_
  commentId: Overload:VPEAR.Server.Modules.RepositoryModule.Load
  isSpec: "True"
  fullName: VPEAR.Server.Modules.RepositoryModule.Load
  nameWithType: RepositoryModule.Load
- uid: VPEAR.Server.Modules.ServiceModule
  name: ServiceModule
  href: api/VPEAR.Server.Modules.ServiceModule.html
  commentId: T:VPEAR.Server.Modules.ServiceModule
  fullName: VPEAR.Server.Modules.ServiceModule
  nameWithType: ServiceModule
- uid: VPEAR.Server.Modules.ServiceModule.Load(Autofac.ContainerBuilder)
  name: Load(ContainerBuilder)
  href: api/VPEAR.Server.Modules.ServiceModule.html#VPEAR_Server_Modules_ServiceModule_Load_Autofac_ContainerBuilder_
  commentId: M:VPEAR.Server.Modules.ServiceModule.Load(Autofac.ContainerBuilder)
  fullName: VPEAR.Server.Modules.ServiceModule.Load(Autofac.ContainerBuilder)
  nameWithType: ServiceModule.Load(ContainerBuilder)
- uid: VPEAR.Server.Modules.ServiceModule.Load*
  name: Load
  href: api/VPEAR.Server.Modules.ServiceModule.html#VPEAR_Server_Modules_ServiceModule_Load_
  commentId: Overload:VPEAR.Server.Modules.ServiceModule.Load
  isSpec: "True"
  fullName: VPEAR.Server.Modules.ServiceModule.Load
  nameWithType: ServiceModule.Load
- uid: VPEAR.Server.Modules.ValidatorModule
  name: ValidatorModule
  href: api/VPEAR.Server.Modules.ValidatorModule.html
  commentId: T:VPEAR.Server.Modules.ValidatorModule
  fullName: VPEAR.Server.Modules.ValidatorModule
  nameWithType: ValidatorModule
- uid: VPEAR.Server.Modules.ValidatorModule.Load(Autofac.ContainerBuilder)
  name: Load(ContainerBuilder)
  href: api/VPEAR.Server.Modules.ValidatorModule.html#VPEAR_Server_Modules_ValidatorModule_Load_Autofac_ContainerBuilder_
  commentId: M:VPEAR.Server.Modules.ValidatorModule.Load(Autofac.ContainerBuilder)
  fullName: VPEAR.Server.Modules.ValidatorModule.Load(Autofac.ContainerBuilder)
  nameWithType: ValidatorModule.Load(ContainerBuilder)
- uid: VPEAR.Server.Modules.ValidatorModule.Load*
  name: Load
  href: api/VPEAR.Server.Modules.ValidatorModule.html#VPEAR_Server_Modules_ValidatorModule_Load_
  commentId: Overload:VPEAR.Server.Modules.ValidatorModule.Load
  isSpec: "True"
  fullName: VPEAR.Server.Modules.ValidatorModule.Load
  nameWithType: ValidatorModule.Load
- uid: VPEAR.Server.Program
  name: Program
  href: api/VPEAR.Server.Program.html
  commentId: T:VPEAR.Server.Program
  fullName: VPEAR.Server.Program
  nameWithType: Program
- uid: VPEAR.Server.Program.CreateHostBuilder(System.String[])
  name: CreateHostBuilder(String[])
  href: api/VPEAR.Server.Program.html#VPEAR_Server_Program_CreateHostBuilder_System_String___
  commentId: M:VPEAR.Server.Program.CreateHostBuilder(System.String[])
  name.vb: CreateHostBuilder(String())
  fullName: VPEAR.Server.Program.CreateHostBuilder(System.String[])
  fullName.vb: VPEAR.Server.Program.CreateHostBuilder(System.String())
  nameWithType: Program.CreateHostBuilder(String[])
  nameWithType.vb: Program.CreateHostBuilder(String())
- uid: VPEAR.Server.Program.CreateHostBuilder*
  name: CreateHostBuilder
  href: api/VPEAR.Server.Program.html#VPEAR_Server_Program_CreateHostBuilder_
  commentId: Overload:VPEAR.Server.Program.CreateHostBuilder
  isSpec: "True"
  fullName: VPEAR.Server.Program.CreateHostBuilder
  nameWithType: Program.CreateHostBuilder
- uid: VPEAR.Server.Program.Main(System.String[])
  name: Main(String[])
  href: api/VPEAR.Server.Program.html#VPEAR_Server_Program_Main_System_String___
  commentId: M:VPEAR.Server.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: VPEAR.Server.Program.Main(System.String[])
  fullName.vb: VPEAR.Server.Program.Main(System.String())
  nameWithType: Program.Main(String[])
  nameWithType.vb: Program.Main(String())
- uid: VPEAR.Server.Program.Main*
  name: Main
  href: api/VPEAR.Server.Program.html#VPEAR_Server_Program_Main_
  commentId: Overload:VPEAR.Server.Program.Main
  isSpec: "True"
  fullName: VPEAR.Server.Program.Main
  nameWithType: Program.Main
- uid: VPEAR.Server.Services
  name: VPEAR.Server.Services
  href: api/VPEAR.Server.Services.html
  commentId: N:VPEAR.Server.Services
  fullName: VPEAR.Server.Services
  nameWithType: VPEAR.Server.Services
- uid: VPEAR.Server.Services.DeviceService
  name: DeviceService
  href: api/VPEAR.Server.Services.DeviceService.html
  commentId: T:VPEAR.Server.Services.DeviceService
  fullName: VPEAR.Server.Services.DeviceService
  nameWithType: DeviceService
- uid: VPEAR.Server.Services.DeviceService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.DeviceClient.Factory,Quartz.ISchedulerFactory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.DeviceController})
  name: DeviceService(IRepository<Device, Guid>, DeviceClient.Factory, ISchedulerFactory, ILogger<DeviceController>)
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Entities_Device_System_Guid__VPEAR_Core_DeviceClient_Factory_Quartz_ISchedulerFactory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_DeviceController__
  commentId: M:VPEAR.Server.Services.DeviceService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.DeviceClient.Factory,Quartz.ISchedulerFactory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.DeviceController})
  name.vb: DeviceService(IRepository(Of Device, Guid), DeviceClient.Factory, ISchedulerFactory, ILogger(Of DeviceController))
  fullName: VPEAR.Server.Services.DeviceService.DeviceService(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Entities.Device, System.Guid>, VPEAR.Core.DeviceClient.Factory, Quartz.ISchedulerFactory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.DeviceController>)
  fullName.vb: VPEAR.Server.Services.DeviceService.DeviceService(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Entities.Device, System.Guid), VPEAR.Core.DeviceClient.Factory, Quartz.ISchedulerFactory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.DeviceController))
  nameWithType: DeviceService.DeviceService(IRepository<Device, Guid>, DeviceClient.Factory, ISchedulerFactory, ILogger<DeviceController>)
  nameWithType.vb: DeviceService.DeviceService(IRepository(Of Device, Guid), DeviceClient.Factory, ISchedulerFactory, ILogger(Of DeviceController))
- uid: VPEAR.Server.Services.DeviceService.#ctor*
  name: DeviceService
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService__ctor_
  commentId: Overload:VPEAR.Server.Services.DeviceService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.DeviceService.DeviceService
  nameWithType: DeviceService.DeviceService
- uid: VPEAR.Server.Services.DeviceService.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_DeleteAsync_System_Guid_
  commentId: M:VPEAR.Server.Services.DeviceService.DeleteAsync(System.Guid)
  fullName: VPEAR.Server.Services.DeviceService.DeleteAsync(System.Guid)
  nameWithType: DeviceService.DeleteAsync(Guid)
- uid: VPEAR.Server.Services.DeviceService.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_DeleteAsync_
  commentId: Overload:VPEAR.Server.Services.DeviceService.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.DeviceService.DeleteAsync
  nameWithType: DeviceService.DeleteAsync
- uid: VPEAR.Server.Services.DeviceService.GetAsync(System.Nullable{VPEAR.Core.DeviceStatus})
  name: GetAsync(Nullable<DeviceStatus>)
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_GetAsync_System_Nullable_VPEAR_Core_DeviceStatus__
  commentId: M:VPEAR.Server.Services.DeviceService.GetAsync(System.Nullable{VPEAR.Core.DeviceStatus})
  name.vb: GetAsync(Nullable(Of DeviceStatus))
  fullName: VPEAR.Server.Services.DeviceService.GetAsync(System.Nullable<VPEAR.Core.DeviceStatus>)
  fullName.vb: VPEAR.Server.Services.DeviceService.GetAsync(System.Nullable(Of VPEAR.Core.DeviceStatus))
  nameWithType: DeviceService.GetAsync(Nullable<DeviceStatus>)
  nameWithType.vb: DeviceService.GetAsync(Nullable(Of DeviceStatus))
- uid: VPEAR.Server.Services.DeviceService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_GetAsync_
  commentId: Overload:VPEAR.Server.Services.DeviceService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.DeviceService.GetAsync
  nameWithType: DeviceService.GetAsync
- uid: VPEAR.Server.Services.DeviceService.PostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  name: PostAsync(PostDeviceRequest)
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_PostAsync_VPEAR_Core_Wrappers_PostDeviceRequest_
  commentId: M:VPEAR.Server.Services.DeviceService.PostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  fullName: VPEAR.Server.Services.DeviceService.PostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  nameWithType: DeviceService.PostAsync(PostDeviceRequest)
- uid: VPEAR.Server.Services.DeviceService.PostAsync*
  name: PostAsync
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_PostAsync_
  commentId: Overload:VPEAR.Server.Services.DeviceService.PostAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.DeviceService.PostAsync
  nameWithType: DeviceService.PostAsync
- uid: VPEAR.Server.Services.DeviceService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutDeviceRequest)
  name: PutAsync(Guid, PutDeviceRequest)
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutDeviceRequest_
  commentId: M:VPEAR.Server.Services.DeviceService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutDeviceRequest)
  fullName: VPEAR.Server.Services.DeviceService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutDeviceRequest)
  nameWithType: DeviceService.PutAsync(Guid, PutDeviceRequest)
- uid: VPEAR.Server.Services.DeviceService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_PutAsync_
  commentId: Overload:VPEAR.Server.Services.DeviceService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.DeviceService.PutAsync
  nameWithType: DeviceService.PutAsync
- uid: VPEAR.Server.Services.FilterService
  name: FilterService
  href: api/VPEAR.Server.Services.FilterService.html
  commentId: T:VPEAR.Server.Services.FilterService
  fullName: VPEAR.Server.Services.FilterService
  nameWithType: FilterService
- uid: VPEAR.Server.Services.FilterService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.DeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FilterController})
  name: FilterService(IRepository<Device, Guid>, DeviceClient.Factory, ILogger<FilterController>)
  href: api/VPEAR.Server.Services.FilterService.html#VPEAR_Server_Services_FilterService__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Entities_Device_System_Guid__VPEAR_Core_DeviceClient_Factory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_FilterController__
  commentId: M:VPEAR.Server.Services.FilterService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.DeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FilterController})
  name.vb: FilterService(IRepository(Of Device, Guid), DeviceClient.Factory, ILogger(Of FilterController))
  fullName: VPEAR.Server.Services.FilterService.FilterService(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Entities.Device, System.Guid>, VPEAR.Core.DeviceClient.Factory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.FilterController>)
  fullName.vb: VPEAR.Server.Services.FilterService.FilterService(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Entities.Device, System.Guid), VPEAR.Core.DeviceClient.Factory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.FilterController))
  nameWithType: FilterService.FilterService(IRepository<Device, Guid>, DeviceClient.Factory, ILogger<FilterController>)
  nameWithType.vb: FilterService.FilterService(IRepository(Of Device, Guid), DeviceClient.Factory, ILogger(Of FilterController))
- uid: VPEAR.Server.Services.FilterService.#ctor*
  name: FilterService
  href: api/VPEAR.Server.Services.FilterService.html#VPEAR_Server_Services_FilterService__ctor_
  commentId: Overload:VPEAR.Server.Services.FilterService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.FilterService.FilterService
  nameWithType: FilterService.FilterService
- uid: VPEAR.Server.Services.FilterService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Server.Services.FilterService.html#VPEAR_Server_Services_FilterService_GetAsync_System_Guid_
  commentId: M:VPEAR.Server.Services.FilterService.GetAsync(System.Guid)
  fullName: VPEAR.Server.Services.FilterService.GetAsync(System.Guid)
  nameWithType: FilterService.GetAsync(Guid)
- uid: VPEAR.Server.Services.FilterService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Services.FilterService.html#VPEAR_Server_Services_FilterService_GetAsync_
  commentId: Overload:VPEAR.Server.Services.FilterService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.FilterService.GetAsync
  nameWithType: FilterService.GetAsync
- uid: VPEAR.Server.Services.FilterService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFilterRequest)
  name: PutAsync(Guid, PutFilterRequest)
  href: api/VPEAR.Server.Services.FilterService.html#VPEAR_Server_Services_FilterService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutFilterRequest_
  commentId: M:VPEAR.Server.Services.FilterService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFilterRequest)
  fullName: VPEAR.Server.Services.FilterService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutFilterRequest)
  nameWithType: FilterService.PutAsync(Guid, PutFilterRequest)
- uid: VPEAR.Server.Services.FilterService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Server.Services.FilterService.html#VPEAR_Server_Services_FilterService_PutAsync_
  commentId: Overload:VPEAR.Server.Services.FilterService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.FilterService.PutAsync
  nameWithType: FilterService.PutAsync
- uid: VPEAR.Server.Services.FirmwareService
  name: FirmwareService
  href: api/VPEAR.Server.Services.FirmwareService.html
  commentId: T:VPEAR.Server.Services.FirmwareService
  fullName: VPEAR.Server.Services.FirmwareService
  nameWithType: FirmwareService
- uid: VPEAR.Server.Services.FirmwareService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.DeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FirmwareController})
  name: FirmwareService(IRepository<Device, Guid>, DeviceClient.Factory, ILogger<FirmwareController>)
  href: api/VPEAR.Server.Services.FirmwareService.html#VPEAR_Server_Services_FirmwareService__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Entities_Device_System_Guid__VPEAR_Core_DeviceClient_Factory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_FirmwareController__
  commentId: M:VPEAR.Server.Services.FirmwareService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.DeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FirmwareController})
  name.vb: FirmwareService(IRepository(Of Device, Guid), DeviceClient.Factory, ILogger(Of FirmwareController))
  fullName: VPEAR.Server.Services.FirmwareService.FirmwareService(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Entities.Device, System.Guid>, VPEAR.Core.DeviceClient.Factory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.FirmwareController>)
  fullName.vb: VPEAR.Server.Services.FirmwareService.FirmwareService(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Entities.Device, System.Guid), VPEAR.Core.DeviceClient.Factory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.FirmwareController))
  nameWithType: FirmwareService.FirmwareService(IRepository<Device, Guid>, DeviceClient.Factory, ILogger<FirmwareController>)
  nameWithType.vb: FirmwareService.FirmwareService(IRepository(Of Device, Guid), DeviceClient.Factory, ILogger(Of FirmwareController))
- uid: VPEAR.Server.Services.FirmwareService.#ctor*
  name: FirmwareService
  href: api/VPEAR.Server.Services.FirmwareService.html#VPEAR_Server_Services_FirmwareService__ctor_
  commentId: Overload:VPEAR.Server.Services.FirmwareService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.FirmwareService.FirmwareService
  nameWithType: FirmwareService.FirmwareService
- uid: VPEAR.Server.Services.FirmwareService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Server.Services.FirmwareService.html#VPEAR_Server_Services_FirmwareService_GetAsync_System_Guid_
  commentId: M:VPEAR.Server.Services.FirmwareService.GetAsync(System.Guid)
  fullName: VPEAR.Server.Services.FirmwareService.GetAsync(System.Guid)
  nameWithType: FirmwareService.GetAsync(Guid)
- uid: VPEAR.Server.Services.FirmwareService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Services.FirmwareService.html#VPEAR_Server_Services_FirmwareService_GetAsync_
  commentId: Overload:VPEAR.Server.Services.FirmwareService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.FirmwareService.GetAsync
  nameWithType: FirmwareService.GetAsync
- uid: VPEAR.Server.Services.FirmwareService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFirmwareRequest)
  name: PutAsync(Guid, PutFirmwareRequest)
  href: api/VPEAR.Server.Services.FirmwareService.html#VPEAR_Server_Services_FirmwareService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutFirmwareRequest_
  commentId: M:VPEAR.Server.Services.FirmwareService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFirmwareRequest)
  fullName: VPEAR.Server.Services.FirmwareService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutFirmwareRequest)
  nameWithType: FirmwareService.PutAsync(Guid, PutFirmwareRequest)
- uid: VPEAR.Server.Services.FirmwareService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Server.Services.FirmwareService.html#VPEAR_Server_Services_FirmwareService_PutAsync_
  commentId: Overload:VPEAR.Server.Services.FirmwareService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.FirmwareService.PutAsync
  nameWithType: FirmwareService.PutAsync
- uid: VPEAR.Server.Services.Jobs
  name: VPEAR.Server.Services.Jobs
  href: api/VPEAR.Server.Services.Jobs.html
  commentId: N:VPEAR.Server.Services.Jobs
  fullName: VPEAR.Server.Services.Jobs
  nameWithType: VPEAR.Server.Services.Jobs
- uid: VPEAR.Server.Services.Jobs.PollFramesJob
  name: PollFramesJob
  href: api/VPEAR.Server.Services.Jobs.PollFramesJob.html
  commentId: T:VPEAR.Server.Services.Jobs.PollFramesJob
  fullName: VPEAR.Server.Services.Jobs.PollFramesJob
  nameWithType: PollFramesJob
- uid: VPEAR.Server.Services.Jobs.PollFramesJob.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Frame,System.Guid},VPEAR.Core.DeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Services.Jobs.PollFramesJob})
  name: PollFramesJob(IRepository<Device, Guid>, IRepository<Frame, Guid>, DeviceClient.Factory, ILogger<PollFramesJob>)
  href: api/VPEAR.Server.Services.Jobs.PollFramesJob.html#VPEAR_Server_Services_Jobs_PollFramesJob__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Entities_Device_System_Guid__VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Entities_Frame_System_Guid__VPEAR_Core_DeviceClient_Factory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Services_Jobs_PollFramesJob__
  commentId: M:VPEAR.Server.Services.Jobs.PollFramesJob.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Frame,System.Guid},VPEAR.Core.DeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Services.Jobs.PollFramesJob})
  name.vb: PollFramesJob(IRepository(Of Device, Guid), IRepository(Of Frame, Guid), DeviceClient.Factory, ILogger(Of PollFramesJob))
  fullName: VPEAR.Server.Services.Jobs.PollFramesJob.PollFramesJob(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Entities.Device, System.Guid>, VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Entities.Frame, System.Guid>, VPEAR.Core.DeviceClient.Factory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Services.Jobs.PollFramesJob>)
  fullName.vb: VPEAR.Server.Services.Jobs.PollFramesJob.PollFramesJob(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Entities.Device, System.Guid), VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Entities.Frame, System.Guid), VPEAR.Core.DeviceClient.Factory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Services.Jobs.PollFramesJob))
  nameWithType: PollFramesJob.PollFramesJob(IRepository<Device, Guid>, IRepository<Frame, Guid>, DeviceClient.Factory, ILogger<PollFramesJob>)
  nameWithType.vb: PollFramesJob.PollFramesJob(IRepository(Of Device, Guid), IRepository(Of Frame, Guid), DeviceClient.Factory, ILogger(Of PollFramesJob))
- uid: VPEAR.Server.Services.Jobs.PollFramesJob.#ctor*
  name: PollFramesJob
  href: api/VPEAR.Server.Services.Jobs.PollFramesJob.html#VPEAR_Server_Services_Jobs_PollFramesJob__ctor_
  commentId: Overload:VPEAR.Server.Services.Jobs.PollFramesJob.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.Jobs.PollFramesJob.PollFramesJob
  nameWithType: PollFramesJob.PollFramesJob
- uid: VPEAR.Server.Services.Jobs.PollFramesJob.Execute(Quartz.IJobExecutionContext)
  name: Execute(IJobExecutionContext)
  href: api/VPEAR.Server.Services.Jobs.PollFramesJob.html#VPEAR_Server_Services_Jobs_PollFramesJob_Execute_Quartz_IJobExecutionContext_
  commentId: M:VPEAR.Server.Services.Jobs.PollFramesJob.Execute(Quartz.IJobExecutionContext)
  fullName: VPEAR.Server.Services.Jobs.PollFramesJob.Execute(Quartz.IJobExecutionContext)
  nameWithType: PollFramesJob.Execute(IJobExecutionContext)
- uid: VPEAR.Server.Services.Jobs.PollFramesJob.Execute*
  name: Execute
  href: api/VPEAR.Server.Services.Jobs.PollFramesJob.html#VPEAR_Server_Services_Jobs_PollFramesJob_Execute_
  commentId: Overload:VPEAR.Server.Services.Jobs.PollFramesJob.Execute
  isSpec: "True"
  fullName: VPEAR.Server.Services.Jobs.PollFramesJob.Execute
  nameWithType: PollFramesJob.Execute
- uid: VPEAR.Server.Services.Jobs.SearcheDeviceJob
  name: SearcheDeviceJob
  href: api/VPEAR.Server.Services.Jobs.SearcheDeviceJob.html
  commentId: T:VPEAR.Server.Services.Jobs.SearcheDeviceJob
  fullName: VPEAR.Server.Services.Jobs.SearcheDeviceJob
  nameWithType: SearcheDeviceJob
- uid: VPEAR.Server.Services.Jobs.SearcheDeviceJob.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.DeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Services.Jobs.SearcheDeviceJob})
  name: SearcheDeviceJob(IRepository<Device, Guid>, DeviceClient.Factory, ILogger<SearcheDeviceJob>)
  href: api/VPEAR.Server.Services.Jobs.SearcheDeviceJob.html#VPEAR_Server_Services_Jobs_SearcheDeviceJob__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Entities_Device_System_Guid__VPEAR_Core_DeviceClient_Factory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Services_Jobs_SearcheDeviceJob__
  commentId: M:VPEAR.Server.Services.Jobs.SearcheDeviceJob.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.DeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Services.Jobs.SearcheDeviceJob})
  name.vb: SearcheDeviceJob(IRepository(Of Device, Guid), DeviceClient.Factory, ILogger(Of SearcheDeviceJob))
  fullName: VPEAR.Server.Services.Jobs.SearcheDeviceJob.SearcheDeviceJob(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Entities.Device, System.Guid>, VPEAR.Core.DeviceClient.Factory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Services.Jobs.SearcheDeviceJob>)
  fullName.vb: VPEAR.Server.Services.Jobs.SearcheDeviceJob.SearcheDeviceJob(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Entities.Device, System.Guid), VPEAR.Core.DeviceClient.Factory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Services.Jobs.SearcheDeviceJob))
  nameWithType: SearcheDeviceJob.SearcheDeviceJob(IRepository<Device, Guid>, DeviceClient.Factory, ILogger<SearcheDeviceJob>)
  nameWithType.vb: SearcheDeviceJob.SearcheDeviceJob(IRepository(Of Device, Guid), DeviceClient.Factory, ILogger(Of SearcheDeviceJob))
- uid: VPEAR.Server.Services.Jobs.SearcheDeviceJob.#ctor*
  name: SearcheDeviceJob
  href: api/VPEAR.Server.Services.Jobs.SearcheDeviceJob.html#VPEAR_Server_Services_Jobs_SearcheDeviceJob__ctor_
  commentId: Overload:VPEAR.Server.Services.Jobs.SearcheDeviceJob.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.Jobs.SearcheDeviceJob.SearcheDeviceJob
  nameWithType: SearcheDeviceJob.SearcheDeviceJob
- uid: VPEAR.Server.Services.Jobs.SearcheDeviceJob.Execute(Quartz.IJobExecutionContext)
  name: Execute(IJobExecutionContext)
  href: api/VPEAR.Server.Services.Jobs.SearcheDeviceJob.html#VPEAR_Server_Services_Jobs_SearcheDeviceJob_Execute_Quartz_IJobExecutionContext_
  commentId: M:VPEAR.Server.Services.Jobs.SearcheDeviceJob.Execute(Quartz.IJobExecutionContext)
  fullName: VPEAR.Server.Services.Jobs.SearcheDeviceJob.Execute(Quartz.IJobExecutionContext)
  nameWithType: SearcheDeviceJob.Execute(IJobExecutionContext)
- uid: VPEAR.Server.Services.Jobs.SearcheDeviceJob.Execute*
  name: Execute
  href: api/VPEAR.Server.Services.Jobs.SearcheDeviceJob.html#VPEAR_Server_Services_Jobs_SearcheDeviceJob_Execute_
  commentId: Overload:VPEAR.Server.Services.Jobs.SearcheDeviceJob.Execute
  isSpec: "True"
  fullName: VPEAR.Server.Services.Jobs.SearcheDeviceJob.Execute
  nameWithType: SearcheDeviceJob.Execute
- uid: VPEAR.Server.Services.PowerService
  name: PowerService
  href: api/VPEAR.Server.Services.PowerService.html
  commentId: T:VPEAR.Server.Services.PowerService
  fullName: VPEAR.Server.Services.PowerService
  nameWithType: PowerService
- uid: VPEAR.Server.Services.PowerService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.DeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.PowerController})
  name: PowerService(IRepository<Device, Guid>, DeviceClient.Factory, ILogger<PowerController>)
  href: api/VPEAR.Server.Services.PowerService.html#VPEAR_Server_Services_PowerService__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Entities_Device_System_Guid__VPEAR_Core_DeviceClient_Factory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_PowerController__
  commentId: M:VPEAR.Server.Services.PowerService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.DeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.PowerController})
  name.vb: PowerService(IRepository(Of Device, Guid), DeviceClient.Factory, ILogger(Of PowerController))
  fullName: VPEAR.Server.Services.PowerService.PowerService(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Entities.Device, System.Guid>, VPEAR.Core.DeviceClient.Factory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.PowerController>)
  fullName.vb: VPEAR.Server.Services.PowerService.PowerService(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Entities.Device, System.Guid), VPEAR.Core.DeviceClient.Factory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.PowerController))
  nameWithType: PowerService.PowerService(IRepository<Device, Guid>, DeviceClient.Factory, ILogger<PowerController>)
  nameWithType.vb: PowerService.PowerService(IRepository(Of Device, Guid), DeviceClient.Factory, ILogger(Of PowerController))
- uid: VPEAR.Server.Services.PowerService.#ctor*
  name: PowerService
  href: api/VPEAR.Server.Services.PowerService.html#VPEAR_Server_Services_PowerService__ctor_
  commentId: Overload:VPEAR.Server.Services.PowerService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.PowerService.PowerService
  nameWithType: PowerService.PowerService
- uid: VPEAR.Server.Services.PowerService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Server.Services.PowerService.html#VPEAR_Server_Services_PowerService_GetAsync_System_Guid_
  commentId: M:VPEAR.Server.Services.PowerService.GetAsync(System.Guid)
  fullName: VPEAR.Server.Services.PowerService.GetAsync(System.Guid)
  nameWithType: PowerService.GetAsync(Guid)
- uid: VPEAR.Server.Services.PowerService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Services.PowerService.html#VPEAR_Server_Services_PowerService_GetAsync_
  commentId: Overload:VPEAR.Server.Services.PowerService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.PowerService.GetAsync
  nameWithType: PowerService.GetAsync
- uid: VPEAR.Server.Services.SensorService
  name: SensorService
  href: api/VPEAR.Server.Services.SensorService.html
  commentId: T:VPEAR.Server.Services.SensorService
  fullName: VPEAR.Server.Services.SensorService
  nameWithType: SensorService
- uid: VPEAR.Server.Services.SensorService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Frame,System.Guid},VPEAR.Core.DeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.SensorController})
  name: SensorService(IRepository<Device, Guid>, IRepository<Frame, Guid>, DeviceClient.Factory, ILogger<SensorController>)
  href: api/VPEAR.Server.Services.SensorService.html#VPEAR_Server_Services_SensorService__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Entities_Device_System_Guid__VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Entities_Frame_System_Guid__VPEAR_Core_DeviceClient_Factory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_SensorController__
  commentId: M:VPEAR.Server.Services.SensorService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Frame,System.Guid},VPEAR.Core.DeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.SensorController})
  name.vb: SensorService(IRepository(Of Device, Guid), IRepository(Of Frame, Guid), DeviceClient.Factory, ILogger(Of SensorController))
  fullName: VPEAR.Server.Services.SensorService.SensorService(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Entities.Device, System.Guid>, VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Entities.Frame, System.Guid>, VPEAR.Core.DeviceClient.Factory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.SensorController>)
  fullName.vb: VPEAR.Server.Services.SensorService.SensorService(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Entities.Device, System.Guid), VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Entities.Frame, System.Guid), VPEAR.Core.DeviceClient.Factory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.SensorController))
  nameWithType: SensorService.SensorService(IRepository<Device, Guid>, IRepository<Frame, Guid>, DeviceClient.Factory, ILogger<SensorController>)
  nameWithType.vb: SensorService.SensorService(IRepository(Of Device, Guid), IRepository(Of Frame, Guid), DeviceClient.Factory, ILogger(Of SensorController))
- uid: VPEAR.Server.Services.SensorService.#ctor*
  name: SensorService
  href: api/VPEAR.Server.Services.SensorService.html#VPEAR_Server_Services_SensorService__ctor_
  commentId: Overload:VPEAR.Server.Services.SensorService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.SensorService.SensorService
  nameWithType: SensorService.SensorService
- uid: VPEAR.Server.Services.SensorService.GetFramesAsync(System.Guid,System.Int32,System.Int32)
  name: GetFramesAsync(Guid, Int32, Int32)
  href: api/VPEAR.Server.Services.SensorService.html#VPEAR_Server_Services_SensorService_GetFramesAsync_System_Guid_System_Int32_System_Int32_
  commentId: M:VPEAR.Server.Services.SensorService.GetFramesAsync(System.Guid,System.Int32,System.Int32)
  fullName: VPEAR.Server.Services.SensorService.GetFramesAsync(System.Guid, System.Int32, System.Int32)
  nameWithType: SensorService.GetFramesAsync(Guid, Int32, Int32)
- uid: VPEAR.Server.Services.SensorService.GetFramesAsync*
  name: GetFramesAsync
  href: api/VPEAR.Server.Services.SensorService.html#VPEAR_Server_Services_SensorService_GetFramesAsync_
  commentId: Overload:VPEAR.Server.Services.SensorService.GetFramesAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.SensorService.GetFramesAsync
  nameWithType: SensorService.GetFramesAsync
- uid: VPEAR.Server.Services.SensorService.GetSensorsAsync(System.Guid)
  name: GetSensorsAsync(Guid)
  href: api/VPEAR.Server.Services.SensorService.html#VPEAR_Server_Services_SensorService_GetSensorsAsync_System_Guid_
  commentId: M:VPEAR.Server.Services.SensorService.GetSensorsAsync(System.Guid)
  fullName: VPEAR.Server.Services.SensorService.GetSensorsAsync(System.Guid)
  nameWithType: SensorService.GetSensorsAsync(Guid)
- uid: VPEAR.Server.Services.SensorService.GetSensorsAsync*
  name: GetSensorsAsync
  href: api/VPEAR.Server.Services.SensorService.html#VPEAR_Server_Services_SensorService_GetSensorsAsync_
  commentId: Overload:VPEAR.Server.Services.SensorService.GetSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.SensorService.GetSensorsAsync
  nameWithType: SensorService.GetSensorsAsync
- uid: VPEAR.Server.Services.UserService
  name: UserService
  href: api/VPEAR.Server.Services.UserService.html
  commentId: T:VPEAR.Server.Services.UserService
  fullName: VPEAR.Server.Services.UserService
  nameWithType: UserService
- uid: VPEAR.Server.Services.UserService.#ctor(Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.UserController})
  name: UserService(RoleManager<IdentityRole>, UserManager<IdentityUser>, ILogger<UserController>)
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService__ctor_Microsoft_AspNetCore_Identity_RoleManager_Microsoft_AspNetCore_Identity_IdentityRole__Microsoft_AspNetCore_Identity_UserManager_Microsoft_AspNetCore_Identity_IdentityUser__Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_UserController__
  commentId: M:VPEAR.Server.Services.UserService.#ctor(Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.UserController})
  name.vb: UserService(RoleManager(Of IdentityRole), UserManager(Of IdentityUser), ILogger(Of UserController))
  fullName: VPEAR.Server.Services.UserService.UserService(Microsoft.AspNetCore.Identity.RoleManager<Microsoft.AspNetCore.Identity.IdentityRole>, Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.IdentityUser>, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.UserController>)
  fullName.vb: VPEAR.Server.Services.UserService.UserService(Microsoft.AspNetCore.Identity.RoleManager(Of Microsoft.AspNetCore.Identity.IdentityRole), Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.IdentityUser), Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.UserController))
  nameWithType: UserService.UserService(RoleManager<IdentityRole>, UserManager<IdentityUser>, ILogger<UserController>)
  nameWithType.vb: UserService.UserService(RoleManager(Of IdentityRole), UserManager(Of IdentityUser), ILogger(Of UserController))
- uid: VPEAR.Server.Services.UserService.#ctor*
  name: UserService
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService__ctor_
  commentId: Overload:VPEAR.Server.Services.UserService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.UserService.UserService
  nameWithType: UserService.UserService
- uid: VPEAR.Server.Services.UserService.DeleteAsync(System.String)
  name: DeleteAsync(String)
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_DeleteAsync_System_String_
  commentId: M:VPEAR.Server.Services.UserService.DeleteAsync(System.String)
  fullName: VPEAR.Server.Services.UserService.DeleteAsync(System.String)
  nameWithType: UserService.DeleteAsync(String)
- uid: VPEAR.Server.Services.UserService.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_DeleteAsync_
  commentId: Overload:VPEAR.Server.Services.UserService.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.UserService.DeleteAsync
  nameWithType: UserService.DeleteAsync
- uid: VPEAR.Server.Services.UserService.GetAsync(System.String)
  name: GetAsync(String)
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_GetAsync_System_String_
  commentId: M:VPEAR.Server.Services.UserService.GetAsync(System.String)
  fullName: VPEAR.Server.Services.UserService.GetAsync(System.String)
  nameWithType: UserService.GetAsync(String)
- uid: VPEAR.Server.Services.UserService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_GetAsync_
  commentId: Overload:VPEAR.Server.Services.UserService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.UserService.GetAsync
  nameWithType: UserService.GetAsync
- uid: VPEAR.Server.Services.UserService.PostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  name: PostRegisterAsync(PostRegisterRequest)
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_PostRegisterAsync_VPEAR_Core_Wrappers_PostRegisterRequest_
  commentId: M:VPEAR.Server.Services.UserService.PostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  fullName: VPEAR.Server.Services.UserService.PostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  nameWithType: UserService.PostRegisterAsync(PostRegisterRequest)
- uid: VPEAR.Server.Services.UserService.PostRegisterAsync*
  name: PostRegisterAsync
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_PostRegisterAsync_
  commentId: Overload:VPEAR.Server.Services.UserService.PostRegisterAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.UserService.PostRegisterAsync
  nameWithType: UserService.PostRegisterAsync
- uid: VPEAR.Server.Services.UserService.PutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  name: PutLoginAsync(PutLoginRequest)
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_PutLoginAsync_VPEAR_Core_Wrappers_PutLoginRequest_
  commentId: M:VPEAR.Server.Services.UserService.PutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  fullName: VPEAR.Server.Services.UserService.PutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  nameWithType: UserService.PutLoginAsync(PutLoginRequest)
- uid: VPEAR.Server.Services.UserService.PutLoginAsync*
  name: PutLoginAsync
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_PutLoginAsync_
  commentId: Overload:VPEAR.Server.Services.UserService.PutLoginAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.UserService.PutLoginAsync
  nameWithType: UserService.PutLoginAsync
- uid: VPEAR.Server.Services.UserService.PutPasswordAsync(System.String,VPEAR.Core.Wrappers.PutPasswordRequest)
  name: PutPasswordAsync(String, PutPasswordRequest)
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_PutPasswordAsync_System_String_VPEAR_Core_Wrappers_PutPasswordRequest_
  commentId: M:VPEAR.Server.Services.UserService.PutPasswordAsync(System.String,VPEAR.Core.Wrappers.PutPasswordRequest)
  fullName: VPEAR.Server.Services.UserService.PutPasswordAsync(System.String, VPEAR.Core.Wrappers.PutPasswordRequest)
  nameWithType: UserService.PutPasswordAsync(String, PutPasswordRequest)
- uid: VPEAR.Server.Services.UserService.PutPasswordAsync*
  name: PutPasswordAsync
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_PutPasswordAsync_
  commentId: Overload:VPEAR.Server.Services.UserService.PutPasswordAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.UserService.PutPasswordAsync
  nameWithType: UserService.PutPasswordAsync
- uid: VPEAR.Server.Services.UserService.PutVerifyAsync(System.String,VPEAR.Core.Wrappers.PutVerifyRequest)
  name: PutVerifyAsync(String, PutVerifyRequest)
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_PutVerifyAsync_System_String_VPEAR_Core_Wrappers_PutVerifyRequest_
  commentId: M:VPEAR.Server.Services.UserService.PutVerifyAsync(System.String,VPEAR.Core.Wrappers.PutVerifyRequest)
  fullName: VPEAR.Server.Services.UserService.PutVerifyAsync(System.String, VPEAR.Core.Wrappers.PutVerifyRequest)
  nameWithType: UserService.PutVerifyAsync(String, PutVerifyRequest)
- uid: VPEAR.Server.Services.UserService.PutVerifyAsync*
  name: PutVerifyAsync
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_PutVerifyAsync_
  commentId: Overload:VPEAR.Server.Services.UserService.PutVerifyAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.UserService.PutVerifyAsync
  nameWithType: UserService.PutVerifyAsync
- uid: VPEAR.Server.Services.WifiService
  name: WifiService
  href: api/VPEAR.Server.Services.WifiService.html
  commentId: T:VPEAR.Server.Services.WifiService
  fullName: VPEAR.Server.Services.WifiService
  nameWithType: WifiService
- uid: VPEAR.Server.Services.WifiService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.DeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.WifiController})
  name: WifiService(IRepository<Device, Guid>, DeviceClient.Factory, ILogger<WifiController>)
  href: api/VPEAR.Server.Services.WifiService.html#VPEAR_Server_Services_WifiService__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Entities_Device_System_Guid__VPEAR_Core_DeviceClient_Factory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_WifiController__
  commentId: M:VPEAR.Server.Services.WifiService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Entities.Device,System.Guid},VPEAR.Core.DeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.WifiController})
  name.vb: WifiService(IRepository(Of Device, Guid), DeviceClient.Factory, ILogger(Of WifiController))
  fullName: VPEAR.Server.Services.WifiService.WifiService(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Entities.Device, System.Guid>, VPEAR.Core.DeviceClient.Factory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.WifiController>)
  fullName.vb: VPEAR.Server.Services.WifiService.WifiService(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Entities.Device, System.Guid), VPEAR.Core.DeviceClient.Factory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.WifiController))
  nameWithType: WifiService.WifiService(IRepository<Device, Guid>, DeviceClient.Factory, ILogger<WifiController>)
  nameWithType.vb: WifiService.WifiService(IRepository(Of Device, Guid), DeviceClient.Factory, ILogger(Of WifiController))
- uid: VPEAR.Server.Services.WifiService.#ctor*
  name: WifiService
  href: api/VPEAR.Server.Services.WifiService.html#VPEAR_Server_Services_WifiService__ctor_
  commentId: Overload:VPEAR.Server.Services.WifiService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.WifiService.WifiService
  nameWithType: WifiService.WifiService
- uid: VPEAR.Server.Services.WifiService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Server.Services.WifiService.html#VPEAR_Server_Services_WifiService_GetAsync_System_Guid_
  commentId: M:VPEAR.Server.Services.WifiService.GetAsync(System.Guid)
  fullName: VPEAR.Server.Services.WifiService.GetAsync(System.Guid)
  nameWithType: WifiService.GetAsync(Guid)
- uid: VPEAR.Server.Services.WifiService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Services.WifiService.html#VPEAR_Server_Services_WifiService_GetAsync_
  commentId: Overload:VPEAR.Server.Services.WifiService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.WifiService.GetAsync
  nameWithType: WifiService.GetAsync
- uid: VPEAR.Server.Services.WifiService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutWifiRequest)
  name: PutAsync(Guid, PutWifiRequest)
  href: api/VPEAR.Server.Services.WifiService.html#VPEAR_Server_Services_WifiService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutWifiRequest_
  commentId: M:VPEAR.Server.Services.WifiService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutWifiRequest)
  fullName: VPEAR.Server.Services.WifiService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutWifiRequest)
  nameWithType: WifiService.PutAsync(Guid, PutWifiRequest)
- uid: VPEAR.Server.Services.WifiService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Server.Services.WifiService.html#VPEAR_Server_Services_WifiService_PutAsync_
  commentId: Overload:VPEAR.Server.Services.WifiService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.WifiService.PutAsync
  nameWithType: WifiService.PutAsync
- uid: VPEAR.Server.Startup
  name: Startup
  href: api/VPEAR.Server.Startup.html
  commentId: T:VPEAR.Server.Startup
  fullName: VPEAR.Server.Startup
  nameWithType: Startup
- uid: VPEAR.Server.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name: Startup(IConfiguration)
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup__ctor_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:VPEAR.Server.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  fullName: VPEAR.Server.Startup.Startup(Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: Startup.Startup(IConfiguration)
- uid: VPEAR.Server.Startup.#ctor*
  name: Startup
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup__ctor_
  commentId: Overload:VPEAR.Server.Startup.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Startup.Startup
  nameWithType: Startup.Startup
- uid: VPEAR.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser})
  name: Configure(IApplicationBuilder, IWebHostEnvironment, RoleManager<IdentityRole>, UserManager<IdentityUser>)
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_Configure_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_Microsoft_AspNetCore_Identity_RoleManager_Microsoft_AspNetCore_Identity_IdentityRole__Microsoft_AspNetCore_Identity_UserManager_Microsoft_AspNetCore_Identity_IdentityUser__
  commentId: M:VPEAR.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser})
  name.vb: Configure(IApplicationBuilder, IWebHostEnvironment, RoleManager(Of IdentityRole), UserManager(Of IdentityUser))
  fullName: VPEAR.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment, Microsoft.AspNetCore.Identity.RoleManager<Microsoft.AspNetCore.Identity.IdentityRole>, Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.IdentityUser>)
  fullName.vb: VPEAR.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment, Microsoft.AspNetCore.Identity.RoleManager(Of Microsoft.AspNetCore.Identity.IdentityRole), Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.IdentityUser))
  nameWithType: Startup.Configure(IApplicationBuilder, IWebHostEnvironment, RoleManager<IdentityRole>, UserManager<IdentityUser>)
  nameWithType.vb: Startup.Configure(IApplicationBuilder, IWebHostEnvironment, RoleManager(Of IdentityRole), UserManager(Of IdentityUser))
- uid: VPEAR.Server.Startup.Configure*
  name: Configure
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_Configure_
  commentId: Overload:VPEAR.Server.Startup.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Startup.Configure
  nameWithType: Startup.Configure
- uid: VPEAR.Server.Startup.ConfigureContainer(Autofac.ContainerBuilder)
  name: ConfigureContainer(ContainerBuilder)
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_ConfigureContainer_Autofac_ContainerBuilder_
  commentId: M:VPEAR.Server.Startup.ConfigureContainer(Autofac.ContainerBuilder)
  fullName: VPEAR.Server.Startup.ConfigureContainer(Autofac.ContainerBuilder)
  nameWithType: Startup.ConfigureContainer(ContainerBuilder)
- uid: VPEAR.Server.Startup.ConfigureContainer*
  name: ConfigureContainer
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_ConfigureContainer_
  commentId: Overload:VPEAR.Server.Startup.ConfigureContainer
  isSpec: "True"
  fullName: VPEAR.Server.Startup.ConfigureContainer
  nameWithType: Startup.ConfigureContainer
- uid: VPEAR.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: ConfigureServices(IServiceCollection)
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_ConfigureServices_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:VPEAR.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: VPEAR.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: Startup.ConfigureServices(IServiceCollection)
- uid: VPEAR.Server.Startup.ConfigureServices*
  name: ConfigureServices
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_ConfigureServices_
  commentId: Overload:VPEAR.Server.Startup.ConfigureServices
  isSpec: "True"
  fullName: VPEAR.Server.Startup.ConfigureServices
  nameWithType: Startup.ConfigureServices
- uid: VPEAR.Server.Validators
  name: VPEAR.Server.Validators
  href: api/VPEAR.Server.Validators.html
  commentId: N:VPEAR.Server.Validators
  fullName: VPEAR.Server.Validators
  nameWithType: VPEAR.Server.Validators
- uid: VPEAR.Server.Validators.PostDeviceValidator
  name: PostDeviceValidator
  href: api/VPEAR.Server.Validators.PostDeviceValidator.html
  commentId: T:VPEAR.Server.Validators.PostDeviceValidator
  fullName: VPEAR.Server.Validators.PostDeviceValidator
  nameWithType: PostDeviceValidator
- uid: VPEAR.Server.Validators.PostDeviceValidator.#ctor
  name: PostDeviceValidator()
  href: api/VPEAR.Server.Validators.PostDeviceValidator.html#VPEAR_Server_Validators_PostDeviceValidator__ctor
  commentId: M:VPEAR.Server.Validators.PostDeviceValidator.#ctor
  fullName: VPEAR.Server.Validators.PostDeviceValidator.PostDeviceValidator()
  nameWithType: PostDeviceValidator.PostDeviceValidator()
- uid: VPEAR.Server.Validators.PostDeviceValidator.#ctor*
  name: PostDeviceValidator
  href: api/VPEAR.Server.Validators.PostDeviceValidator.html#VPEAR_Server_Validators_PostDeviceValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PostDeviceValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PostDeviceValidator.PostDeviceValidator
  nameWithType: PostDeviceValidator.PostDeviceValidator
- uid: VPEAR.Server.Validators.PostRegisterValidator
  name: PostRegisterValidator
  href: api/VPEAR.Server.Validators.PostRegisterValidator.html
  commentId: T:VPEAR.Server.Validators.PostRegisterValidator
  fullName: VPEAR.Server.Validators.PostRegisterValidator
  nameWithType: PostRegisterValidator
- uid: VPEAR.Server.Validators.PostRegisterValidator.#ctor
  name: PostRegisterValidator()
  href: api/VPEAR.Server.Validators.PostRegisterValidator.html#VPEAR_Server_Validators_PostRegisterValidator__ctor
  commentId: M:VPEAR.Server.Validators.PostRegisterValidator.#ctor
  fullName: VPEAR.Server.Validators.PostRegisterValidator.PostRegisterValidator()
  nameWithType: PostRegisterValidator.PostRegisterValidator()
- uid: VPEAR.Server.Validators.PostRegisterValidator.#ctor*
  name: PostRegisterValidator
  href: api/VPEAR.Server.Validators.PostRegisterValidator.html#VPEAR_Server_Validators_PostRegisterValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PostRegisterValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PostRegisterValidator.PostRegisterValidator
  nameWithType: PostRegisterValidator.PostRegisterValidator
- uid: VPEAR.Server.Validators.PutDeviceValidator
  name: PutDeviceValidator
  href: api/VPEAR.Server.Validators.PutDeviceValidator.html
  commentId: T:VPEAR.Server.Validators.PutDeviceValidator
  fullName: VPEAR.Server.Validators.PutDeviceValidator
  nameWithType: PutDeviceValidator
- uid: VPEAR.Server.Validators.PutDeviceValidator.#ctor
  name: PutDeviceValidator()
  href: api/VPEAR.Server.Validators.PutDeviceValidator.html#VPEAR_Server_Validators_PutDeviceValidator__ctor
  commentId: M:VPEAR.Server.Validators.PutDeviceValidator.#ctor
  fullName: VPEAR.Server.Validators.PutDeviceValidator.PutDeviceValidator()
  nameWithType: PutDeviceValidator.PutDeviceValidator()
- uid: VPEAR.Server.Validators.PutDeviceValidator.#ctor*
  name: PutDeviceValidator
  href: api/VPEAR.Server.Validators.PutDeviceValidator.html#VPEAR_Server_Validators_PutDeviceValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PutDeviceValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PutDeviceValidator.PutDeviceValidator
  nameWithType: PutDeviceValidator.PutDeviceValidator
- uid: VPEAR.Server.Validators.PutFilterValidator
  name: PutFilterValidator
  href: api/VPEAR.Server.Validators.PutFilterValidator.html
  commentId: T:VPEAR.Server.Validators.PutFilterValidator
  fullName: VPEAR.Server.Validators.PutFilterValidator
  nameWithType: PutFilterValidator
- uid: VPEAR.Server.Validators.PutFilterValidator.#ctor
  name: PutFilterValidator()
  href: api/VPEAR.Server.Validators.PutFilterValidator.html#VPEAR_Server_Validators_PutFilterValidator__ctor
  commentId: M:VPEAR.Server.Validators.PutFilterValidator.#ctor
  fullName: VPEAR.Server.Validators.PutFilterValidator.PutFilterValidator()
  nameWithType: PutFilterValidator.PutFilterValidator()
- uid: VPEAR.Server.Validators.PutFilterValidator.#ctor*
  name: PutFilterValidator
  href: api/VPEAR.Server.Validators.PutFilterValidator.html#VPEAR_Server_Validators_PutFilterValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PutFilterValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PutFilterValidator.PutFilterValidator
  nameWithType: PutFilterValidator.PutFilterValidator
- uid: VPEAR.Server.Validators.PutFirmwareValidator
  name: PutFirmwareValidator
  href: api/VPEAR.Server.Validators.PutFirmwareValidator.html
  commentId: T:VPEAR.Server.Validators.PutFirmwareValidator
  fullName: VPEAR.Server.Validators.PutFirmwareValidator
  nameWithType: PutFirmwareValidator
- uid: VPEAR.Server.Validators.PutFirmwareValidator.#ctor
  name: PutFirmwareValidator()
  href: api/VPEAR.Server.Validators.PutFirmwareValidator.html#VPEAR_Server_Validators_PutFirmwareValidator__ctor
  commentId: M:VPEAR.Server.Validators.PutFirmwareValidator.#ctor
  fullName: VPEAR.Server.Validators.PutFirmwareValidator.PutFirmwareValidator()
  nameWithType: PutFirmwareValidator.PutFirmwareValidator()
- uid: VPEAR.Server.Validators.PutFirmwareValidator.#ctor*
  name: PutFirmwareValidator
  href: api/VPEAR.Server.Validators.PutFirmwareValidator.html#VPEAR_Server_Validators_PutFirmwareValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PutFirmwareValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PutFirmwareValidator.PutFirmwareValidator
  nameWithType: PutFirmwareValidator.PutFirmwareValidator
- uid: VPEAR.Server.Validators.PutLoginValidator
  name: PutLoginValidator
  href: api/VPEAR.Server.Validators.PutLoginValidator.html
  commentId: T:VPEAR.Server.Validators.PutLoginValidator
  fullName: VPEAR.Server.Validators.PutLoginValidator
  nameWithType: PutLoginValidator
- uid: VPEAR.Server.Validators.PutLoginValidator.#ctor
  name: PutLoginValidator()
  href: api/VPEAR.Server.Validators.PutLoginValidator.html#VPEAR_Server_Validators_PutLoginValidator__ctor
  commentId: M:VPEAR.Server.Validators.PutLoginValidator.#ctor
  fullName: VPEAR.Server.Validators.PutLoginValidator.PutLoginValidator()
  nameWithType: PutLoginValidator.PutLoginValidator()
- uid: VPEAR.Server.Validators.PutLoginValidator.#ctor*
  name: PutLoginValidator
  href: api/VPEAR.Server.Validators.PutLoginValidator.html#VPEAR_Server_Validators_PutLoginValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PutLoginValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PutLoginValidator.PutLoginValidator
  nameWithType: PutLoginValidator.PutLoginValidator
- uid: VPEAR.Server.Validators.PutPasswordValidator
  name: PutPasswordValidator
  href: api/VPEAR.Server.Validators.PutPasswordValidator.html
  commentId: T:VPEAR.Server.Validators.PutPasswordValidator
  fullName: VPEAR.Server.Validators.PutPasswordValidator
  nameWithType: PutPasswordValidator
- uid: VPEAR.Server.Validators.PutPasswordValidator.#ctor
  name: PutPasswordValidator()
  href: api/VPEAR.Server.Validators.PutPasswordValidator.html#VPEAR_Server_Validators_PutPasswordValidator__ctor
  commentId: M:VPEAR.Server.Validators.PutPasswordValidator.#ctor
  fullName: VPEAR.Server.Validators.PutPasswordValidator.PutPasswordValidator()
  nameWithType: PutPasswordValidator.PutPasswordValidator()
- uid: VPEAR.Server.Validators.PutPasswordValidator.#ctor*
  name: PutPasswordValidator
  href: api/VPEAR.Server.Validators.PutPasswordValidator.html#VPEAR_Server_Validators_PutPasswordValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PutPasswordValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PutPasswordValidator.PutPasswordValidator
  nameWithType: PutPasswordValidator.PutPasswordValidator
- uid: VPEAR.Server.Validators.PutWifiValidator
  name: PutWifiValidator
  href: api/VPEAR.Server.Validators.PutWifiValidator.html
  commentId: T:VPEAR.Server.Validators.PutWifiValidator
  fullName: VPEAR.Server.Validators.PutWifiValidator
  nameWithType: PutWifiValidator
- uid: VPEAR.Server.Validators.PutWifiValidator.#ctor
  name: PutWifiValidator()
  href: api/VPEAR.Server.Validators.PutWifiValidator.html#VPEAR_Server_Validators_PutWifiValidator__ctor
  commentId: M:VPEAR.Server.Validators.PutWifiValidator.#ctor
  fullName: VPEAR.Server.Validators.PutWifiValidator.PutWifiValidator()
  nameWithType: PutWifiValidator.PutWifiValidator()
- uid: VPEAR.Server.Validators.PutWifiValidator.#ctor*
  name: PutWifiValidator
  href: api/VPEAR.Server.Validators.PutWifiValidator.html#VPEAR_Server_Validators_PutWifiValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PutWifiValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PutWifiValidator.PutWifiValidator
  nameWithType: PutWifiValidator.PutWifiValidator
