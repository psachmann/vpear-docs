### YamlMime:XRefMap
sorted: true
references:
- uid: VPEAR.Core.Abstractions
  name: VPEAR.Core.Abstractions
  href: api/VPEAR.Core.Abstractions.html
  commentId: N:VPEAR.Core.Abstractions
  fullName: VPEAR.Core.Abstractions
  nameWithType: VPEAR.Core.Abstractions
- uid: VPEAR.Core.Abstractions.IRepository`2
  name: IRepository<TEntity, TKey>
  href: api/VPEAR.Core.Abstractions.IRepository-2.html
  commentId: T:VPEAR.Core.Abstractions.IRepository`2
  name.vb: IRepository(Of TEntity, TKey)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey)
  nameWithType: IRepository<TEntity, TKey>
  nameWithType.vb: IRepository(Of TEntity, TKey)
- uid: VPEAR.Core.Abstractions.IRepository`2.CreateAsync(`0)
  name: CreateAsync(TEntity)
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_CreateAsync__0_
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.CreateAsync(`0)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.CreateAsync(TEntity)
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).CreateAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.CreateAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).CreateAsync(TEntity)
- uid: VPEAR.Core.Abstractions.IRepository`2.CreateAsync*
  name: CreateAsync
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_CreateAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.CreateAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.CreateAsync
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).CreateAsync
  nameWithType: IRepository<TEntity, TKey>.CreateAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).CreateAsync
- uid: VPEAR.Core.Abstractions.IRepository`2.DeleteAsync(`1)
  name: DeleteAsync(TKey)
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_DeleteAsync__1_
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.DeleteAsync(`1)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.DeleteAsync(TKey)
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).DeleteAsync(TKey)
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync(TKey)
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync(TKey)
- uid: VPEAR.Core.Abstractions.IRepository`2.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_DeleteAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.DeleteAsync
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).DeleteAsync
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync
- uid: VPEAR.Core.Abstractions.IRepository`2.Get
  name: Get()
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_Get
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.Get
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.Get()
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).Get()
  nameWithType: IRepository<TEntity, TKey>.Get()
  nameWithType.vb: IRepository(Of TEntity, TKey).Get()
- uid: VPEAR.Core.Abstractions.IRepository`2.Get*
  name: Get
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_Get_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.Get
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.Get
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).Get
  nameWithType: IRepository<TEntity, TKey>.Get
  nameWithType.vb: IRepository(Of TEntity, TKey).Get
- uid: VPEAR.Core.Abstractions.IRepository`2.GetAsync(`1)
  name: GetAsync(TKey)
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_GetAsync__1_
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.GetAsync(`1)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.GetAsync(TKey)
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).GetAsync(TKey)
  nameWithType: IRepository<TEntity, TKey>.GetAsync(TKey)
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAsync(TKey)
- uid: VPEAR.Core.Abstractions.IRepository`2.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.GetAsync
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).GetAsync
  nameWithType: IRepository<TEntity, TKey>.GetAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAsync
- uid: VPEAR.Core.Abstractions.IRepository`2.UpdateAsync(`0)
  name: UpdateAsync(TEntity)
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_UpdateAsync__0_
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.UpdateAsync(`0)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
- uid: VPEAR.Core.Abstractions.IRepository`2.UpdateAsync*
  name: UpdateAsync
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_UpdateAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.UpdateAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.UpdateAsync
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).UpdateAsync
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync
- uid: VPEAR.Core.Wrappers
  name: VPEAR.Core.Wrappers
  href: api/VPEAR.Core.Wrappers.html
  commentId: N:VPEAR.Core.Wrappers
  fullName: VPEAR.Core.Wrappers
  nameWithType: VPEAR.Core.Wrappers
- uid: VPEAR.Core.Wrappers.ApiResponse
  name: ApiResponse
  href: api/VPEAR.Core.Wrappers.ApiResponse.html
  commentId: T:VPEAR.Core.Wrappers.ApiResponse
  fullName: VPEAR.Core.Wrappers.ApiResponse
  nameWithType: ApiResponse
- uid: VPEAR.Core.Wrappers.ApiResponse.Device
  name: Device
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Device
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Device
  fullName: VPEAR.Core.Wrappers.ApiResponse.Device
  nameWithType: ApiResponse.Device
- uid: VPEAR.Core.Wrappers.ApiResponse.Device*
  name: Device
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Device_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Device
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Device
  nameWithType: ApiResponse.Device
- uid: VPEAR.Core.Wrappers.ApiResponse.Filters
  name: Filters
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Filters
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Filters
  fullName: VPEAR.Core.Wrappers.ApiResponse.Filters
  nameWithType: ApiResponse.Filters
- uid: VPEAR.Core.Wrappers.ApiResponse.Filters*
  name: Filters
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Filters_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Filters
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Filters
  nameWithType: ApiResponse.Filters
- uid: VPEAR.Core.Wrappers.ApiResponse.Firmware
  name: Firmware
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Firmware
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Firmware
  fullName: VPEAR.Core.Wrappers.ApiResponse.Firmware
  nameWithType: ApiResponse.Firmware
- uid: VPEAR.Core.Wrappers.ApiResponse.Firmware*
  name: Firmware
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Firmware_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Firmware
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Firmware
  nameWithType: ApiResponse.Firmware
- uid: VPEAR.Core.Wrappers.ApiResponse.Frames
  name: Frames
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Frames
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Frames
  fullName: VPEAR.Core.Wrappers.ApiResponse.Frames
  nameWithType: ApiResponse.Frames
- uid: VPEAR.Core.Wrappers.ApiResponse.Frames*
  name: Frames
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Frames_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Frames
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Frames
  nameWithType: ApiResponse.Frames
- uid: VPEAR.Core.Wrappers.ApiResponse.Frequency
  name: Frequency
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Frequency
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Frequency
  fullName: VPEAR.Core.Wrappers.ApiResponse.Frequency
  nameWithType: ApiResponse.Frequency
- uid: VPEAR.Core.Wrappers.ApiResponse.Frequency*
  name: Frequency
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Frequency_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Frequency
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Frequency
  nameWithType: ApiResponse.Frequency
- uid: VPEAR.Core.Wrappers.ApiResponse.Power
  name: Power
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Power
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Power
  fullName: VPEAR.Core.Wrappers.ApiResponse.Power
  nameWithType: ApiResponse.Power
- uid: VPEAR.Core.Wrappers.ApiResponse.Power*
  name: Power
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Power_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Power
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Power
  nameWithType: ApiResponse.Power
- uid: VPEAR.Core.Wrappers.ApiResponse.Sensors
  name: Sensors
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Sensors
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Sensors
  fullName: VPEAR.Core.Wrappers.ApiResponse.Sensors
  nameWithType: ApiResponse.Sensors
- uid: VPEAR.Core.Wrappers.ApiResponse.Sensors*
  name: Sensors
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Sensors_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Sensors
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Sensors
  nameWithType: ApiResponse.Sensors
- uid: VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  name: SensorsRequired
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_SensorsRequired
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  fullName: VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  nameWithType: ApiResponse.SensorsRequired
- uid: VPEAR.Core.Wrappers.ApiResponse.SensorsRequired*
  name: SensorsRequired
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_SensorsRequired_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  nameWithType: ApiResponse.SensorsRequired
- uid: VPEAR.Core.Wrappers.ApiResponse.Wifi
  name: Wifi
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Wifi
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Wifi
  fullName: VPEAR.Core.Wrappers.ApiResponse.Wifi
  nameWithType: ApiResponse.Wifi
- uid: VPEAR.Core.Wrappers.ApiResponse.Wifi*
  name: Wifi
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Wifi_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Wifi
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Wifi
  nameWithType: ApiResponse.Wifi
- uid: VPEAR.Core.Wrappers.DeviceResponse
  name: DeviceResponse
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html
  commentId: T:VPEAR.Core.Wrappers.DeviceResponse
  fullName: VPEAR.Core.Wrappers.DeviceResponse
  nameWithType: DeviceResponse
- uid: VPEAR.Core.Wrappers.DeviceResponse.Address
  name: Address
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Address
  commentId: P:VPEAR.Core.Wrappers.DeviceResponse.Address
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Address
  nameWithType: DeviceResponse.Address
- uid: VPEAR.Core.Wrappers.DeviceResponse.Address*
  name: Address
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Address_
  commentId: Overload:VPEAR.Core.Wrappers.DeviceResponse.Address
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Address
  nameWithType: DeviceResponse.Address
- uid: VPEAR.Core.Wrappers.DeviceResponse.Class
  name: Class
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Class
  commentId: P:VPEAR.Core.Wrappers.DeviceResponse.Class
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Class
  nameWithType: DeviceResponse.Class
- uid: VPEAR.Core.Wrappers.DeviceResponse.Class*
  name: Class
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Class_
  commentId: Overload:VPEAR.Core.Wrappers.DeviceResponse.Class
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Class
  nameWithType: DeviceResponse.Class
- uid: VPEAR.Core.Wrappers.DeviceResponse.Name
  name: Name
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Name
  commentId: P:VPEAR.Core.Wrappers.DeviceResponse.Name
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Name
  nameWithType: DeviceResponse.Name
- uid: VPEAR.Core.Wrappers.DeviceResponse.Name*
  name: Name
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Name_
  commentId: Overload:VPEAR.Core.Wrappers.DeviceResponse.Name
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Name
  nameWithType: DeviceResponse.Name
- uid: VPEAR.Core.Wrappers.FiltersResponse
  name: FiltersResponse
  href: api/VPEAR.Core.Wrappers.FiltersResponse.html
  commentId: T:VPEAR.Core.Wrappers.FiltersResponse
  fullName: VPEAR.Core.Wrappers.FiltersResponse
  nameWithType: FiltersResponse
- uid: VPEAR.Core.Wrappers.FiltersResponse.Noise
  name: Noise
  href: api/VPEAR.Core.Wrappers.FiltersResponse.html#VPEAR_Core_Wrappers_FiltersResponse_Noise
  commentId: P:VPEAR.Core.Wrappers.FiltersResponse.Noise
  fullName: VPEAR.Core.Wrappers.FiltersResponse.Noise
  nameWithType: FiltersResponse.Noise
- uid: VPEAR.Core.Wrappers.FiltersResponse.Noise*
  name: Noise
  href: api/VPEAR.Core.Wrappers.FiltersResponse.html#VPEAR_Core_Wrappers_FiltersResponse_Noise_
  commentId: Overload:VPEAR.Core.Wrappers.FiltersResponse.Noise
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FiltersResponse.Noise
  nameWithType: FiltersResponse.Noise
- uid: VPEAR.Core.Wrappers.FiltersResponse.Smooth
  name: Smooth
  href: api/VPEAR.Core.Wrappers.FiltersResponse.html#VPEAR_Core_Wrappers_FiltersResponse_Smooth
  commentId: P:VPEAR.Core.Wrappers.FiltersResponse.Smooth
  fullName: VPEAR.Core.Wrappers.FiltersResponse.Smooth
  nameWithType: FiltersResponse.Smooth
- uid: VPEAR.Core.Wrappers.FiltersResponse.Smooth*
  name: Smooth
  href: api/VPEAR.Core.Wrappers.FiltersResponse.html#VPEAR_Core_Wrappers_FiltersResponse_Smooth_
  commentId: Overload:VPEAR.Core.Wrappers.FiltersResponse.Smooth
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FiltersResponse.Smooth
  nameWithType: FiltersResponse.Smooth
- uid: VPEAR.Core.Wrappers.FiltersResponse.Spot
  name: Spot
  href: api/VPEAR.Core.Wrappers.FiltersResponse.html#VPEAR_Core_Wrappers_FiltersResponse_Spot
  commentId: P:VPEAR.Core.Wrappers.FiltersResponse.Spot
  fullName: VPEAR.Core.Wrappers.FiltersResponse.Spot
  nameWithType: FiltersResponse.Spot
- uid: VPEAR.Core.Wrappers.FiltersResponse.Spot*
  name: Spot
  href: api/VPEAR.Core.Wrappers.FiltersResponse.html#VPEAR_Core_Wrappers_FiltersResponse_Spot_
  commentId: Overload:VPEAR.Core.Wrappers.FiltersResponse.Spot
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FiltersResponse.Spot
  nameWithType: FiltersResponse.Spot
- uid: VPEAR.Core.Wrappers.FirmwareResponse
  name: FirmwareResponse
  href: api/VPEAR.Core.Wrappers.FirmwareResponse.html
  commentId: T:VPEAR.Core.Wrappers.FirmwareResponse
  fullName: VPEAR.Core.Wrappers.FirmwareResponse
  nameWithType: FirmwareResponse
- uid: VPEAR.Core.Wrappers.FirmwareResponse.Source
  name: Source
  href: api/VPEAR.Core.Wrappers.FirmwareResponse.html#VPEAR_Core_Wrappers_FirmwareResponse_Source
  commentId: P:VPEAR.Core.Wrappers.FirmwareResponse.Source
  fullName: VPEAR.Core.Wrappers.FirmwareResponse.Source
  nameWithType: FirmwareResponse.Source
- uid: VPEAR.Core.Wrappers.FirmwareResponse.Source*
  name: Source
  href: api/VPEAR.Core.Wrappers.FirmwareResponse.html#VPEAR_Core_Wrappers_FirmwareResponse_Source_
  commentId: Overload:VPEAR.Core.Wrappers.FirmwareResponse.Source
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FirmwareResponse.Source
  nameWithType: FirmwareResponse.Source
- uid: VPEAR.Core.Wrappers.FirmwareResponse.Upgrade
  name: Upgrade
  href: api/VPEAR.Core.Wrappers.FirmwareResponse.html#VPEAR_Core_Wrappers_FirmwareResponse_Upgrade
  commentId: P:VPEAR.Core.Wrappers.FirmwareResponse.Upgrade
  fullName: VPEAR.Core.Wrappers.FirmwareResponse.Upgrade
  nameWithType: FirmwareResponse.Upgrade
- uid: VPEAR.Core.Wrappers.FirmwareResponse.Upgrade*
  name: Upgrade
  href: api/VPEAR.Core.Wrappers.FirmwareResponse.html#VPEAR_Core_Wrappers_FirmwareResponse_Upgrade_
  commentId: Overload:VPEAR.Core.Wrappers.FirmwareResponse.Upgrade
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FirmwareResponse.Upgrade
  nameWithType: FirmwareResponse.Upgrade
- uid: VPEAR.Core.Wrappers.FirmwareResponse.Version
  name: Version
  href: api/VPEAR.Core.Wrappers.FirmwareResponse.html#VPEAR_Core_Wrappers_FirmwareResponse_Version
  commentId: P:VPEAR.Core.Wrappers.FirmwareResponse.Version
  fullName: VPEAR.Core.Wrappers.FirmwareResponse.Version
  nameWithType: FirmwareResponse.Version
- uid: VPEAR.Core.Wrappers.FirmwareResponse.Version*
  name: Version
  href: api/VPEAR.Core.Wrappers.FirmwareResponse.html#VPEAR_Core_Wrappers_FirmwareResponse_Version_
  commentId: Overload:VPEAR.Core.Wrappers.FirmwareResponse.Version
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FirmwareResponse.Version
  nameWithType: FirmwareResponse.Version
- uid: VPEAR.Core.Wrappers.FrameResponse
  name: FrameResponse
  href: api/VPEAR.Core.Wrappers.FrameResponse.html
  commentId: T:VPEAR.Core.Wrappers.FrameResponse
  fullName: VPEAR.Core.Wrappers.FrameResponse
  nameWithType: FrameResponse
- uid: VPEAR.Core.Wrappers.FrameResponse.Id
  name: Id
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Id
  commentId: P:VPEAR.Core.Wrappers.FrameResponse.Id
  fullName: VPEAR.Core.Wrappers.FrameResponse.Id
  nameWithType: FrameResponse.Id
- uid: VPEAR.Core.Wrappers.FrameResponse.Id*
  name: Id
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Id_
  commentId: Overload:VPEAR.Core.Wrappers.FrameResponse.Id
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FrameResponse.Id
  nameWithType: FrameResponse.Id
- uid: VPEAR.Core.Wrappers.FrameResponse.Readings
  name: Readings
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Readings
  commentId: P:VPEAR.Core.Wrappers.FrameResponse.Readings
  fullName: VPEAR.Core.Wrappers.FrameResponse.Readings
  nameWithType: FrameResponse.Readings
- uid: VPEAR.Core.Wrappers.FrameResponse.Readings*
  name: Readings
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Readings_
  commentId: Overload:VPEAR.Core.Wrappers.FrameResponse.Readings
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FrameResponse.Readings
  nameWithType: FrameResponse.Readings
- uid: VPEAR.Core.Wrappers.FrameResponse.Time
  name: Time
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Time
  commentId: P:VPEAR.Core.Wrappers.FrameResponse.Time
  fullName: VPEAR.Core.Wrappers.FrameResponse.Time
  nameWithType: FrameResponse.Time
- uid: VPEAR.Core.Wrappers.FrameResponse.Time*
  name: Time
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Time_
  commentId: Overload:VPEAR.Core.Wrappers.FrameResponse.Time
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FrameResponse.Time
  nameWithType: FrameResponse.Time
- uid: VPEAR.Core.Wrappers.PowerResponse
  name: PowerResponse
  href: api/VPEAR.Core.Wrappers.PowerResponse.html
  commentId: T:VPEAR.Core.Wrappers.PowerResponse
  fullName: VPEAR.Core.Wrappers.PowerResponse
  nameWithType: PowerResponse
- uid: VPEAR.Core.Wrappers.PowerResponse.Level
  name: Level
  href: api/VPEAR.Core.Wrappers.PowerResponse.html#VPEAR_Core_Wrappers_PowerResponse_Level
  commentId: P:VPEAR.Core.Wrappers.PowerResponse.Level
  fullName: VPEAR.Core.Wrappers.PowerResponse.Level
  nameWithType: PowerResponse.Level
- uid: VPEAR.Core.Wrappers.PowerResponse.Level*
  name: Level
  href: api/VPEAR.Core.Wrappers.PowerResponse.html#VPEAR_Core_Wrappers_PowerResponse_Level_
  commentId: Overload:VPEAR.Core.Wrappers.PowerResponse.Level
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PowerResponse.Level
  nameWithType: PowerResponse.Level
- uid: VPEAR.Core.Wrappers.PowerResponse.State
  name: State
  href: api/VPEAR.Core.Wrappers.PowerResponse.html#VPEAR_Core_Wrappers_PowerResponse_State
  commentId: P:VPEAR.Core.Wrappers.PowerResponse.State
  fullName: VPEAR.Core.Wrappers.PowerResponse.State
  nameWithType: PowerResponse.State
- uid: VPEAR.Core.Wrappers.PowerResponse.State*
  name: State
  href: api/VPEAR.Core.Wrappers.PowerResponse.html#VPEAR_Core_Wrappers_PowerResponse_State_
  commentId: Overload:VPEAR.Core.Wrappers.PowerResponse.State
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PowerResponse.State
  nameWithType: PowerResponse.State
- uid: VPEAR.Core.Wrappers.SensorResponse
  name: SensorResponse
  href: api/VPEAR.Core.Wrappers.SensorResponse.html
  commentId: T:VPEAR.Core.Wrappers.SensorResponse
  fullName: VPEAR.Core.Wrappers.SensorResponse
  nameWithType: SensorResponse
- uid: VPEAR.Core.Wrappers.SensorResponse.Columns
  name: Columns
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Columns
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Columns
  fullName: VPEAR.Core.Wrappers.SensorResponse.Columns
  nameWithType: SensorResponse.Columns
- uid: VPEAR.Core.Wrappers.SensorResponse.Columns*
  name: Columns
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Columns_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Columns
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Columns
  nameWithType: SensorResponse.Columns
- uid: VPEAR.Core.Wrappers.SensorResponse.Height
  name: Height
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Height
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Height
  fullName: VPEAR.Core.Wrappers.SensorResponse.Height
  nameWithType: SensorResponse.Height
- uid: VPEAR.Core.Wrappers.SensorResponse.Height*
  name: Height
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Height_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Height
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Height
  nameWithType: SensorResponse.Height
- uid: VPEAR.Core.Wrappers.SensorResponse.Maximum
  name: Maximum
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Maximum
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Maximum
  fullName: VPEAR.Core.Wrappers.SensorResponse.Maximum
  nameWithType: SensorResponse.Maximum
- uid: VPEAR.Core.Wrappers.SensorResponse.Maximum*
  name: Maximum
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Maximum_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Maximum
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Maximum
  nameWithType: SensorResponse.Maximum
- uid: VPEAR.Core.Wrappers.SensorResponse.Minimum
  name: Minimum
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Minimum
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Minimum
  fullName: VPEAR.Core.Wrappers.SensorResponse.Minimum
  nameWithType: SensorResponse.Minimum
- uid: VPEAR.Core.Wrappers.SensorResponse.Minimum*
  name: Minimum
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Minimum_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Minimum
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Minimum
  nameWithType: SensorResponse.Minimum
- uid: VPEAR.Core.Wrappers.SensorResponse.Name
  name: Name
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Name
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Name
  fullName: VPEAR.Core.Wrappers.SensorResponse.Name
  nameWithType: SensorResponse.Name
- uid: VPEAR.Core.Wrappers.SensorResponse.Name*
  name: Name
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Name_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Name
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Name
  nameWithType: SensorResponse.Name
- uid: VPEAR.Core.Wrappers.SensorResponse.Rows
  name: Rows
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Rows
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Rows
  fullName: VPEAR.Core.Wrappers.SensorResponse.Rows
  nameWithType: SensorResponse.Rows
- uid: VPEAR.Core.Wrappers.SensorResponse.Rows*
  name: Rows
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Rows_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Rows
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Rows
  nameWithType: SensorResponse.Rows
- uid: VPEAR.Core.Wrappers.SensorResponse.Units
  name: Units
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Units
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Units
  fullName: VPEAR.Core.Wrappers.SensorResponse.Units
  nameWithType: SensorResponse.Units
- uid: VPEAR.Core.Wrappers.SensorResponse.Units*
  name: Units
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Units_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Units
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Units
  nameWithType: SensorResponse.Units
- uid: VPEAR.Core.Wrappers.SensorResponse.Width
  name: Width
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Width
  commentId: P:VPEAR.Core.Wrappers.SensorResponse.Width
  fullName: VPEAR.Core.Wrappers.SensorResponse.Width
  nameWithType: SensorResponse.Width
- uid: VPEAR.Core.Wrappers.SensorResponse.Width*
  name: Width
  href: api/VPEAR.Core.Wrappers.SensorResponse.html#VPEAR_Core_Wrappers_SensorResponse_Width_
  commentId: Overload:VPEAR.Core.Wrappers.SensorResponse.Width
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.SensorResponse.Width
  nameWithType: SensorResponse.Width
- uid: VPEAR.Core.Wrappers.WifiResponse
  name: WifiResponse
  href: api/VPEAR.Core.Wrappers.WifiResponse.html
  commentId: T:VPEAR.Core.Wrappers.WifiResponse
  fullName: VPEAR.Core.Wrappers.WifiResponse
  nameWithType: WifiResponse
- uid: VPEAR.Core.Wrappers.WifiResponse.Mode
  name: Mode
  href: api/VPEAR.Core.Wrappers.WifiResponse.html#VPEAR_Core_Wrappers_WifiResponse_Mode
  commentId: P:VPEAR.Core.Wrappers.WifiResponse.Mode
  fullName: VPEAR.Core.Wrappers.WifiResponse.Mode
  nameWithType: WifiResponse.Mode
- uid: VPEAR.Core.Wrappers.WifiResponse.Mode*
  name: Mode
  href: api/VPEAR.Core.Wrappers.WifiResponse.html#VPEAR_Core_Wrappers_WifiResponse_Mode_
  commentId: Overload:VPEAR.Core.Wrappers.WifiResponse.Mode
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.WifiResponse.Mode
  nameWithType: WifiResponse.Mode
- uid: VPEAR.Core.Wrappers.WifiResponse.Neighbors
  name: Neighbors
  href: api/VPEAR.Core.Wrappers.WifiResponse.html#VPEAR_Core_Wrappers_WifiResponse_Neighbors
  commentId: P:VPEAR.Core.Wrappers.WifiResponse.Neighbors
  fullName: VPEAR.Core.Wrappers.WifiResponse.Neighbors
  nameWithType: WifiResponse.Neighbors
- uid: VPEAR.Core.Wrappers.WifiResponse.Neighbors*
  name: Neighbors
  href: api/VPEAR.Core.Wrappers.WifiResponse.html#VPEAR_Core_Wrappers_WifiResponse_Neighbors_
  commentId: Overload:VPEAR.Core.Wrappers.WifiResponse.Neighbors
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.WifiResponse.Neighbors
  nameWithType: WifiResponse.Neighbors
- uid: VPEAR.Core.Wrappers.WifiResponse.Ssid
  name: Ssid
  href: api/VPEAR.Core.Wrappers.WifiResponse.html#VPEAR_Core_Wrappers_WifiResponse_Ssid
  commentId: P:VPEAR.Core.Wrappers.WifiResponse.Ssid
  fullName: VPEAR.Core.Wrappers.WifiResponse.Ssid
  nameWithType: WifiResponse.Ssid
- uid: VPEAR.Core.Wrappers.WifiResponse.Ssid*
  name: Ssid
  href: api/VPEAR.Core.Wrappers.WifiResponse.html#VPEAR_Core_Wrappers_WifiResponse_Ssid_
  commentId: Overload:VPEAR.Core.Wrappers.WifiResponse.Ssid
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.WifiResponse.Ssid
  nameWithType: WifiResponse.Ssid
- uid: VPEAR.Server
  name: VPEAR.Server
  href: api/VPEAR.Server.html
  commentId: N:VPEAR.Server
  fullName: VPEAR.Server
  nameWithType: VPEAR.Server
- uid: VPEAR.Server.Constants
  name: Constants
  href: api/VPEAR.Server.Constants.html
  commentId: T:VPEAR.Server.Constants
  fullName: VPEAR.Server.Constants
  nameWithType: Constants
- uid: VPEAR.Server.Constants.Limits
  name: Constants.Limits
  href: api/VPEAR.Server.Constants.Limits.html
  commentId: T:VPEAR.Server.Constants.Limits
  fullName: VPEAR.Server.Constants.Limits
  nameWithType: Constants.Limits
- uid: VPEAR.Server.Constants.Limits.MaxStringLength
  name: MaxStringLength
  href: api/VPEAR.Server.Constants.Limits.html#VPEAR_Server_Constants_Limits_MaxStringLength
  commentId: F:VPEAR.Server.Constants.Limits.MaxStringLength
  fullName: VPEAR.Server.Constants.Limits.MaxStringLength
  nameWithType: Constants.Limits.MaxStringLength
- uid: VPEAR.Server.Constants.Limits.MinStringLength
  name: MinStringLength
  href: api/VPEAR.Server.Constants.Limits.html#VPEAR_Server_Constants_Limits_MinStringLength
  commentId: F:VPEAR.Server.Constants.Limits.MinStringLength
  fullName: VPEAR.Server.Constants.Limits.MinStringLength
  nameWithType: Constants.Limits.MinStringLength
- uid: VPEAR.Server.Constants.Routes
  name: Constants.Routes
  href: api/VPEAR.Server.Constants.Routes.html
  commentId: T:VPEAR.Server.Constants.Routes
  fullName: VPEAR.Server.Constants.Routes
  nameWithType: Constants.Routes
- uid: VPEAR.Server.Constants.Routes.ApiPrefix
  name: ApiPrefix
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_ApiPrefix
  commentId: F:VPEAR.Server.Constants.Routes.ApiPrefix
  fullName: VPEAR.Server.Constants.Routes.ApiPrefix
  nameWithType: Constants.Routes.ApiPrefix
- uid: VPEAR.Server.Constants.Routes.ApiVersion
  name: ApiVersion
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_ApiVersion
  commentId: F:VPEAR.Server.Constants.Routes.ApiVersion
  fullName: VPEAR.Server.Constants.Routes.ApiVersion
  nameWithType: Constants.Routes.ApiVersion
- uid: VPEAR.Server.Constants.Routes.BaseRoute
  name: BaseRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_BaseRoute
  commentId: F:VPEAR.Server.Constants.Routes.BaseRoute
  fullName: VPEAR.Server.Constants.Routes.BaseRoute
  nameWithType: Constants.Routes.BaseRoute
- uid: VPEAR.Server.Constants.Routes.DeviceRoute
  name: DeviceRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_DeviceRoute
  commentId: F:VPEAR.Server.Constants.Routes.DeviceRoute
  fullName: VPEAR.Server.Constants.Routes.DeviceRoute
  nameWithType: Constants.Routes.DeviceRoute
- uid: VPEAR.Server.Constants.Routes.FiltersRoute
  name: FiltersRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_FiltersRoute
  commentId: F:VPEAR.Server.Constants.Routes.FiltersRoute
  fullName: VPEAR.Server.Constants.Routes.FiltersRoute
  nameWithType: Constants.Routes.FiltersRoute
- uid: VPEAR.Server.Constants.Routes.FirmwareRoute
  name: FirmwareRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_FirmwareRoute
  commentId: F:VPEAR.Server.Constants.Routes.FirmwareRoute
  fullName: VPEAR.Server.Constants.Routes.FirmwareRoute
  nameWithType: Constants.Routes.FirmwareRoute
- uid: VPEAR.Server.Constants.Routes.FramesRoute
  name: FramesRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_FramesRoute
  commentId: F:VPEAR.Server.Constants.Routes.FramesRoute
  fullName: VPEAR.Server.Constants.Routes.FramesRoute
  nameWithType: Constants.Routes.FramesRoute
- uid: VPEAR.Server.Constants.Routes.PowerRoute
  name: PowerRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_PowerRoute
  commentId: F:VPEAR.Server.Constants.Routes.PowerRoute
  fullName: VPEAR.Server.Constants.Routes.PowerRoute
  nameWithType: Constants.Routes.PowerRoute
- uid: VPEAR.Server.Constants.Routes.SensorsRoute
  name: SensorsRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_SensorsRoute
  commentId: F:VPEAR.Server.Constants.Routes.SensorsRoute
  fullName: VPEAR.Server.Constants.Routes.SensorsRoute
  nameWithType: Constants.Routes.SensorsRoute
- uid: VPEAR.Server.Constants.Routes.WifiRoute
  name: WifiRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_WifiRoute
  commentId: F:VPEAR.Server.Constants.Routes.WifiRoute
  fullName: VPEAR.Server.Constants.Routes.WifiRoute
  nameWithType: Constants.Routes.WifiRoute
- uid: VPEAR.Server.Controllers
  name: VPEAR.Server.Controllers
  href: api/VPEAR.Server.Controllers.html
  commentId: N:VPEAR.Server.Controllers
  fullName: VPEAR.Server.Controllers
  nameWithType: VPEAR.Server.Controllers
- uid: VPEAR.Server.Controllers.BaseController
  name: BaseController
  href: api/VPEAR.Server.Controllers.BaseController.html
  commentId: T:VPEAR.Server.Controllers.BaseController
  fullName: VPEAR.Server.Controllers.BaseController
  nameWithType: BaseController
- uid: VPEAR.Server.Controllers.BaseController.OnGet
  name: OnGet()
  href: api/VPEAR.Server.Controllers.BaseController.html#VPEAR_Server_Controllers_BaseController_OnGet
  commentId: M:VPEAR.Server.Controllers.BaseController.OnGet
  fullName: VPEAR.Server.Controllers.BaseController.OnGet()
  nameWithType: BaseController.OnGet()
- uid: VPEAR.Server.Controllers.BaseController.OnGet*
  name: OnGet
  href: api/VPEAR.Server.Controllers.BaseController.html#VPEAR_Server_Controllers_BaseController_OnGet_
  commentId: Overload:VPEAR.Server.Controllers.BaseController.OnGet
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.BaseController.OnGet
  nameWithType: BaseController.OnGet
- uid: VPEAR.Server.Db
  name: VPEAR.Server.Db
  href: api/VPEAR.Server.Db.html
  commentId: N:VPEAR.Server.Db
  fullName: VPEAR.Server.Db
  nameWithType: VPEAR.Server.Db
- uid: VPEAR.Server.Db.DeviceConfiguration
  name: DeviceConfiguration
  href: api/VPEAR.Server.Db.DeviceConfiguration.html
  commentId: T:VPEAR.Server.Db.DeviceConfiguration
  fullName: VPEAR.Server.Db.DeviceConfiguration
  nameWithType: DeviceConfiguration
- uid: VPEAR.Server.Db.DeviceConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Server.Models.Device})
  name: Configure(EntityTypeBuilder<Device>)
  href: api/VPEAR.Server.Db.DeviceConfiguration.html#VPEAR_Server_Db_DeviceConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Server_Models_Device__
  commentId: M:VPEAR.Server.Db.DeviceConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Server.Models.Device})
  name.vb: Configure(EntityTypeBuilder(Of Device))
  fullName: VPEAR.Server.Db.DeviceConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Server.Models.Device>)
  fullName.vb: VPEAR.Server.Db.DeviceConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Server.Models.Device))
  nameWithType: DeviceConfiguration.Configure(EntityTypeBuilder<Device>)
  nameWithType.vb: DeviceConfiguration.Configure(EntityTypeBuilder(Of Device))
- uid: VPEAR.Server.Db.DeviceConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.DeviceConfiguration.html#VPEAR_Server_Db_DeviceConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Db.DeviceConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.DeviceConfiguration.Configure
  nameWithType: DeviceConfiguration.Configure
- uid: VPEAR.Server.Db.EntityBase`1
  name: EntityBase<TKey>
  href: api/VPEAR.Server.Db.EntityBase-1.html
  commentId: T:VPEAR.Server.Db.EntityBase`1
  name.vb: EntityBase(Of TKey)
  fullName: VPEAR.Server.Db.EntityBase<TKey>
  fullName.vb: VPEAR.Server.Db.EntityBase(Of TKey)
  nameWithType: EntityBase<TKey>
  nameWithType.vb: EntityBase(Of TKey)
- uid: VPEAR.Server.Db.EntityBase`1.CreatedAt
  name: CreatedAt
  href: api/VPEAR.Server.Db.EntityBase-1.html#VPEAR_Server_Db_EntityBase_1_CreatedAt
  commentId: P:VPEAR.Server.Db.EntityBase`1.CreatedAt
  fullName: VPEAR.Server.Db.EntityBase<TKey>.CreatedAt
  fullName.vb: VPEAR.Server.Db.EntityBase(Of TKey).CreatedAt
  nameWithType: EntityBase<TKey>.CreatedAt
  nameWithType.vb: EntityBase(Of TKey).CreatedAt
- uid: VPEAR.Server.Db.EntityBase`1.CreatedAt*
  name: CreatedAt
  href: api/VPEAR.Server.Db.EntityBase-1.html#VPEAR_Server_Db_EntityBase_1_CreatedAt_
  commentId: Overload:VPEAR.Server.Db.EntityBase`1.CreatedAt
  isSpec: "True"
  fullName: VPEAR.Server.Db.EntityBase<TKey>.CreatedAt
  fullName.vb: VPEAR.Server.Db.EntityBase(Of TKey).CreatedAt
  nameWithType: EntityBase<TKey>.CreatedAt
  nameWithType.vb: EntityBase(Of TKey).CreatedAt
- uid: VPEAR.Server.Db.EntityBase`1.Id
  name: Id
  href: api/VPEAR.Server.Db.EntityBase-1.html#VPEAR_Server_Db_EntityBase_1_Id
  commentId: P:VPEAR.Server.Db.EntityBase`1.Id
  fullName: VPEAR.Server.Db.EntityBase<TKey>.Id
  fullName.vb: VPEAR.Server.Db.EntityBase(Of TKey).Id
  nameWithType: EntityBase<TKey>.Id
  nameWithType.vb: EntityBase(Of TKey).Id
- uid: VPEAR.Server.Db.EntityBase`1.Id*
  name: Id
  href: api/VPEAR.Server.Db.EntityBase-1.html#VPEAR_Server_Db_EntityBase_1_Id_
  commentId: Overload:VPEAR.Server.Db.EntityBase`1.Id
  isSpec: "True"
  fullName: VPEAR.Server.Db.EntityBase<TKey>.Id
  fullName.vb: VPEAR.Server.Db.EntityBase(Of TKey).Id
  nameWithType: EntityBase<TKey>.Id
  nameWithType.vb: EntityBase(Of TKey).Id
- uid: VPEAR.Server.Db.EntityBase`1.ModifiedAt
  name: ModifiedAt
  href: api/VPEAR.Server.Db.EntityBase-1.html#VPEAR_Server_Db_EntityBase_1_ModifiedAt
  commentId: P:VPEAR.Server.Db.EntityBase`1.ModifiedAt
  fullName: VPEAR.Server.Db.EntityBase<TKey>.ModifiedAt
  fullName.vb: VPEAR.Server.Db.EntityBase(Of TKey).ModifiedAt
  nameWithType: EntityBase<TKey>.ModifiedAt
  nameWithType.vb: EntityBase(Of TKey).ModifiedAt
- uid: VPEAR.Server.Db.EntityBase`1.ModifiedAt*
  name: ModifiedAt
  href: api/VPEAR.Server.Db.EntityBase-1.html#VPEAR_Server_Db_EntityBase_1_ModifiedAt_
  commentId: Overload:VPEAR.Server.Db.EntityBase`1.ModifiedAt
  isSpec: "True"
  fullName: VPEAR.Server.Db.EntityBase<TKey>.ModifiedAt
  fullName.vb: VPEAR.Server.Db.EntityBase(Of TKey).ModifiedAt
  nameWithType: EntityBase<TKey>.ModifiedAt
  nameWithType.vb: EntityBase(Of TKey).ModifiedAt
- uid: VPEAR.Server.Db.EntityBaseConfiguration`2
  name: EntityBaseConfiguration<TEntity, TKey>
  href: api/VPEAR.Server.Db.EntityBaseConfiguration-2.html
  commentId: T:VPEAR.Server.Db.EntityBaseConfiguration`2
  name.vb: EntityBaseConfiguration(Of TEntity, TKey)
  fullName: VPEAR.Server.Db.EntityBaseConfiguration<TEntity, TKey>
  fullName.vb: VPEAR.Server.Db.EntityBaseConfiguration(Of TEntity, TKey)
  nameWithType: EntityBaseConfiguration<TEntity, TKey>
  nameWithType.vb: EntityBaseConfiguration(Of TEntity, TKey)
- uid: VPEAR.Server.Db.EntityBaseConfiguration`2.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{`0})
  name: Configure(EntityTypeBuilder<TEntity>)
  href: api/VPEAR.Server.Db.EntityBaseConfiguration-2.html#VPEAR_Server_Db_EntityBaseConfiguration_2_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder__0__
  commentId: M:VPEAR.Server.Db.EntityBaseConfiguration`2.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{`0})
  name.vb: Configure(EntityTypeBuilder(Of TEntity))
  fullName: VPEAR.Server.Db.EntityBaseConfiguration<TEntity, TKey>.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>)
  fullName.vb: VPEAR.Server.Db.EntityBaseConfiguration(Of TEntity, TKey).Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity))
  nameWithType: EntityBaseConfiguration<TEntity, TKey>.Configure(EntityTypeBuilder<TEntity>)
  nameWithType.vb: EntityBaseConfiguration(Of TEntity, TKey).Configure(EntityTypeBuilder(Of TEntity))
- uid: VPEAR.Server.Db.EntityBaseConfiguration`2.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.EntityBaseConfiguration-2.html#VPEAR_Server_Db_EntityBaseConfiguration_2_Configure_
  commentId: Overload:VPEAR.Server.Db.EntityBaseConfiguration`2.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.EntityBaseConfiguration<TEntity, TKey>.Configure
  fullName.vb: VPEAR.Server.Db.EntityBaseConfiguration(Of TEntity, TKey).Configure
  nameWithType: EntityBaseConfiguration<TEntity, TKey>.Configure
  nameWithType.vb: EntityBaseConfiguration(Of TEntity, TKey).Configure
- uid: VPEAR.Server.Db.FiltersConfiguration
  name: FiltersConfiguration
  href: api/VPEAR.Server.Db.FiltersConfiguration.html
  commentId: T:VPEAR.Server.Db.FiltersConfiguration
  fullName: VPEAR.Server.Db.FiltersConfiguration
  nameWithType: FiltersConfiguration
- uid: VPEAR.Server.Db.FiltersConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Server.Models.Filters})
  name: Configure(EntityTypeBuilder<Filters>)
  href: api/VPEAR.Server.Db.FiltersConfiguration.html#VPEAR_Server_Db_FiltersConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Server_Models_Filters__
  commentId: M:VPEAR.Server.Db.FiltersConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Server.Models.Filters})
  name.vb: Configure(EntityTypeBuilder(Of Filters))
  fullName: VPEAR.Server.Db.FiltersConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Server.Models.Filters>)
  fullName.vb: VPEAR.Server.Db.FiltersConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Server.Models.Filters))
  nameWithType: FiltersConfiguration.Configure(EntityTypeBuilder<Filters>)
  nameWithType.vb: FiltersConfiguration.Configure(EntityTypeBuilder(Of Filters))
- uid: VPEAR.Server.Db.FiltersConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.FiltersConfiguration.html#VPEAR_Server_Db_FiltersConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Db.FiltersConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.FiltersConfiguration.Configure
  nameWithType: FiltersConfiguration.Configure
- uid: VPEAR.Server.Db.FirmwareConfiguration
  name: FirmwareConfiguration
  href: api/VPEAR.Server.Db.FirmwareConfiguration.html
  commentId: T:VPEAR.Server.Db.FirmwareConfiguration
  fullName: VPEAR.Server.Db.FirmwareConfiguration
  nameWithType: FirmwareConfiguration
- uid: VPEAR.Server.Db.FirmwareConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Server.Models.Firmware})
  name: Configure(EntityTypeBuilder<Firmware>)
  href: api/VPEAR.Server.Db.FirmwareConfiguration.html#VPEAR_Server_Db_FirmwareConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Server_Models_Firmware__
  commentId: M:VPEAR.Server.Db.FirmwareConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Server.Models.Firmware})
  name.vb: Configure(EntityTypeBuilder(Of Firmware))
  fullName: VPEAR.Server.Db.FirmwareConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Server.Models.Firmware>)
  fullName.vb: VPEAR.Server.Db.FirmwareConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Server.Models.Firmware))
  nameWithType: FirmwareConfiguration.Configure(EntityTypeBuilder<Firmware>)
  nameWithType.vb: FirmwareConfiguration.Configure(EntityTypeBuilder(Of Firmware))
- uid: VPEAR.Server.Db.FirmwareConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.FirmwareConfiguration.html#VPEAR_Server_Db_FirmwareConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Db.FirmwareConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.FirmwareConfiguration.Configure
  nameWithType: FirmwareConfiguration.Configure
- uid: VPEAR.Server.Db.FrameConfiguration
  name: FrameConfiguration
  href: api/VPEAR.Server.Db.FrameConfiguration.html
  commentId: T:VPEAR.Server.Db.FrameConfiguration
  fullName: VPEAR.Server.Db.FrameConfiguration
  nameWithType: FrameConfiguration
- uid: VPEAR.Server.Db.FrameConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Server.Models.Frame})
  name: Configure(EntityTypeBuilder<Frame>)
  href: api/VPEAR.Server.Db.FrameConfiguration.html#VPEAR_Server_Db_FrameConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Server_Models_Frame__
  commentId: M:VPEAR.Server.Db.FrameConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Server.Models.Frame})
  name.vb: Configure(EntityTypeBuilder(Of Frame))
  fullName: VPEAR.Server.Db.FrameConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Server.Models.Frame>)
  fullName.vb: VPEAR.Server.Db.FrameConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Server.Models.Frame))
  nameWithType: FrameConfiguration.Configure(EntityTypeBuilder<Frame>)
  nameWithType.vb: FrameConfiguration.Configure(EntityTypeBuilder(Of Frame))
- uid: VPEAR.Server.Db.FrameConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.FrameConfiguration.html#VPEAR_Server_Db_FrameConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Db.FrameConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.FrameConfiguration.Configure
  nameWithType: FrameConfiguration.Configure
- uid: VPEAR.Server.Db.PowerConfiguration
  name: PowerConfiguration
  href: api/VPEAR.Server.Db.PowerConfiguration.html
  commentId: T:VPEAR.Server.Db.PowerConfiguration
  fullName: VPEAR.Server.Db.PowerConfiguration
  nameWithType: PowerConfiguration
- uid: VPEAR.Server.Db.PowerConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Server.Models.Power})
  name: Configure(EntityTypeBuilder<Power>)
  href: api/VPEAR.Server.Db.PowerConfiguration.html#VPEAR_Server_Db_PowerConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Server_Models_Power__
  commentId: M:VPEAR.Server.Db.PowerConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Server.Models.Power})
  name.vb: Configure(EntityTypeBuilder(Of Power))
  fullName: VPEAR.Server.Db.PowerConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Server.Models.Power>)
  fullName.vb: VPEAR.Server.Db.PowerConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Server.Models.Power))
  nameWithType: PowerConfiguration.Configure(EntityTypeBuilder<Power>)
  nameWithType.vb: PowerConfiguration.Configure(EntityTypeBuilder(Of Power))
- uid: VPEAR.Server.Db.PowerConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.PowerConfiguration.html#VPEAR_Server_Db_PowerConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Db.PowerConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.PowerConfiguration.Configure
  nameWithType: PowerConfiguration.Configure
- uid: VPEAR.Server.Db.Repository`3
  name: Repository<TDbContext, TEntity, TKey>
  href: api/VPEAR.Server.Db.Repository-3.html
  commentId: T:VPEAR.Server.Db.Repository`3
  name.vb: Repository(Of TDbContext, TEntity, TKey)
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey)
  nameWithType: Repository<TDbContext, TEntity, TKey>
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey)
- uid: VPEAR.Server.Db.Repository`3.#ctor(`0)
  name: Repository(TDbContext)
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3__ctor__0_
  commentId: M:VPEAR.Server.Db.Repository`3.#ctor(`0)
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.Repository(TDbContext)
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).Repository(TDbContext)
  nameWithType: Repository<TDbContext, TEntity, TKey>.Repository(TDbContext)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).Repository(TDbContext)
- uid: VPEAR.Server.Db.Repository`3.#ctor*
  name: Repository
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3__ctor_
  commentId: Overload:VPEAR.Server.Db.Repository`3.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.Repository
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).Repository
  nameWithType: Repository<TDbContext, TEntity, TKey>.Repository
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).Repository
- uid: VPEAR.Server.Db.Repository`3.CreateAsync(`1)
  name: CreateAsync(TEntity)
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_CreateAsync__1_
  commentId: M:VPEAR.Server.Db.Repository`3.CreateAsync(`1)
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.CreateAsync(TEntity)
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).CreateAsync(TEntity)
  nameWithType: Repository<TDbContext, TEntity, TKey>.CreateAsync(TEntity)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).CreateAsync(TEntity)
- uid: VPEAR.Server.Db.Repository`3.CreateAsync*
  name: CreateAsync
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_CreateAsync_
  commentId: Overload:VPEAR.Server.Db.Repository`3.CreateAsync
  isSpec: "True"
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.CreateAsync
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).CreateAsync
  nameWithType: Repository<TDbContext, TEntity, TKey>.CreateAsync
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).CreateAsync
- uid: VPEAR.Server.Db.Repository`3.DeleteAsync(`2)
  name: DeleteAsync(TKey)
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_DeleteAsync__2_
  commentId: M:VPEAR.Server.Db.Repository`3.DeleteAsync(`2)
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.DeleteAsync(TKey)
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).DeleteAsync(TKey)
  nameWithType: Repository<TDbContext, TEntity, TKey>.DeleteAsync(TKey)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).DeleteAsync(TKey)
- uid: VPEAR.Server.Db.Repository`3.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_DeleteAsync_
  commentId: Overload:VPEAR.Server.Db.Repository`3.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.DeleteAsync
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).DeleteAsync
  nameWithType: Repository<TDbContext, TEntity, TKey>.DeleteAsync
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).DeleteAsync
- uid: VPEAR.Server.Db.Repository`3.Get
  name: Get()
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_Get
  commentId: M:VPEAR.Server.Db.Repository`3.Get
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.Get()
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).Get()
  nameWithType: Repository<TDbContext, TEntity, TKey>.Get()
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).Get()
- uid: VPEAR.Server.Db.Repository`3.Get*
  name: Get
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_Get_
  commentId: Overload:VPEAR.Server.Db.Repository`3.Get
  isSpec: "True"
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.Get
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).Get
  nameWithType: Repository<TDbContext, TEntity, TKey>.Get
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).Get
- uid: VPEAR.Server.Db.Repository`3.GetAsync(`2)
  name: GetAsync(TKey)
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_GetAsync__2_
  commentId: M:VPEAR.Server.Db.Repository`3.GetAsync(`2)
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.GetAsync(TKey)
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).GetAsync(TKey)
  nameWithType: Repository<TDbContext, TEntity, TKey>.GetAsync(TKey)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).GetAsync(TKey)
- uid: VPEAR.Server.Db.Repository`3.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_GetAsync_
  commentId: Overload:VPEAR.Server.Db.Repository`3.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.GetAsync
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).GetAsync
  nameWithType: Repository<TDbContext, TEntity, TKey>.GetAsync
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).GetAsync
- uid: VPEAR.Server.Db.Repository`3.UpdateAsync(`1)
  name: UpdateAsync(TEntity)
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_UpdateAsync__1_
  commentId: M:VPEAR.Server.Db.Repository`3.UpdateAsync(`1)
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.UpdateAsync(TEntity)
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).UpdateAsync(TEntity)
  nameWithType: Repository<TDbContext, TEntity, TKey>.UpdateAsync(TEntity)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).UpdateAsync(TEntity)
- uid: VPEAR.Server.Db.Repository`3.UpdateAsync*
  name: UpdateAsync
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_UpdateAsync_
  commentId: Overload:VPEAR.Server.Db.Repository`3.UpdateAsync
  isSpec: "True"
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.UpdateAsync
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).UpdateAsync
  nameWithType: Repository<TDbContext, TEntity, TKey>.UpdateAsync
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).UpdateAsync
- uid: VPEAR.Server.Db.SensorConfiguration
  name: SensorConfiguration
  href: api/VPEAR.Server.Db.SensorConfiguration.html
  commentId: T:VPEAR.Server.Db.SensorConfiguration
  fullName: VPEAR.Server.Db.SensorConfiguration
  nameWithType: SensorConfiguration
- uid: VPEAR.Server.Db.SensorConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Server.Models.Sensor})
  name: Configure(EntityTypeBuilder<Sensor>)
  href: api/VPEAR.Server.Db.SensorConfiguration.html#VPEAR_Server_Db_SensorConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Server_Models_Sensor__
  commentId: M:VPEAR.Server.Db.SensorConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Server.Models.Sensor})
  name.vb: Configure(EntityTypeBuilder(Of Sensor))
  fullName: VPEAR.Server.Db.SensorConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Server.Models.Sensor>)
  fullName.vb: VPEAR.Server.Db.SensorConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Server.Models.Sensor))
  nameWithType: SensorConfiguration.Configure(EntityTypeBuilder<Sensor>)
  nameWithType.vb: SensorConfiguration.Configure(EntityTypeBuilder(Of Sensor))
- uid: VPEAR.Server.Db.SensorConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.SensorConfiguration.html#VPEAR_Server_Db_SensorConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Db.SensorConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.SensorConfiguration.Configure
  nameWithType: SensorConfiguration.Configure
- uid: VPEAR.Server.Db.VPEARDbContext
  name: VPEARDbContext
  href: api/VPEAR.Server.Db.VPEARDbContext.html
  commentId: T:VPEAR.Server.Db.VPEARDbContext
  fullName: VPEAR.Server.Db.VPEARDbContext
  nameWithType: VPEARDbContext
- uid: VPEAR.Server.Db.VPEARDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{VPEAR.Server.Db.VPEARDbContext})
  name: VPEARDbContext(DbContextOptions<VPEARDbContext>)
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_VPEAR_Server_Db_VPEARDbContext__
  commentId: M:VPEAR.Server.Db.VPEARDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{VPEAR.Server.Db.VPEARDbContext})
  name.vb: VPEARDbContext(DbContextOptions(Of VPEARDbContext))
  fullName: VPEAR.Server.Db.VPEARDbContext.VPEARDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<VPEAR.Server.Db.VPEARDbContext>)
  fullName.vb: VPEAR.Server.Db.VPEARDbContext.VPEARDbContext(Microsoft.EntityFrameworkCore.DbContextOptions(Of VPEAR.Server.Db.VPEARDbContext))
  nameWithType: VPEARDbContext.VPEARDbContext(DbContextOptions<VPEARDbContext>)
  nameWithType.vb: VPEARDbContext.VPEARDbContext(DbContextOptions(Of VPEARDbContext))
- uid: VPEAR.Server.Db.VPEARDbContext.#ctor*
  name: VPEARDbContext
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext__ctor_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.VPEARDbContext
  nameWithType: VPEARDbContext.VPEARDbContext
- uid: VPEAR.Server.Db.VPEARDbContext.Devices
  name: Devices
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Devices
  commentId: P:VPEAR.Server.Db.VPEARDbContext.Devices
  fullName: VPEAR.Server.Db.VPEARDbContext.Devices
  nameWithType: VPEARDbContext.Devices
- uid: VPEAR.Server.Db.VPEARDbContext.Devices*
  name: Devices
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Devices_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.Devices
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.Devices
  nameWithType: VPEARDbContext.Devices
- uid: VPEAR.Server.Db.VPEARDbContext.Filters
  name: Filters
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Filters
  commentId: P:VPEAR.Server.Db.VPEARDbContext.Filters
  fullName: VPEAR.Server.Db.VPEARDbContext.Filters
  nameWithType: VPEARDbContext.Filters
- uid: VPEAR.Server.Db.VPEARDbContext.Filters*
  name: Filters
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Filters_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.Filters
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.Filters
  nameWithType: VPEARDbContext.Filters
- uid: VPEAR.Server.Db.VPEARDbContext.Firmwares
  name: Firmwares
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Firmwares
  commentId: P:VPEAR.Server.Db.VPEARDbContext.Firmwares
  fullName: VPEAR.Server.Db.VPEARDbContext.Firmwares
  nameWithType: VPEARDbContext.Firmwares
- uid: VPEAR.Server.Db.VPEARDbContext.Firmwares*
  name: Firmwares
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Firmwares_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.Firmwares
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.Firmwares
  nameWithType: VPEARDbContext.Firmwares
- uid: VPEAR.Server.Db.VPEARDbContext.Frames
  name: Frames
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Frames
  commentId: P:VPEAR.Server.Db.VPEARDbContext.Frames
  fullName: VPEAR.Server.Db.VPEARDbContext.Frames
  nameWithType: VPEARDbContext.Frames
- uid: VPEAR.Server.Db.VPEARDbContext.Frames*
  name: Frames
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Frames_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.Frames
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.Frames
  nameWithType: VPEARDbContext.Frames
- uid: VPEAR.Server.Db.VPEARDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:VPEAR.Server.Db.VPEARDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: VPEAR.Server.Db.VPEARDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: VPEARDbContext.OnModelCreating(ModelBuilder)
- uid: VPEAR.Server.Db.VPEARDbContext.OnModelCreating*
  name: OnModelCreating
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_OnModelCreating_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.OnModelCreating
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.OnModelCreating
  nameWithType: VPEARDbContext.OnModelCreating
- uid: VPEAR.Server.Db.VPEARDbContext.Powers
  name: Powers
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Powers
  commentId: P:VPEAR.Server.Db.VPEARDbContext.Powers
  fullName: VPEAR.Server.Db.VPEARDbContext.Powers
  nameWithType: VPEARDbContext.Powers
- uid: VPEAR.Server.Db.VPEARDbContext.Powers*
  name: Powers
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Powers_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.Powers
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.Powers
  nameWithType: VPEARDbContext.Powers
- uid: VPEAR.Server.Db.VPEARDbContext.Sensors
  name: Sensors
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Sensors
  commentId: P:VPEAR.Server.Db.VPEARDbContext.Sensors
  fullName: VPEAR.Server.Db.VPEARDbContext.Sensors
  nameWithType: VPEARDbContext.Sensors
- uid: VPEAR.Server.Db.VPEARDbContext.Sensors*
  name: Sensors
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Sensors_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.Sensors
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.Sensors
  nameWithType: VPEARDbContext.Sensors
- uid: VPEAR.Server.Db.VPEARDbContext.Wifis
  name: Wifis
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Wifis
  commentId: P:VPEAR.Server.Db.VPEARDbContext.Wifis
  fullName: VPEAR.Server.Db.VPEARDbContext.Wifis
  nameWithType: VPEARDbContext.Wifis
- uid: VPEAR.Server.Db.VPEARDbContext.Wifis*
  name: Wifis
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Wifis_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.Wifis
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.Wifis
  nameWithType: VPEARDbContext.Wifis
- uid: VPEAR.Server.Db.WifiConfiguration
  name: WifiConfiguration
  href: api/VPEAR.Server.Db.WifiConfiguration.html
  commentId: T:VPEAR.Server.Db.WifiConfiguration
  fullName: VPEAR.Server.Db.WifiConfiguration
  nameWithType: WifiConfiguration
- uid: VPEAR.Server.Db.WifiConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Server.Models.Wifi})
  name: Configure(EntityTypeBuilder<Wifi>)
  href: api/VPEAR.Server.Db.WifiConfiguration.html#VPEAR_Server_Db_WifiConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Server_Models_Wifi__
  commentId: M:VPEAR.Server.Db.WifiConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Server.Models.Wifi})
  name.vb: Configure(EntityTypeBuilder(Of Wifi))
  fullName: VPEAR.Server.Db.WifiConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Server.Models.Wifi>)
  fullName.vb: VPEAR.Server.Db.WifiConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Server.Models.Wifi))
  nameWithType: WifiConfiguration.Configure(EntityTypeBuilder<Wifi>)
  nameWithType.vb: WifiConfiguration.Configure(EntityTypeBuilder(Of Wifi))
- uid: VPEAR.Server.Db.WifiConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.WifiConfiguration.html#VPEAR_Server_Db_WifiConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Db.WifiConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.WifiConfiguration.Configure
  nameWithType: WifiConfiguration.Configure
- uid: VPEAR.Server.Models
  name: VPEAR.Server.Models
  href: api/VPEAR.Server.Models.html
  commentId: N:VPEAR.Server.Models
  fullName: VPEAR.Server.Models
  nameWithType: VPEAR.Server.Models
- uid: VPEAR.Server.Models.Device
  name: Device
  href: api/VPEAR.Server.Models.Device.html
  commentId: T:VPEAR.Server.Models.Device
  fullName: VPEAR.Server.Models.Device
  nameWithType: Device
- uid: VPEAR.Server.Models.Device.Address
  name: Address
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Address
  commentId: P:VPEAR.Server.Models.Device.Address
  fullName: VPEAR.Server.Models.Device.Address
  nameWithType: Device.Address
- uid: VPEAR.Server.Models.Device.Address*
  name: Address
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Address_
  commentId: Overload:VPEAR.Server.Models.Device.Address
  isSpec: "True"
  fullName: VPEAR.Server.Models.Device.Address
  nameWithType: Device.Address
- uid: VPEAR.Server.Models.Device.Class
  name: Class
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Class
  commentId: P:VPEAR.Server.Models.Device.Class
  fullName: VPEAR.Server.Models.Device.Class
  nameWithType: Device.Class
- uid: VPEAR.Server.Models.Device.Class*
  name: Class
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Class_
  commentId: Overload:VPEAR.Server.Models.Device.Class
  isSpec: "True"
  fullName: VPEAR.Server.Models.Device.Class
  nameWithType: Device.Class
- uid: VPEAR.Server.Models.Device.Filters
  name: Filters
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Filters
  commentId: P:VPEAR.Server.Models.Device.Filters
  fullName: VPEAR.Server.Models.Device.Filters
  nameWithType: Device.Filters
- uid: VPEAR.Server.Models.Device.Filters*
  name: Filters
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Filters_
  commentId: Overload:VPEAR.Server.Models.Device.Filters
  isSpec: "True"
  fullName: VPEAR.Server.Models.Device.Filters
  nameWithType: Device.Filters
- uid: VPEAR.Server.Models.Device.Firmware
  name: Firmware
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Firmware
  commentId: P:VPEAR.Server.Models.Device.Firmware
  fullName: VPEAR.Server.Models.Device.Firmware
  nameWithType: Device.Firmware
- uid: VPEAR.Server.Models.Device.Firmware*
  name: Firmware
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Firmware_
  commentId: Overload:VPEAR.Server.Models.Device.Firmware
  isSpec: "True"
  fullName: VPEAR.Server.Models.Device.Firmware
  nameWithType: Device.Firmware
- uid: VPEAR.Server.Models.Device.Frames
  name: Frames
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Frames
  commentId: P:VPEAR.Server.Models.Device.Frames
  fullName: VPEAR.Server.Models.Device.Frames
  nameWithType: Device.Frames
- uid: VPEAR.Server.Models.Device.Frames*
  name: Frames
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Frames_
  commentId: Overload:VPEAR.Server.Models.Device.Frames
  isSpec: "True"
  fullName: VPEAR.Server.Models.Device.Frames
  nameWithType: Device.Frames
- uid: VPEAR.Server.Models.Device.Name
  name: Name
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Name
  commentId: P:VPEAR.Server.Models.Device.Name
  fullName: VPEAR.Server.Models.Device.Name
  nameWithType: Device.Name
- uid: VPEAR.Server.Models.Device.Name*
  name: Name
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Name_
  commentId: Overload:VPEAR.Server.Models.Device.Name
  isSpec: "True"
  fullName: VPEAR.Server.Models.Device.Name
  nameWithType: Device.Name
- uid: VPEAR.Server.Models.Device.Power
  name: Power
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Power
  commentId: P:VPEAR.Server.Models.Device.Power
  fullName: VPEAR.Server.Models.Device.Power
  nameWithType: Device.Power
- uid: VPEAR.Server.Models.Device.Power*
  name: Power
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Power_
  commentId: Overload:VPEAR.Server.Models.Device.Power
  isSpec: "True"
  fullName: VPEAR.Server.Models.Device.Power
  nameWithType: Device.Power
- uid: VPEAR.Server.Models.Device.RequiredSensors
  name: RequiredSensors
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_RequiredSensors
  commentId: P:VPEAR.Server.Models.Device.RequiredSensors
  fullName: VPEAR.Server.Models.Device.RequiredSensors
  nameWithType: Device.RequiredSensors
- uid: VPEAR.Server.Models.Device.RequiredSensors*
  name: RequiredSensors
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_RequiredSensors_
  commentId: Overload:VPEAR.Server.Models.Device.RequiredSensors
  isSpec: "True"
  fullName: VPEAR.Server.Models.Device.RequiredSensors
  nameWithType: Device.RequiredSensors
- uid: VPEAR.Server.Models.Device.SampleFrequency
  name: SampleFrequency
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_SampleFrequency
  commentId: P:VPEAR.Server.Models.Device.SampleFrequency
  fullName: VPEAR.Server.Models.Device.SampleFrequency
  nameWithType: Device.SampleFrequency
- uid: VPEAR.Server.Models.Device.SampleFrequency*
  name: SampleFrequency
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_SampleFrequency_
  commentId: Overload:VPEAR.Server.Models.Device.SampleFrequency
  isSpec: "True"
  fullName: VPEAR.Server.Models.Device.SampleFrequency
  nameWithType: Device.SampleFrequency
- uid: VPEAR.Server.Models.Device.Sensors
  name: Sensors
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Sensors
  commentId: P:VPEAR.Server.Models.Device.Sensors
  fullName: VPEAR.Server.Models.Device.Sensors
  nameWithType: Device.Sensors
- uid: VPEAR.Server.Models.Device.Sensors*
  name: Sensors
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Sensors_
  commentId: Overload:VPEAR.Server.Models.Device.Sensors
  isSpec: "True"
  fullName: VPEAR.Server.Models.Device.Sensors
  nameWithType: Device.Sensors
- uid: VPEAR.Server.Models.Device.Wifi
  name: Wifi
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Wifi
  commentId: P:VPEAR.Server.Models.Device.Wifi
  fullName: VPEAR.Server.Models.Device.Wifi
  nameWithType: Device.Wifi
- uid: VPEAR.Server.Models.Device.Wifi*
  name: Wifi
  href: api/VPEAR.Server.Models.Device.html#VPEAR_Server_Models_Device_Wifi_
  commentId: Overload:VPEAR.Server.Models.Device.Wifi
  isSpec: "True"
  fullName: VPEAR.Server.Models.Device.Wifi
  nameWithType: Device.Wifi
- uid: VPEAR.Server.Models.Filters
  name: Filters
  href: api/VPEAR.Server.Models.Filters.html
  commentId: T:VPEAR.Server.Models.Filters
  fullName: VPEAR.Server.Models.Filters
  nameWithType: Filters
- uid: VPEAR.Server.Models.Filters.Noise
  name: Noise
  href: api/VPEAR.Server.Models.Filters.html#VPEAR_Server_Models_Filters_Noise
  commentId: P:VPEAR.Server.Models.Filters.Noise
  fullName: VPEAR.Server.Models.Filters.Noise
  nameWithType: Filters.Noise
- uid: VPEAR.Server.Models.Filters.Noise*
  name: Noise
  href: api/VPEAR.Server.Models.Filters.html#VPEAR_Server_Models_Filters_Noise_
  commentId: Overload:VPEAR.Server.Models.Filters.Noise
  isSpec: "True"
  fullName: VPEAR.Server.Models.Filters.Noise
  nameWithType: Filters.Noise
- uid: VPEAR.Server.Models.Filters.Smooth
  name: Smooth
  href: api/VPEAR.Server.Models.Filters.html#VPEAR_Server_Models_Filters_Smooth
  commentId: P:VPEAR.Server.Models.Filters.Smooth
  fullName: VPEAR.Server.Models.Filters.Smooth
  nameWithType: Filters.Smooth
- uid: VPEAR.Server.Models.Filters.Smooth*
  name: Smooth
  href: api/VPEAR.Server.Models.Filters.html#VPEAR_Server_Models_Filters_Smooth_
  commentId: Overload:VPEAR.Server.Models.Filters.Smooth
  isSpec: "True"
  fullName: VPEAR.Server.Models.Filters.Smooth
  nameWithType: Filters.Smooth
- uid: VPEAR.Server.Models.Filters.Spot
  name: Spot
  href: api/VPEAR.Server.Models.Filters.html#VPEAR_Server_Models_Filters_Spot
  commentId: P:VPEAR.Server.Models.Filters.Spot
  fullName: VPEAR.Server.Models.Filters.Spot
  nameWithType: Filters.Spot
- uid: VPEAR.Server.Models.Filters.Spot*
  name: Spot
  href: api/VPEAR.Server.Models.Filters.html#VPEAR_Server_Models_Filters_Spot_
  commentId: Overload:VPEAR.Server.Models.Filters.Spot
  isSpec: "True"
  fullName: VPEAR.Server.Models.Filters.Spot
  nameWithType: Filters.Spot
- uid: VPEAR.Server.Models.Firmware
  name: Firmware
  href: api/VPEAR.Server.Models.Firmware.html
  commentId: T:VPEAR.Server.Models.Firmware
  fullName: VPEAR.Server.Models.Firmware
  nameWithType: Firmware
- uid: VPEAR.Server.Models.Firmware.Source
  name: Source
  href: api/VPEAR.Server.Models.Firmware.html#VPEAR_Server_Models_Firmware_Source
  commentId: P:VPEAR.Server.Models.Firmware.Source
  fullName: VPEAR.Server.Models.Firmware.Source
  nameWithType: Firmware.Source
- uid: VPEAR.Server.Models.Firmware.Source*
  name: Source
  href: api/VPEAR.Server.Models.Firmware.html#VPEAR_Server_Models_Firmware_Source_
  commentId: Overload:VPEAR.Server.Models.Firmware.Source
  isSpec: "True"
  fullName: VPEAR.Server.Models.Firmware.Source
  nameWithType: Firmware.Source
- uid: VPEAR.Server.Models.Firmware.Upgrade
  name: Upgrade
  href: api/VPEAR.Server.Models.Firmware.html#VPEAR_Server_Models_Firmware_Upgrade
  commentId: P:VPEAR.Server.Models.Firmware.Upgrade
  fullName: VPEAR.Server.Models.Firmware.Upgrade
  nameWithType: Firmware.Upgrade
- uid: VPEAR.Server.Models.Firmware.Upgrade*
  name: Upgrade
  href: api/VPEAR.Server.Models.Firmware.html#VPEAR_Server_Models_Firmware_Upgrade_
  commentId: Overload:VPEAR.Server.Models.Firmware.Upgrade
  isSpec: "True"
  fullName: VPEAR.Server.Models.Firmware.Upgrade
  nameWithType: Firmware.Upgrade
- uid: VPEAR.Server.Models.Firmware.Version
  name: Version
  href: api/VPEAR.Server.Models.Firmware.html#VPEAR_Server_Models_Firmware_Version
  commentId: P:VPEAR.Server.Models.Firmware.Version
  fullName: VPEAR.Server.Models.Firmware.Version
  nameWithType: Firmware.Version
- uid: VPEAR.Server.Models.Firmware.Version*
  name: Version
  href: api/VPEAR.Server.Models.Firmware.html#VPEAR_Server_Models_Firmware_Version_
  commentId: Overload:VPEAR.Server.Models.Firmware.Version
  isSpec: "True"
  fullName: VPEAR.Server.Models.Firmware.Version
  nameWithType: Firmware.Version
- uid: VPEAR.Server.Models.Frame
  name: Frame
  href: api/VPEAR.Server.Models.Frame.html
  commentId: T:VPEAR.Server.Models.Frame
  fullName: VPEAR.Server.Models.Frame
  nameWithType: Frame
- uid: VPEAR.Server.Models.Frame.Index
  name: Index
  href: api/VPEAR.Server.Models.Frame.html#VPEAR_Server_Models_Frame_Index
  commentId: P:VPEAR.Server.Models.Frame.Index
  fullName: VPEAR.Server.Models.Frame.Index
  nameWithType: Frame.Index
- uid: VPEAR.Server.Models.Frame.Index*
  name: Index
  href: api/VPEAR.Server.Models.Frame.html#VPEAR_Server_Models_Frame_Index_
  commentId: Overload:VPEAR.Server.Models.Frame.Index
  isSpec: "True"
  fullName: VPEAR.Server.Models.Frame.Index
  nameWithType: Frame.Index
- uid: VPEAR.Server.Models.Frame.Readings
  name: Readings
  href: api/VPEAR.Server.Models.Frame.html#VPEAR_Server_Models_Frame_Readings
  commentId: P:VPEAR.Server.Models.Frame.Readings
  fullName: VPEAR.Server.Models.Frame.Readings
  nameWithType: Frame.Readings
- uid: VPEAR.Server.Models.Frame.Readings*
  name: Readings
  href: api/VPEAR.Server.Models.Frame.html#VPEAR_Server_Models_Frame_Readings_
  commentId: Overload:VPEAR.Server.Models.Frame.Readings
  isSpec: "True"
  fullName: VPEAR.Server.Models.Frame.Readings
  nameWithType: Frame.Readings
- uid: VPEAR.Server.Models.Frame.Time
  name: Time
  href: api/VPEAR.Server.Models.Frame.html#VPEAR_Server_Models_Frame_Time
  commentId: P:VPEAR.Server.Models.Frame.Time
  fullName: VPEAR.Server.Models.Frame.Time
  nameWithType: Frame.Time
- uid: VPEAR.Server.Models.Frame.Time*
  name: Time
  href: api/VPEAR.Server.Models.Frame.html#VPEAR_Server_Models_Frame_Time_
  commentId: Overload:VPEAR.Server.Models.Frame.Time
  isSpec: "True"
  fullName: VPEAR.Server.Models.Frame.Time
  nameWithType: Frame.Time
- uid: VPEAR.Server.Models.Power
  name: Power
  href: api/VPEAR.Server.Models.Power.html
  commentId: T:VPEAR.Server.Models.Power
  fullName: VPEAR.Server.Models.Power
  nameWithType: Power
- uid: VPEAR.Server.Models.Power.Level
  name: Level
  href: api/VPEAR.Server.Models.Power.html#VPEAR_Server_Models_Power_Level
  commentId: P:VPEAR.Server.Models.Power.Level
  fullName: VPEAR.Server.Models.Power.Level
  nameWithType: Power.Level
- uid: VPEAR.Server.Models.Power.Level*
  name: Level
  href: api/VPEAR.Server.Models.Power.html#VPEAR_Server_Models_Power_Level_
  commentId: Overload:VPEAR.Server.Models.Power.Level
  isSpec: "True"
  fullName: VPEAR.Server.Models.Power.Level
  nameWithType: Power.Level
- uid: VPEAR.Server.Models.Power.State
  name: State
  href: api/VPEAR.Server.Models.Power.html#VPEAR_Server_Models_Power_State
  commentId: P:VPEAR.Server.Models.Power.State
  fullName: VPEAR.Server.Models.Power.State
  nameWithType: Power.State
- uid: VPEAR.Server.Models.Power.State*
  name: State
  href: api/VPEAR.Server.Models.Power.html#VPEAR_Server_Models_Power_State_
  commentId: Overload:VPEAR.Server.Models.Power.State
  isSpec: "True"
  fullName: VPEAR.Server.Models.Power.State
  nameWithType: Power.State
- uid: VPEAR.Server.Models.Sensor
  name: Sensor
  href: api/VPEAR.Server.Models.Sensor.html
  commentId: T:VPEAR.Server.Models.Sensor
  fullName: VPEAR.Server.Models.Sensor
  nameWithType: Sensor
- uid: VPEAR.Server.Models.Sensor.Columns
  name: Columns
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Columns
  commentId: P:VPEAR.Server.Models.Sensor.Columns
  fullName: VPEAR.Server.Models.Sensor.Columns
  nameWithType: Sensor.Columns
- uid: VPEAR.Server.Models.Sensor.Columns*
  name: Columns
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Columns_
  commentId: Overload:VPEAR.Server.Models.Sensor.Columns
  isSpec: "True"
  fullName: VPEAR.Server.Models.Sensor.Columns
  nameWithType: Sensor.Columns
- uid: VPEAR.Server.Models.Sensor.Height
  name: Height
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Height
  commentId: P:VPEAR.Server.Models.Sensor.Height
  fullName: VPEAR.Server.Models.Sensor.Height
  nameWithType: Sensor.Height
- uid: VPEAR.Server.Models.Sensor.Height*
  name: Height
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Height_
  commentId: Overload:VPEAR.Server.Models.Sensor.Height
  isSpec: "True"
  fullName: VPEAR.Server.Models.Sensor.Height
  nameWithType: Sensor.Height
- uid: VPEAR.Server.Models.Sensor.Maximum
  name: Maximum
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Maximum
  commentId: P:VPEAR.Server.Models.Sensor.Maximum
  fullName: VPEAR.Server.Models.Sensor.Maximum
  nameWithType: Sensor.Maximum
- uid: VPEAR.Server.Models.Sensor.Maximum*
  name: Maximum
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Maximum_
  commentId: Overload:VPEAR.Server.Models.Sensor.Maximum
  isSpec: "True"
  fullName: VPEAR.Server.Models.Sensor.Maximum
  nameWithType: Sensor.Maximum
- uid: VPEAR.Server.Models.Sensor.Minimum
  name: Minimum
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Minimum
  commentId: P:VPEAR.Server.Models.Sensor.Minimum
  fullName: VPEAR.Server.Models.Sensor.Minimum
  nameWithType: Sensor.Minimum
- uid: VPEAR.Server.Models.Sensor.Minimum*
  name: Minimum
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Minimum_
  commentId: Overload:VPEAR.Server.Models.Sensor.Minimum
  isSpec: "True"
  fullName: VPEAR.Server.Models.Sensor.Minimum
  nameWithType: Sensor.Minimum
- uid: VPEAR.Server.Models.Sensor.Name
  name: Name
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Name
  commentId: P:VPEAR.Server.Models.Sensor.Name
  fullName: VPEAR.Server.Models.Sensor.Name
  nameWithType: Sensor.Name
- uid: VPEAR.Server.Models.Sensor.Name*
  name: Name
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Name_
  commentId: Overload:VPEAR.Server.Models.Sensor.Name
  isSpec: "True"
  fullName: VPEAR.Server.Models.Sensor.Name
  nameWithType: Sensor.Name
- uid: VPEAR.Server.Models.Sensor.Rows
  name: Rows
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Rows
  commentId: P:VPEAR.Server.Models.Sensor.Rows
  fullName: VPEAR.Server.Models.Sensor.Rows
  nameWithType: Sensor.Rows
- uid: VPEAR.Server.Models.Sensor.Rows*
  name: Rows
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Rows_
  commentId: Overload:VPEAR.Server.Models.Sensor.Rows
  isSpec: "True"
  fullName: VPEAR.Server.Models.Sensor.Rows
  nameWithType: Sensor.Rows
- uid: VPEAR.Server.Models.Sensor.Units
  name: Units
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Units
  commentId: P:VPEAR.Server.Models.Sensor.Units
  fullName: VPEAR.Server.Models.Sensor.Units
  nameWithType: Sensor.Units
- uid: VPEAR.Server.Models.Sensor.Units*
  name: Units
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Units_
  commentId: Overload:VPEAR.Server.Models.Sensor.Units
  isSpec: "True"
  fullName: VPEAR.Server.Models.Sensor.Units
  nameWithType: Sensor.Units
- uid: VPEAR.Server.Models.Sensor.Width
  name: Width
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Width
  commentId: P:VPEAR.Server.Models.Sensor.Width
  fullName: VPEAR.Server.Models.Sensor.Width
  nameWithType: Sensor.Width
- uid: VPEAR.Server.Models.Sensor.Width*
  name: Width
  href: api/VPEAR.Server.Models.Sensor.html#VPEAR_Server_Models_Sensor_Width_
  commentId: Overload:VPEAR.Server.Models.Sensor.Width
  isSpec: "True"
  fullName: VPEAR.Server.Models.Sensor.Width
  nameWithType: Sensor.Width
- uid: VPEAR.Server.Models.Wifi
  name: Wifi
  href: api/VPEAR.Server.Models.Wifi.html
  commentId: T:VPEAR.Server.Models.Wifi
  fullName: VPEAR.Server.Models.Wifi
  nameWithType: Wifi
- uid: VPEAR.Server.Models.Wifi.Mode
  name: Mode
  href: api/VPEAR.Server.Models.Wifi.html#VPEAR_Server_Models_Wifi_Mode
  commentId: P:VPEAR.Server.Models.Wifi.Mode
  fullName: VPEAR.Server.Models.Wifi.Mode
  nameWithType: Wifi.Mode
- uid: VPEAR.Server.Models.Wifi.Mode*
  name: Mode
  href: api/VPEAR.Server.Models.Wifi.html#VPEAR_Server_Models_Wifi_Mode_
  commentId: Overload:VPEAR.Server.Models.Wifi.Mode
  isSpec: "True"
  fullName: VPEAR.Server.Models.Wifi.Mode
  nameWithType: Wifi.Mode
- uid: VPEAR.Server.Models.Wifi.Neighbors
  name: Neighbors
  href: api/VPEAR.Server.Models.Wifi.html#VPEAR_Server_Models_Wifi_Neighbors
  commentId: P:VPEAR.Server.Models.Wifi.Neighbors
  fullName: VPEAR.Server.Models.Wifi.Neighbors
  nameWithType: Wifi.Neighbors
- uid: VPEAR.Server.Models.Wifi.Neighbors*
  name: Neighbors
  href: api/VPEAR.Server.Models.Wifi.html#VPEAR_Server_Models_Wifi_Neighbors_
  commentId: Overload:VPEAR.Server.Models.Wifi.Neighbors
  isSpec: "True"
  fullName: VPEAR.Server.Models.Wifi.Neighbors
  nameWithType: Wifi.Neighbors
- uid: VPEAR.Server.Models.Wifi.Ssid
  name: Ssid
  href: api/VPEAR.Server.Models.Wifi.html#VPEAR_Server_Models_Wifi_Ssid
  commentId: P:VPEAR.Server.Models.Wifi.Ssid
  fullName: VPEAR.Server.Models.Wifi.Ssid
  nameWithType: Wifi.Ssid
- uid: VPEAR.Server.Models.Wifi.Ssid*
  name: Ssid
  href: api/VPEAR.Server.Models.Wifi.html#VPEAR_Server_Models_Wifi_Ssid_
  commentId: Overload:VPEAR.Server.Models.Wifi.Ssid
  isSpec: "True"
  fullName: VPEAR.Server.Models.Wifi.Ssid
  nameWithType: Wifi.Ssid
- uid: VPEAR.Server.Program
  name: Program
  href: api/VPEAR.Server.Program.html
  commentId: T:VPEAR.Server.Program
  fullName: VPEAR.Server.Program
  nameWithType: Program
- uid: VPEAR.Server.Program.CreateHost(System.String[])
  name: CreateHost(String[])
  href: api/VPEAR.Server.Program.html#VPEAR_Server_Program_CreateHost_System_String___
  commentId: M:VPEAR.Server.Program.CreateHost(System.String[])
  name.vb: CreateHost(String())
  fullName: VPEAR.Server.Program.CreateHost(System.String[])
  fullName.vb: VPEAR.Server.Program.CreateHost(System.String())
  nameWithType: Program.CreateHost(String[])
  nameWithType.vb: Program.CreateHost(String())
- uid: VPEAR.Server.Program.CreateHost*
  name: CreateHost
  href: api/VPEAR.Server.Program.html#VPEAR_Server_Program_CreateHost_
  commentId: Overload:VPEAR.Server.Program.CreateHost
  isSpec: "True"
  fullName: VPEAR.Server.Program.CreateHost
  nameWithType: Program.CreateHost
- uid: VPEAR.Server.Program.Main(System.String[])
  name: Main(String[])
  href: api/VPEAR.Server.Program.html#VPEAR_Server_Program_Main_System_String___
  commentId: M:VPEAR.Server.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: VPEAR.Server.Program.Main(System.String[])
  fullName.vb: VPEAR.Server.Program.Main(System.String())
  nameWithType: Program.Main(String[])
  nameWithType.vb: Program.Main(String())
- uid: VPEAR.Server.Program.Main*
  name: Main
  href: api/VPEAR.Server.Program.html#VPEAR_Server_Program_Main_
  commentId: Overload:VPEAR.Server.Program.Main
  isSpec: "True"
  fullName: VPEAR.Server.Program.Main
  nameWithType: Program.Main
- uid: VPEAR.Server.Startup
  name: Startup
  href: api/VPEAR.Server.Startup.html
  commentId: T:VPEAR.Server.Startup
  fullName: VPEAR.Server.Startup
  nameWithType: Startup
- uid: VPEAR.Server.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name: Startup(IConfiguration)
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup__ctor_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:VPEAR.Server.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  fullName: VPEAR.Server.Startup.Startup(Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: Startup.Startup(IConfiguration)
- uid: VPEAR.Server.Startup.#ctor*
  name: Startup
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup__ctor_
  commentId: Overload:VPEAR.Server.Startup.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Startup.Startup
  nameWithType: Startup.Startup
- uid: VPEAR.Server.Startup.Configuration
  name: Configuration
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_Configuration
  commentId: P:VPEAR.Server.Startup.Configuration
  fullName: VPEAR.Server.Startup.Configuration
  nameWithType: Startup.Configuration
- uid: VPEAR.Server.Startup.Configuration*
  name: Configuration
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_Configuration_
  commentId: Overload:VPEAR.Server.Startup.Configuration
  isSpec: "True"
  fullName: VPEAR.Server.Startup.Configuration
  nameWithType: Startup.Configuration
- uid: VPEAR.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  name: Configure(IApplicationBuilder, IWebHostEnvironment)
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_Configure_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_
  commentId: M:VPEAR.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  fullName: VPEAR.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  nameWithType: Startup.Configure(IApplicationBuilder, IWebHostEnvironment)
- uid: VPEAR.Server.Startup.Configure*
  name: Configure
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_Configure_
  commentId: Overload:VPEAR.Server.Startup.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Startup.Configure
  nameWithType: Startup.Configure
- uid: VPEAR.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: ConfigureServices(IServiceCollection)
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_ConfigureServices_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:VPEAR.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: VPEAR.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: Startup.ConfigureServices(IServiceCollection)
- uid: VPEAR.Server.Startup.ConfigureServices*
  name: ConfigureServices
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_ConfigureServices_
  commentId: Overload:VPEAR.Server.Startup.ConfigureServices
  isSpec: "True"
  fullName: VPEAR.Server.Startup.ConfigureServices
  nameWithType: Startup.ConfigureServices
