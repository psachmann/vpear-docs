### YamlMime:XRefMap
sorted: true
references:
- uid: VPEAR.Core
  name: VPEAR.Core
  href: api/VPEAR.Core.html
  commentId: N:VPEAR.Core
  fullName: VPEAR.Core
  nameWithType: VPEAR.Core
- uid: VPEAR.Core.AbstractClient
  name: AbstractClient
  href: api/VPEAR.Core.AbstractClient.html
  commentId: T:VPEAR.Core.AbstractClient
  fullName: VPEAR.Core.AbstractClient
  nameWithType: AbstractClient
- uid: VPEAR.Core.AbstractClient.#ctor(System.String)
  name: AbstractClient(String)
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient__ctor_System_String_
  commentId: M:VPEAR.Core.AbstractClient.#ctor(System.String)
  fullName: VPEAR.Core.AbstractClient.AbstractClient(System.String)
  nameWithType: AbstractClient.AbstractClient(String)
- uid: VPEAR.Core.AbstractClient.#ctor*
  name: AbstractClient
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient__ctor_
  commentId: Overload:VPEAR.Core.AbstractClient.#ctor
  isSpec: "True"
  fullName: VPEAR.Core.AbstractClient.AbstractClient
  nameWithType: AbstractClient.AbstractClient
- uid: VPEAR.Core.AbstractClient.Client
  name: Client
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_Client
  commentId: P:VPEAR.Core.AbstractClient.Client
  fullName: VPEAR.Core.AbstractClient.Client
  nameWithType: AbstractClient.Client
- uid: VPEAR.Core.AbstractClient.Client*
  name: Client
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_Client_
  commentId: Overload:VPEAR.Core.AbstractClient.Client
  isSpec: "True"
  fullName: VPEAR.Core.AbstractClient.Client
  nameWithType: AbstractClient.Client
- uid: VPEAR.Core.AbstractClient.DeleteAsync(System.String)
  name: DeleteAsync(String)
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_DeleteAsync_System_String_
  commentId: M:VPEAR.Core.AbstractClient.DeleteAsync(System.String)
  fullName: VPEAR.Core.AbstractClient.DeleteAsync(System.String)
  nameWithType: AbstractClient.DeleteAsync(String)
- uid: VPEAR.Core.AbstractClient.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_DeleteAsync_
  commentId: Overload:VPEAR.Core.AbstractClient.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Core.AbstractClient.DeleteAsync
  nameWithType: AbstractClient.DeleteAsync
- uid: VPEAR.Core.AbstractClient.Dispose
  name: Dispose()
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_Dispose
  commentId: M:VPEAR.Core.AbstractClient.Dispose
  fullName: VPEAR.Core.AbstractClient.Dispose()
  nameWithType: AbstractClient.Dispose()
- uid: VPEAR.Core.AbstractClient.Dispose*
  name: Dispose
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_Dispose_
  commentId: Overload:VPEAR.Core.AbstractClient.Dispose
  isSpec: "True"
  fullName: VPEAR.Core.AbstractClient.Dispose
  nameWithType: AbstractClient.Dispose
- uid: VPEAR.Core.AbstractClient.Error
  name: Error
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_Error
  commentId: P:VPEAR.Core.AbstractClient.Error
  fullName: VPEAR.Core.AbstractClient.Error
  nameWithType: AbstractClient.Error
- uid: VPEAR.Core.AbstractClient.Error*
  name: Error
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_Error_
  commentId: Overload:VPEAR.Core.AbstractClient.Error
  isSpec: "True"
  fullName: VPEAR.Core.AbstractClient.Error
  nameWithType: AbstractClient.Error
- uid: VPEAR.Core.AbstractClient.GetAsync(System.String)
  name: GetAsync(String)
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_GetAsync_System_String_
  commentId: M:VPEAR.Core.AbstractClient.GetAsync(System.String)
  fullName: VPEAR.Core.AbstractClient.GetAsync(System.String)
  nameWithType: AbstractClient.GetAsync(String)
- uid: VPEAR.Core.AbstractClient.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_GetAsync_
  commentId: Overload:VPEAR.Core.AbstractClient.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.AbstractClient.GetAsync
  nameWithType: AbstractClient.GetAsync
- uid: VPEAR.Core.AbstractClient.PostAsync(System.String,System.Object)
  name: PostAsync(String, Object)
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_PostAsync_System_String_System_Object_
  commentId: M:VPEAR.Core.AbstractClient.PostAsync(System.String,System.Object)
  fullName: VPEAR.Core.AbstractClient.PostAsync(System.String, System.Object)
  nameWithType: AbstractClient.PostAsync(String, Object)
- uid: VPEAR.Core.AbstractClient.PostAsync*
  name: PostAsync
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_PostAsync_
  commentId: Overload:VPEAR.Core.AbstractClient.PostAsync
  isSpec: "True"
  fullName: VPEAR.Core.AbstractClient.PostAsync
  nameWithType: AbstractClient.PostAsync
- uid: VPEAR.Core.AbstractClient.PutAsync(System.String,System.Object)
  name: PutAsync(String, Object)
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_PutAsync_System_String_System_Object_
  commentId: M:VPEAR.Core.AbstractClient.PutAsync(System.String,System.Object)
  fullName: VPEAR.Core.AbstractClient.PutAsync(System.String, System.Object)
  nameWithType: AbstractClient.PutAsync(String, Object)
- uid: VPEAR.Core.AbstractClient.PutAsync*
  name: PutAsync
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_PutAsync_
  commentId: Overload:VPEAR.Core.AbstractClient.PutAsync
  isSpec: "True"
  fullName: VPEAR.Core.AbstractClient.PutAsync
  nameWithType: AbstractClient.PutAsync
- uid: VPEAR.Core.AbstractClient.Response
  name: Response
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_Response
  commentId: P:VPEAR.Core.AbstractClient.Response
  fullName: VPEAR.Core.AbstractClient.Response
  nameWithType: AbstractClient.Response
- uid: VPEAR.Core.AbstractClient.Response*
  name: Response
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_Response_
  commentId: Overload:VPEAR.Core.AbstractClient.Response
  isSpec: "True"
  fullName: VPEAR.Core.AbstractClient.Response
  nameWithType: AbstractClient.Response
- uid: VPEAR.Core.AbstractClient.SendAsync(System.Net.Http.HttpMethod,System.String,System.Object)
  name: SendAsync(HttpMethod, String, Object)
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_SendAsync_System_Net_Http_HttpMethod_System_String_System_Object_
  commentId: M:VPEAR.Core.AbstractClient.SendAsync(System.Net.Http.HttpMethod,System.String,System.Object)
  fullName: VPEAR.Core.AbstractClient.SendAsync(System.Net.Http.HttpMethod, System.String, System.Object)
  nameWithType: AbstractClient.SendAsync(HttpMethod, String, Object)
- uid: VPEAR.Core.AbstractClient.SendAsync*
  name: SendAsync
  href: api/VPEAR.Core.AbstractClient.html#VPEAR_Core_AbstractClient_SendAsync_
  commentId: Overload:VPEAR.Core.AbstractClient.SendAsync
  isSpec: "True"
  fullName: VPEAR.Core.AbstractClient.SendAsync
  nameWithType: AbstractClient.SendAsync
- uid: VPEAR.Core.Abstractions
  name: VPEAR.Core.Abstractions
  href: api/VPEAR.Core.Abstractions.html
  commentId: N:VPEAR.Core.Abstractions
  fullName: VPEAR.Core.Abstractions
  nameWithType: VPEAR.Core.Abstractions
- uid: VPEAR.Core.Abstractions.EntityBase`1
  name: EntityBase<TKey>
  href: api/VPEAR.Core.Abstractions.EntityBase-1.html
  commentId: T:VPEAR.Core.Abstractions.EntityBase`1
  name.vb: EntityBase(Of TKey)
  fullName: VPEAR.Core.Abstractions.EntityBase<TKey>
  fullName.vb: VPEAR.Core.Abstractions.EntityBase(Of TKey)
  nameWithType: EntityBase<TKey>
  nameWithType.vb: EntityBase(Of TKey)
- uid: VPEAR.Core.Abstractions.EntityBase`1.CreatedAt
  name: CreatedAt
  href: api/VPEAR.Core.Abstractions.EntityBase-1.html#VPEAR_Core_Abstractions_EntityBase_1_CreatedAt
  commentId: P:VPEAR.Core.Abstractions.EntityBase`1.CreatedAt
  fullName: VPEAR.Core.Abstractions.EntityBase<TKey>.CreatedAt
  fullName.vb: VPEAR.Core.Abstractions.EntityBase(Of TKey).CreatedAt
  nameWithType: EntityBase<TKey>.CreatedAt
  nameWithType.vb: EntityBase(Of TKey).CreatedAt
- uid: VPEAR.Core.Abstractions.EntityBase`1.CreatedAt*
  name: CreatedAt
  href: api/VPEAR.Core.Abstractions.EntityBase-1.html#VPEAR_Core_Abstractions_EntityBase_1_CreatedAt_
  commentId: Overload:VPEAR.Core.Abstractions.EntityBase`1.CreatedAt
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.EntityBase<TKey>.CreatedAt
  fullName.vb: VPEAR.Core.Abstractions.EntityBase(Of TKey).CreatedAt
  nameWithType: EntityBase<TKey>.CreatedAt
  nameWithType.vb: EntityBase(Of TKey).CreatedAt
- uid: VPEAR.Core.Abstractions.EntityBase`1.Id
  name: Id
  href: api/VPEAR.Core.Abstractions.EntityBase-1.html#VPEAR_Core_Abstractions_EntityBase_1_Id
  commentId: P:VPEAR.Core.Abstractions.EntityBase`1.Id
  fullName: VPEAR.Core.Abstractions.EntityBase<TKey>.Id
  fullName.vb: VPEAR.Core.Abstractions.EntityBase(Of TKey).Id
  nameWithType: EntityBase<TKey>.Id
  nameWithType.vb: EntityBase(Of TKey).Id
- uid: VPEAR.Core.Abstractions.EntityBase`1.Id*
  name: Id
  href: api/VPEAR.Core.Abstractions.EntityBase-1.html#VPEAR_Core_Abstractions_EntityBase_1_Id_
  commentId: Overload:VPEAR.Core.Abstractions.EntityBase`1.Id
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.EntityBase<TKey>.Id
  fullName.vb: VPEAR.Core.Abstractions.EntityBase(Of TKey).Id
  nameWithType: EntityBase<TKey>.Id
  nameWithType.vb: EntityBase(Of TKey).Id
- uid: VPEAR.Core.Abstractions.EntityBase`1.ModifiedAt
  name: ModifiedAt
  href: api/VPEAR.Core.Abstractions.EntityBase-1.html#VPEAR_Core_Abstractions_EntityBase_1_ModifiedAt
  commentId: P:VPEAR.Core.Abstractions.EntityBase`1.ModifiedAt
  fullName: VPEAR.Core.Abstractions.EntityBase<TKey>.ModifiedAt
  fullName.vb: VPEAR.Core.Abstractions.EntityBase(Of TKey).ModifiedAt
  nameWithType: EntityBase<TKey>.ModifiedAt
  nameWithType.vb: EntityBase(Of TKey).ModifiedAt
- uid: VPEAR.Core.Abstractions.EntityBase`1.ModifiedAt*
  name: ModifiedAt
  href: api/VPEAR.Core.Abstractions.EntityBase-1.html#VPEAR_Core_Abstractions_EntityBase_1_ModifiedAt_
  commentId: Overload:VPEAR.Core.Abstractions.EntityBase`1.ModifiedAt
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.EntityBase<TKey>.ModifiedAt
  fullName.vb: VPEAR.Core.Abstractions.EntityBase(Of TKey).ModifiedAt
  nameWithType: EntityBase<TKey>.ModifiedAt
  nameWithType.vb: EntityBase(Of TKey).ModifiedAt
- uid: VPEAR.Core.Abstractions.IDeviceClient
  name: IDeviceClient
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html
  commentId: T:VPEAR.Core.Abstractions.IDeviceClient
  fullName: VPEAR.Core.Abstractions.IDeviceClient
  nameWithType: IDeviceClient
- uid: VPEAR.Core.Abstractions.IDeviceClient.BaseAddress
  name: BaseAddress
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_BaseAddress
  commentId: P:VPEAR.Core.Abstractions.IDeviceClient.BaseAddress
  fullName: VPEAR.Core.Abstractions.IDeviceClient.BaseAddress
  nameWithType: IDeviceClient.BaseAddress
- uid: VPEAR.Core.Abstractions.IDeviceClient.BaseAddress*
  name: BaseAddress
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_BaseAddress_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.BaseAddress
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.BaseAddress
  nameWithType: IDeviceClient.BaseAddress
- uid: VPEAR.Core.Abstractions.IDeviceClient.Factory
  name: IDeviceClient.Factory
  href: api/VPEAR.Core.Abstractions.IDeviceClient.Factory.html
  commentId: T:VPEAR.Core.Abstractions.IDeviceClient.Factory
  fullName: VPEAR.Core.Abstractions.IDeviceClient.Factory
  nameWithType: IDeviceClient.Factory
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetAsync
  name: GetAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetAsync()
  nameWithType: IDeviceClient.GetAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetAsync
  nameWithType: IDeviceClient.GetAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetDeviceAsync
  name: GetDeviceAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetDeviceAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetDeviceAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetDeviceAsync()
  nameWithType: IDeviceClient.GetDeviceAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetDeviceAsync*
  name: GetDeviceAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetDeviceAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetDeviceAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetDeviceAsync
  nameWithType: IDeviceClient.GetDeviceAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFiltersAsync
  name: GetFiltersAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFiltersAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetFiltersAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFiltersAsync()
  nameWithType: IDeviceClient.GetFiltersAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFiltersAsync*
  name: GetFiltersAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFiltersAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetFiltersAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFiltersAsync
  nameWithType: IDeviceClient.GetFiltersAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFirmwareAsync
  name: GetFirmwareAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFirmwareAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetFirmwareAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFirmwareAsync()
  nameWithType: IDeviceClient.GetFirmwareAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFirmwareAsync*
  name: GetFirmwareAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFirmwareAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetFirmwareAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFirmwareAsync
  nameWithType: IDeviceClient.GetFirmwareAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFramesAsync(System.Nullable{System.Int32})
  name: GetFramesAsync(Nullable<Int32>)
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFramesAsync_System_Nullable_System_Int32__
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetFramesAsync(System.Nullable{System.Int32})
  name.vb: GetFramesAsync(Nullable(Of Int32))
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFramesAsync(System.Nullable<System.Int32>)
  fullName.vb: VPEAR.Core.Abstractions.IDeviceClient.GetFramesAsync(System.Nullable(Of System.Int32))
  nameWithType: IDeviceClient.GetFramesAsync(Nullable<Int32>)
  nameWithType.vb: IDeviceClient.GetFramesAsync(Nullable(Of Int32))
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFramesAsync*
  name: GetFramesAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFramesAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetFramesAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFramesAsync
  nameWithType: IDeviceClient.GetFramesAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFrequencyAsync
  name: GetFrequencyAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFrequencyAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetFrequencyAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFrequencyAsync()
  nameWithType: IDeviceClient.GetFrequencyAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetFrequencyAsync*
  name: GetFrequencyAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetFrequencyAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetFrequencyAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetFrequencyAsync
  nameWithType: IDeviceClient.GetFrequencyAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetPowerAsync
  name: GetPowerAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetPowerAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetPowerAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetPowerAsync()
  nameWithType: IDeviceClient.GetPowerAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetPowerAsync*
  name: GetPowerAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetPowerAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetPowerAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetPowerAsync
  nameWithType: IDeviceClient.GetPowerAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetRequiredSensorsAsync
  name: GetRequiredSensorsAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetRequiredSensorsAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetRequiredSensorsAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetRequiredSensorsAsync()
  nameWithType: IDeviceClient.GetRequiredSensorsAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetRequiredSensorsAsync*
  name: GetRequiredSensorsAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetRequiredSensorsAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetRequiredSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetRequiredSensorsAsync
  nameWithType: IDeviceClient.GetRequiredSensorsAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetSensorsAsync
  name: GetSensorsAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetSensorsAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetSensorsAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetSensorsAsync()
  nameWithType: IDeviceClient.GetSensorsAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetSensorsAsync*
  name: GetSensorsAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetSensorsAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetSensorsAsync
  nameWithType: IDeviceClient.GetSensorsAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetSSEAsync
  name: GetSSEAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetSSEAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetSSEAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetSSEAsync()
  nameWithType: IDeviceClient.GetSSEAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetSSEAsync*
  name: GetSSEAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetSSEAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetSSEAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetSSEAsync
  nameWithType: IDeviceClient.GetSSEAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetTimeAsync
  name: GetTimeAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetTimeAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetTimeAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetTimeAsync()
  nameWithType: IDeviceClient.GetTimeAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetTimeAsync*
  name: GetTimeAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetTimeAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetTimeAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetTimeAsync
  nameWithType: IDeviceClient.GetTimeAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetWifiAsync
  name: GetWifiAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetWifiAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.GetWifiAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetWifiAsync()
  nameWithType: IDeviceClient.GetWifiAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.GetWifiAsync*
  name: GetWifiAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_GetWifiAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.GetWifiAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.GetWifiAsync
  nameWithType: IDeviceClient.GetWifiAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.IsReachableAsync
  name: IsReachableAsync()
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_IsReachableAsync
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.IsReachableAsync
  fullName: VPEAR.Core.Abstractions.IDeviceClient.IsReachableAsync()
  nameWithType: IDeviceClient.IsReachableAsync()
- uid: VPEAR.Core.Abstractions.IDeviceClient.IsReachableAsync*
  name: IsReachableAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_IsReachableAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.IsReachableAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.IsReachableAsync
  nameWithType: IDeviceClient.IsReachableAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutFiltersAsync(System.Boolean,System.Boolean,System.Boolean)
  name: PutFiltersAsync(Boolean, Boolean, Boolean)
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutFiltersAsync_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.PutFiltersAsync(System.Boolean,System.Boolean,System.Boolean)
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutFiltersAsync(System.Boolean, System.Boolean, System.Boolean)
  nameWithType: IDeviceClient.PutFiltersAsync(Boolean, Boolean, Boolean)
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutFiltersAsync*
  name: PutFiltersAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutFiltersAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.PutFiltersAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutFiltersAsync
  nameWithType: IDeviceClient.PutFiltersAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutFirmwareAsync(System.String,System.String,System.Boolean)
  name: PutFirmwareAsync(String, String, Boolean)
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutFirmwareAsync_System_String_System_String_System_Boolean_
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.PutFirmwareAsync(System.String,System.String,System.Boolean)
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutFirmwareAsync(System.String, System.String, System.Boolean)
  nameWithType: IDeviceClient.PutFirmwareAsync(String, String, Boolean)
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutFirmwareAsync*
  name: PutFirmwareAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutFirmwareAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.PutFirmwareAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutFirmwareAsync
  nameWithType: IDeviceClient.PutFirmwareAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutFrequencyAsync(System.Int32)
  name: PutFrequencyAsync(Int32)
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutFrequencyAsync_System_Int32_
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.PutFrequencyAsync(System.Int32)
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutFrequencyAsync(System.Int32)
  nameWithType: IDeviceClient.PutFrequencyAsync(Int32)
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutFrequencyAsync*
  name: PutFrequencyAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutFrequencyAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.PutFrequencyAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutFrequencyAsync
  nameWithType: IDeviceClient.PutFrequencyAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutRequiredSensorsAsync(System.Int32)
  name: PutRequiredSensorsAsync(Int32)
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutRequiredSensorsAsync_System_Int32_
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.PutRequiredSensorsAsync(System.Int32)
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutRequiredSensorsAsync(System.Int32)
  nameWithType: IDeviceClient.PutRequiredSensorsAsync(Int32)
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutRequiredSensorsAsync*
  name: PutRequiredSensorsAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutRequiredSensorsAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.PutRequiredSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutRequiredSensorsAsync
  nameWithType: IDeviceClient.PutRequiredSensorsAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutWifiAsync(System.String,System.String,System.String)
  name: PutWifiAsync(String, String, String)
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutWifiAsync_System_String_System_String_System_String_
  commentId: M:VPEAR.Core.Abstractions.IDeviceClient.PutWifiAsync(System.String,System.String,System.String)
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutWifiAsync(System.String, System.String, System.String)
  nameWithType: IDeviceClient.PutWifiAsync(String, String, String)
- uid: VPEAR.Core.Abstractions.IDeviceClient.PutWifiAsync*
  name: PutWifiAsync
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_PutWifiAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.PutWifiAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.PutWifiAsync
  nameWithType: IDeviceClient.PutWifiAsync
- uid: VPEAR.Core.Abstractions.IDeviceClient.ResponseStatusCode
  name: ResponseStatusCode
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_ResponseStatusCode
  commentId: P:VPEAR.Core.Abstractions.IDeviceClient.ResponseStatusCode
  fullName: VPEAR.Core.Abstractions.IDeviceClient.ResponseStatusCode
  nameWithType: IDeviceClient.ResponseStatusCode
- uid: VPEAR.Core.Abstractions.IDeviceClient.ResponseStatusCode*
  name: ResponseStatusCode
  href: api/VPEAR.Core.Abstractions.IDeviceClient.html#VPEAR_Core_Abstractions_IDeviceClient_ResponseStatusCode_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceClient.ResponseStatusCode
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceClient.ResponseStatusCode
  nameWithType: IDeviceClient.ResponseStatusCode
- uid: VPEAR.Core.Abstractions.IDeviceService
  name: IDeviceService
  href: api/VPEAR.Core.Abstractions.IDeviceService.html
  commentId: T:VPEAR.Core.Abstractions.IDeviceService
  fullName: VPEAR.Core.Abstractions.IDeviceService
  nameWithType: IDeviceService
- uid: VPEAR.Core.Abstractions.IDeviceService.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_DeleteAsync_System_Guid_
  commentId: M:VPEAR.Core.Abstractions.IDeviceService.DeleteAsync(System.Guid)
  fullName: VPEAR.Core.Abstractions.IDeviceService.DeleteAsync(System.Guid)
  nameWithType: IDeviceService.DeleteAsync(Guid)
- uid: VPEAR.Core.Abstractions.IDeviceService.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_DeleteAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceService.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceService.DeleteAsync
  nameWithType: IDeviceService.DeleteAsync
- uid: VPEAR.Core.Abstractions.IDeviceService.GetAsync(VPEAR.Core.DeviceStatus)
  name: GetAsync(DeviceStatus)
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_GetAsync_VPEAR_Core_DeviceStatus_
  commentId: M:VPEAR.Core.Abstractions.IDeviceService.GetAsync(VPEAR.Core.DeviceStatus)
  fullName: VPEAR.Core.Abstractions.IDeviceService.GetAsync(VPEAR.Core.DeviceStatus)
  nameWithType: IDeviceService.GetAsync(DeviceStatus)
- uid: VPEAR.Core.Abstractions.IDeviceService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceService.GetAsync
  nameWithType: IDeviceService.GetAsync
- uid: VPEAR.Core.Abstractions.IDeviceService.PostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  name: PostAsync(PostDeviceRequest)
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_PostAsync_VPEAR_Core_Wrappers_PostDeviceRequest_
  commentId: M:VPEAR.Core.Abstractions.IDeviceService.PostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  fullName: VPEAR.Core.Abstractions.IDeviceService.PostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  nameWithType: IDeviceService.PostAsync(PostDeviceRequest)
- uid: VPEAR.Core.Abstractions.IDeviceService.PostAsync*
  name: PostAsync
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_PostAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceService.PostAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceService.PostAsync
  nameWithType: IDeviceService.PostAsync
- uid: VPEAR.Core.Abstractions.IDeviceService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutDeviceRequest)
  name: PutAsync(Guid, PutDeviceRequest)
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutDeviceRequest_
  commentId: M:VPEAR.Core.Abstractions.IDeviceService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutDeviceRequest)
  fullName: VPEAR.Core.Abstractions.IDeviceService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutDeviceRequest)
  nameWithType: IDeviceService.PutAsync(Guid, PutDeviceRequest)
- uid: VPEAR.Core.Abstractions.IDeviceService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Core.Abstractions.IDeviceService.html#VPEAR_Core_Abstractions_IDeviceService_PutAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDeviceService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDeviceService.PutAsync
  nameWithType: IDeviceService.PutAsync
- uid: VPEAR.Core.Abstractions.IDiscoveryService
  name: IDiscoveryService
  href: api/VPEAR.Core.Abstractions.IDiscoveryService.html
  commentId: T:VPEAR.Core.Abstractions.IDiscoveryService
  fullName: VPEAR.Core.Abstractions.IDiscoveryService
  nameWithType: IDiscoveryService
- uid: VPEAR.Core.Abstractions.IDiscoveryService.SearchDevicesAsync(System.Net.IPAddress,System.Net.IPAddress)
  name: SearchDevicesAsync(IPAddress, IPAddress)
  href: api/VPEAR.Core.Abstractions.IDiscoveryService.html#VPEAR_Core_Abstractions_IDiscoveryService_SearchDevicesAsync_System_Net_IPAddress_System_Net_IPAddress_
  commentId: M:VPEAR.Core.Abstractions.IDiscoveryService.SearchDevicesAsync(System.Net.IPAddress,System.Net.IPAddress)
  fullName: VPEAR.Core.Abstractions.IDiscoveryService.SearchDevicesAsync(System.Net.IPAddress, System.Net.IPAddress)
  nameWithType: IDiscoveryService.SearchDevicesAsync(IPAddress, IPAddress)
- uid: VPEAR.Core.Abstractions.IDiscoveryService.SearchDevicesAsync*
  name: SearchDevicesAsync
  href: api/VPEAR.Core.Abstractions.IDiscoveryService.html#VPEAR_Core_Abstractions_IDiscoveryService_SearchDevicesAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IDiscoveryService.SearchDevicesAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IDiscoveryService.SearchDevicesAsync
  nameWithType: IDiscoveryService.SearchDevicesAsync
- uid: VPEAR.Core.Abstractions.IFilterService
  name: IFilterService
  href: api/VPEAR.Core.Abstractions.IFilterService.html
  commentId: T:VPEAR.Core.Abstractions.IFilterService
  fullName: VPEAR.Core.Abstractions.IFilterService
  nameWithType: IFilterService
- uid: VPEAR.Core.Abstractions.IFilterService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Core.Abstractions.IFilterService.html#VPEAR_Core_Abstractions_IFilterService_GetAsync_System_Guid_
  commentId: M:VPEAR.Core.Abstractions.IFilterService.GetAsync(System.Guid)
  fullName: VPEAR.Core.Abstractions.IFilterService.GetAsync(System.Guid)
  nameWithType: IFilterService.GetAsync(Guid)
- uid: VPEAR.Core.Abstractions.IFilterService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IFilterService.html#VPEAR_Core_Abstractions_IFilterService_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IFilterService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IFilterService.GetAsync
  nameWithType: IFilterService.GetAsync
- uid: VPEAR.Core.Abstractions.IFilterService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFilterRequest)
  name: PutAsync(Guid, PutFilterRequest)
  href: api/VPEAR.Core.Abstractions.IFilterService.html#VPEAR_Core_Abstractions_IFilterService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutFilterRequest_
  commentId: M:VPEAR.Core.Abstractions.IFilterService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFilterRequest)
  fullName: VPEAR.Core.Abstractions.IFilterService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutFilterRequest)
  nameWithType: IFilterService.PutAsync(Guid, PutFilterRequest)
- uid: VPEAR.Core.Abstractions.IFilterService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Core.Abstractions.IFilterService.html#VPEAR_Core_Abstractions_IFilterService_PutAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IFilterService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IFilterService.PutAsync
  nameWithType: IFilterService.PutAsync
- uid: VPEAR.Core.Abstractions.IFirmwareService
  name: IFirmwareService
  href: api/VPEAR.Core.Abstractions.IFirmwareService.html
  commentId: T:VPEAR.Core.Abstractions.IFirmwareService
  fullName: VPEAR.Core.Abstractions.IFirmwareService
  nameWithType: IFirmwareService
- uid: VPEAR.Core.Abstractions.IFirmwareService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Core.Abstractions.IFirmwareService.html#VPEAR_Core_Abstractions_IFirmwareService_GetAsync_System_Guid_
  commentId: M:VPEAR.Core.Abstractions.IFirmwareService.GetAsync(System.Guid)
  fullName: VPEAR.Core.Abstractions.IFirmwareService.GetAsync(System.Guid)
  nameWithType: IFirmwareService.GetAsync(Guid)
- uid: VPEAR.Core.Abstractions.IFirmwareService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IFirmwareService.html#VPEAR_Core_Abstractions_IFirmwareService_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IFirmwareService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IFirmwareService.GetAsync
  nameWithType: IFirmwareService.GetAsync
- uid: VPEAR.Core.Abstractions.IFirmwareService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFirmwareRequest)
  name: PutAsync(Guid, PutFirmwareRequest)
  href: api/VPEAR.Core.Abstractions.IFirmwareService.html#VPEAR_Core_Abstractions_IFirmwareService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutFirmwareRequest_
  commentId: M:VPEAR.Core.Abstractions.IFirmwareService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFirmwareRequest)
  fullName: VPEAR.Core.Abstractions.IFirmwareService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutFirmwareRequest)
  nameWithType: IFirmwareService.PutAsync(Guid, PutFirmwareRequest)
- uid: VPEAR.Core.Abstractions.IFirmwareService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Core.Abstractions.IFirmwareService.html#VPEAR_Core_Abstractions_IFirmwareService_PutAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IFirmwareService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IFirmwareService.PutAsync
  nameWithType: IFirmwareService.PutAsync
- uid: VPEAR.Core.Abstractions.IPowerService
  name: IPowerService
  href: api/VPEAR.Core.Abstractions.IPowerService.html
  commentId: T:VPEAR.Core.Abstractions.IPowerService
  fullName: VPEAR.Core.Abstractions.IPowerService
  nameWithType: IPowerService
- uid: VPEAR.Core.Abstractions.IPowerService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Core.Abstractions.IPowerService.html#VPEAR_Core_Abstractions_IPowerService_GetAsync_System_Guid_
  commentId: M:VPEAR.Core.Abstractions.IPowerService.GetAsync(System.Guid)
  fullName: VPEAR.Core.Abstractions.IPowerService.GetAsync(System.Guid)
  nameWithType: IPowerService.GetAsync(Guid)
- uid: VPEAR.Core.Abstractions.IPowerService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IPowerService.html#VPEAR_Core_Abstractions_IPowerService_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IPowerService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IPowerService.GetAsync
  nameWithType: IPowerService.GetAsync
- uid: VPEAR.Core.Abstractions.IRepository`2
  name: IRepository<TEntity, TKey>
  href: api/VPEAR.Core.Abstractions.IRepository-2.html
  commentId: T:VPEAR.Core.Abstractions.IRepository`2
  name.vb: IRepository(Of TEntity, TKey)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey)
  nameWithType: IRepository<TEntity, TKey>
  nameWithType.vb: IRepository(Of TEntity, TKey)
- uid: VPEAR.Core.Abstractions.IRepository`2.CreateAsync(`0)
  name: CreateAsync(TEntity)
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_CreateAsync__0_
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.CreateAsync(`0)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.CreateAsync(TEntity)
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).CreateAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.CreateAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).CreateAsync(TEntity)
- uid: VPEAR.Core.Abstractions.IRepository`2.CreateAsync*
  name: CreateAsync
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_CreateAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.CreateAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.CreateAsync
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).CreateAsync
  nameWithType: IRepository<TEntity, TKey>.CreateAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).CreateAsync
- uid: VPEAR.Core.Abstractions.IRepository`2.DeleteAsync(`0)
  name: DeleteAsync(TEntity)
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_DeleteAsync__0_
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.DeleteAsync(`0)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.DeleteAsync(TEntity)
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).DeleteAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync(TEntity)
- uid: VPEAR.Core.Abstractions.IRepository`2.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_DeleteAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.DeleteAsync
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).DeleteAsync
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync
- uid: VPEAR.Core.Abstractions.IRepository`2.Get
  name: Get()
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_Get
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.Get
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.Get()
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).Get()
  nameWithType: IRepository<TEntity, TKey>.Get()
  nameWithType.vb: IRepository(Of TEntity, TKey).Get()
- uid: VPEAR.Core.Abstractions.IRepository`2.Get*
  name: Get
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_Get_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.Get
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.Get
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).Get
  nameWithType: IRepository<TEntity, TKey>.Get
  nameWithType.vb: IRepository(Of TEntity, TKey).Get
- uid: VPEAR.Core.Abstractions.IRepository`2.GetAsync(`1)
  name: GetAsync(TKey)
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_GetAsync__1_
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.GetAsync(`1)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.GetAsync(TKey)
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).GetAsync(TKey)
  nameWithType: IRepository<TEntity, TKey>.GetAsync(TKey)
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAsync(TKey)
- uid: VPEAR.Core.Abstractions.IRepository`2.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.GetAsync
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).GetAsync
  nameWithType: IRepository<TEntity, TKey>.GetAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAsync
- uid: VPEAR.Core.Abstractions.IRepository`2.UpdateAsync(`0)
  name: UpdateAsync(TEntity)
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_UpdateAsync__0_
  commentId: M:VPEAR.Core.Abstractions.IRepository`2.UpdateAsync(`0)
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
- uid: VPEAR.Core.Abstractions.IRepository`2.UpdateAsync*
  name: UpdateAsync
  href: api/VPEAR.Core.Abstractions.IRepository-2.html#VPEAR_Core_Abstractions_IRepository_2_UpdateAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IRepository`2.UpdateAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IRepository<TEntity, TKey>.UpdateAsync
  fullName.vb: VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey).UpdateAsync
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync
- uid: VPEAR.Core.Abstractions.ISensorService
  name: ISensorService
  href: api/VPEAR.Core.Abstractions.ISensorService.html
  commentId: T:VPEAR.Core.Abstractions.ISensorService
  fullName: VPEAR.Core.Abstractions.ISensorService
  nameWithType: ISensorService
- uid: VPEAR.Core.Abstractions.ISensorService.GetFramesAsync(System.Guid,System.Int32,System.Int32)
  name: GetFramesAsync(Guid, Int32, Int32)
  href: api/VPEAR.Core.Abstractions.ISensorService.html#VPEAR_Core_Abstractions_ISensorService_GetFramesAsync_System_Guid_System_Int32_System_Int32_
  commentId: M:VPEAR.Core.Abstractions.ISensorService.GetFramesAsync(System.Guid,System.Int32,System.Int32)
  fullName: VPEAR.Core.Abstractions.ISensorService.GetFramesAsync(System.Guid, System.Int32, System.Int32)
  nameWithType: ISensorService.GetFramesAsync(Guid, Int32, Int32)
- uid: VPEAR.Core.Abstractions.ISensorService.GetFramesAsync*
  name: GetFramesAsync
  href: api/VPEAR.Core.Abstractions.ISensorService.html#VPEAR_Core_Abstractions_ISensorService_GetFramesAsync_
  commentId: Overload:VPEAR.Core.Abstractions.ISensorService.GetFramesAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.ISensorService.GetFramesAsync
  nameWithType: ISensorService.GetFramesAsync
- uid: VPEAR.Core.Abstractions.ISensorService.GetSensorsAsync(System.Guid)
  name: GetSensorsAsync(Guid)
  href: api/VPEAR.Core.Abstractions.ISensorService.html#VPEAR_Core_Abstractions_ISensorService_GetSensorsAsync_System_Guid_
  commentId: M:VPEAR.Core.Abstractions.ISensorService.GetSensorsAsync(System.Guid)
  fullName: VPEAR.Core.Abstractions.ISensorService.GetSensorsAsync(System.Guid)
  nameWithType: ISensorService.GetSensorsAsync(Guid)
- uid: VPEAR.Core.Abstractions.ISensorService.GetSensorsAsync*
  name: GetSensorsAsync
  href: api/VPEAR.Core.Abstractions.ISensorService.html#VPEAR_Core_Abstractions_ISensorService_GetSensorsAsync_
  commentId: Overload:VPEAR.Core.Abstractions.ISensorService.GetSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.ISensorService.GetSensorsAsync
  nameWithType: ISensorService.GetSensorsAsync
- uid: VPEAR.Core.Abstractions.IUserService
  name: IUserService
  href: api/VPEAR.Core.Abstractions.IUserService.html
  commentId: T:VPEAR.Core.Abstractions.IUserService
  fullName: VPEAR.Core.Abstractions.IUserService
  nameWithType: IUserService
- uid: VPEAR.Core.Abstractions.IUserService.DeleteAsync(System.String)
  name: DeleteAsync(String)
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_DeleteAsync_System_String_
  commentId: M:VPEAR.Core.Abstractions.IUserService.DeleteAsync(System.String)
  fullName: VPEAR.Core.Abstractions.IUserService.DeleteAsync(System.String)
  nameWithType: IUserService.DeleteAsync(String)
- uid: VPEAR.Core.Abstractions.IUserService.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_DeleteAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IUserService.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IUserService.DeleteAsync
  nameWithType: IUserService.DeleteAsync
- uid: VPEAR.Core.Abstractions.IUserService.GetAsync(System.String)
  name: GetAsync(String)
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_GetAsync_System_String_
  commentId: M:VPEAR.Core.Abstractions.IUserService.GetAsync(System.String)
  fullName: VPEAR.Core.Abstractions.IUserService.GetAsync(System.String)
  nameWithType: IUserService.GetAsync(String)
- uid: VPEAR.Core.Abstractions.IUserService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IUserService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IUserService.GetAsync
  nameWithType: IUserService.GetAsync
- uid: VPEAR.Core.Abstractions.IUserService.PostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  name: PostRegisterAsync(PostRegisterRequest)
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_PostRegisterAsync_VPEAR_Core_Wrappers_PostRegisterRequest_
  commentId: M:VPEAR.Core.Abstractions.IUserService.PostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  fullName: VPEAR.Core.Abstractions.IUserService.PostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  nameWithType: IUserService.PostRegisterAsync(PostRegisterRequest)
- uid: VPEAR.Core.Abstractions.IUserService.PostRegisterAsync*
  name: PostRegisterAsync
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_PostRegisterAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IUserService.PostRegisterAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IUserService.PostRegisterAsync
  nameWithType: IUserService.PostRegisterAsync
- uid: VPEAR.Core.Abstractions.IUserService.PutAsync(System.String,VPEAR.Core.Wrappers.PutUserRequest)
  name: PutAsync(String, PutUserRequest)
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_PutAsync_System_String_VPEAR_Core_Wrappers_PutUserRequest_
  commentId: M:VPEAR.Core.Abstractions.IUserService.PutAsync(System.String,VPEAR.Core.Wrappers.PutUserRequest)
  fullName: VPEAR.Core.Abstractions.IUserService.PutAsync(System.String, VPEAR.Core.Wrappers.PutUserRequest)
  nameWithType: IUserService.PutAsync(String, PutUserRequest)
- uid: VPEAR.Core.Abstractions.IUserService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_PutAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IUserService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IUserService.PutAsync
  nameWithType: IUserService.PutAsync
- uid: VPEAR.Core.Abstractions.IUserService.PutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  name: PutLoginAsync(PutLoginRequest)
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_PutLoginAsync_VPEAR_Core_Wrappers_PutLoginRequest_
  commentId: M:VPEAR.Core.Abstractions.IUserService.PutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  fullName: VPEAR.Core.Abstractions.IUserService.PutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  nameWithType: IUserService.PutLoginAsync(PutLoginRequest)
- uid: VPEAR.Core.Abstractions.IUserService.PutLoginAsync*
  name: PutLoginAsync
  href: api/VPEAR.Core.Abstractions.IUserService.html#VPEAR_Core_Abstractions_IUserService_PutLoginAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IUserService.PutLoginAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IUserService.PutLoginAsync
  nameWithType: IUserService.PutLoginAsync
- uid: VPEAR.Core.Abstractions.IWifiService
  name: IWifiService
  href: api/VPEAR.Core.Abstractions.IWifiService.html
  commentId: T:VPEAR.Core.Abstractions.IWifiService
  fullName: VPEAR.Core.Abstractions.IWifiService
  nameWithType: IWifiService
- uid: VPEAR.Core.Abstractions.IWifiService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Core.Abstractions.IWifiService.html#VPEAR_Core_Abstractions_IWifiService_GetAsync_System_Guid_
  commentId: M:VPEAR.Core.Abstractions.IWifiService.GetAsync(System.Guid)
  fullName: VPEAR.Core.Abstractions.IWifiService.GetAsync(System.Guid)
  nameWithType: IWifiService.GetAsync(Guid)
- uid: VPEAR.Core.Abstractions.IWifiService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.Abstractions.IWifiService.html#VPEAR_Core_Abstractions_IWifiService_GetAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IWifiService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IWifiService.GetAsync
  nameWithType: IWifiService.GetAsync
- uid: VPEAR.Core.Abstractions.IWifiService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutWifiRequest)
  name: PutAsync(Guid, PutWifiRequest)
  href: api/VPEAR.Core.Abstractions.IWifiService.html#VPEAR_Core_Abstractions_IWifiService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutWifiRequest_
  commentId: M:VPEAR.Core.Abstractions.IWifiService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutWifiRequest)
  fullName: VPEAR.Core.Abstractions.IWifiService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutWifiRequest)
  nameWithType: IWifiService.PutAsync(Guid, PutWifiRequest)
- uid: VPEAR.Core.Abstractions.IWifiService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Core.Abstractions.IWifiService.html#VPEAR_Core_Abstractions_IWifiService_PutAsync_
  commentId: Overload:VPEAR.Core.Abstractions.IWifiService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Core.Abstractions.IWifiService.PutAsync
  nameWithType: IWifiService.PutAsync
- uid: VPEAR.Core.DeviceClient
  name: DeviceClient
  href: api/VPEAR.Core.DeviceClient.html
  commentId: T:VPEAR.Core.DeviceClient
  fullName: VPEAR.Core.DeviceClient
  nameWithType: DeviceClient
- uid: VPEAR.Core.DeviceClient.#ctor(System.String)
  name: DeviceClient(String)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient__ctor_System_String_
  commentId: M:VPEAR.Core.DeviceClient.#ctor(System.String)
  fullName: VPEAR.Core.DeviceClient.DeviceClient(System.String)
  nameWithType: DeviceClient.DeviceClient(String)
- uid: VPEAR.Core.DeviceClient.#ctor*
  name: DeviceClient
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient__ctor_
  commentId: Overload:VPEAR.Core.DeviceClient.#ctor
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.DeviceClient
  nameWithType: DeviceClient.DeviceClient
- uid: VPEAR.Core.DeviceClient.BaseAddress
  name: BaseAddress
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_BaseAddress
  commentId: P:VPEAR.Core.DeviceClient.BaseAddress
  fullName: VPEAR.Core.DeviceClient.BaseAddress
  nameWithType: DeviceClient.BaseAddress
- uid: VPEAR.Core.DeviceClient.BaseAddress*
  name: BaseAddress
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_BaseAddress_
  commentId: Overload:VPEAR.Core.DeviceClient.BaseAddress
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.BaseAddress
  nameWithType: DeviceClient.BaseAddress
- uid: VPEAR.Core.DeviceClient.Dispose
  name: Dispose()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_Dispose
  commentId: M:VPEAR.Core.DeviceClient.Dispose
  fullName: VPEAR.Core.DeviceClient.Dispose()
  nameWithType: DeviceClient.Dispose()
- uid: VPEAR.Core.DeviceClient.Dispose*
  name: Dispose
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_Dispose_
  commentId: Overload:VPEAR.Core.DeviceClient.Dispose
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.Dispose
  nameWithType: DeviceClient.Dispose
- uid: VPEAR.Core.DeviceClient.Factory
  name: DeviceClient.Factory
  href: api/VPEAR.Core.DeviceClient.Factory.html
  commentId: T:VPEAR.Core.DeviceClient.Factory
  fullName: VPEAR.Core.DeviceClient.Factory
  nameWithType: DeviceClient.Factory
- uid: VPEAR.Core.DeviceClient.GetAsync
  name: GetAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetAsync
  commentId: M:VPEAR.Core.DeviceClient.GetAsync
  fullName: VPEAR.Core.DeviceClient.GetAsync()
  nameWithType: DeviceClient.GetAsync()
- uid: VPEAR.Core.DeviceClient.GetAsync*
  name: GetAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetAsync
  nameWithType: DeviceClient.GetAsync
- uid: VPEAR.Core.DeviceClient.GetDeviceAsync
  name: GetDeviceAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetDeviceAsync
  commentId: M:VPEAR.Core.DeviceClient.GetDeviceAsync
  fullName: VPEAR.Core.DeviceClient.GetDeviceAsync()
  nameWithType: DeviceClient.GetDeviceAsync()
- uid: VPEAR.Core.DeviceClient.GetDeviceAsync*
  name: GetDeviceAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetDeviceAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetDeviceAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetDeviceAsync
  nameWithType: DeviceClient.GetDeviceAsync
- uid: VPEAR.Core.DeviceClient.GetFiltersAsync
  name: GetFiltersAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFiltersAsync
  commentId: M:VPEAR.Core.DeviceClient.GetFiltersAsync
  fullName: VPEAR.Core.DeviceClient.GetFiltersAsync()
  nameWithType: DeviceClient.GetFiltersAsync()
- uid: VPEAR.Core.DeviceClient.GetFiltersAsync*
  name: GetFiltersAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFiltersAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetFiltersAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetFiltersAsync
  nameWithType: DeviceClient.GetFiltersAsync
- uid: VPEAR.Core.DeviceClient.GetFirmwareAsync
  name: GetFirmwareAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFirmwareAsync
  commentId: M:VPEAR.Core.DeviceClient.GetFirmwareAsync
  fullName: VPEAR.Core.DeviceClient.GetFirmwareAsync()
  nameWithType: DeviceClient.GetFirmwareAsync()
- uid: VPEAR.Core.DeviceClient.GetFirmwareAsync*
  name: GetFirmwareAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFirmwareAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetFirmwareAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetFirmwareAsync
  nameWithType: DeviceClient.GetFirmwareAsync
- uid: VPEAR.Core.DeviceClient.GetFramesAsync(System.Nullable{System.Int32})
  name: GetFramesAsync(Nullable<Int32>)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFramesAsync_System_Nullable_System_Int32__
  commentId: M:VPEAR.Core.DeviceClient.GetFramesAsync(System.Nullable{System.Int32})
  name.vb: GetFramesAsync(Nullable(Of Int32))
  fullName: VPEAR.Core.DeviceClient.GetFramesAsync(System.Nullable<System.Int32>)
  fullName.vb: VPEAR.Core.DeviceClient.GetFramesAsync(System.Nullable(Of System.Int32))
  nameWithType: DeviceClient.GetFramesAsync(Nullable<Int32>)
  nameWithType.vb: DeviceClient.GetFramesAsync(Nullable(Of Int32))
- uid: VPEAR.Core.DeviceClient.GetFramesAsync*
  name: GetFramesAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFramesAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetFramesAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetFramesAsync
  nameWithType: DeviceClient.GetFramesAsync
- uid: VPEAR.Core.DeviceClient.GetFrequencyAsync
  name: GetFrequencyAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFrequencyAsync
  commentId: M:VPEAR.Core.DeviceClient.GetFrequencyAsync
  fullName: VPEAR.Core.DeviceClient.GetFrequencyAsync()
  nameWithType: DeviceClient.GetFrequencyAsync()
- uid: VPEAR.Core.DeviceClient.GetFrequencyAsync*
  name: GetFrequencyAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetFrequencyAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetFrequencyAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetFrequencyAsync
  nameWithType: DeviceClient.GetFrequencyAsync
- uid: VPEAR.Core.DeviceClient.GetPowerAsync
  name: GetPowerAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetPowerAsync
  commentId: M:VPEAR.Core.DeviceClient.GetPowerAsync
  fullName: VPEAR.Core.DeviceClient.GetPowerAsync()
  nameWithType: DeviceClient.GetPowerAsync()
- uid: VPEAR.Core.DeviceClient.GetPowerAsync*
  name: GetPowerAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetPowerAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetPowerAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetPowerAsync
  nameWithType: DeviceClient.GetPowerAsync
- uid: VPEAR.Core.DeviceClient.GetRequiredSensorsAsync
  name: GetRequiredSensorsAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetRequiredSensorsAsync
  commentId: M:VPEAR.Core.DeviceClient.GetRequiredSensorsAsync
  fullName: VPEAR.Core.DeviceClient.GetRequiredSensorsAsync()
  nameWithType: DeviceClient.GetRequiredSensorsAsync()
- uid: VPEAR.Core.DeviceClient.GetRequiredSensorsAsync*
  name: GetRequiredSensorsAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetRequiredSensorsAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetRequiredSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetRequiredSensorsAsync
  nameWithType: DeviceClient.GetRequiredSensorsAsync
- uid: VPEAR.Core.DeviceClient.GetSensorsAsync
  name: GetSensorsAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetSensorsAsync
  commentId: M:VPEAR.Core.DeviceClient.GetSensorsAsync
  fullName: VPEAR.Core.DeviceClient.GetSensorsAsync()
  nameWithType: DeviceClient.GetSensorsAsync()
- uid: VPEAR.Core.DeviceClient.GetSensorsAsync*
  name: GetSensorsAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetSensorsAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetSensorsAsync
  nameWithType: DeviceClient.GetSensorsAsync
- uid: VPEAR.Core.DeviceClient.GetSSEAsync
  name: GetSSEAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetSSEAsync
  commentId: M:VPEAR.Core.DeviceClient.GetSSEAsync
  fullName: VPEAR.Core.DeviceClient.GetSSEAsync()
  nameWithType: DeviceClient.GetSSEAsync()
- uid: VPEAR.Core.DeviceClient.GetSSEAsync*
  name: GetSSEAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetSSEAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetSSEAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetSSEAsync
  nameWithType: DeviceClient.GetSSEAsync
- uid: VPEAR.Core.DeviceClient.GetTimeAsync
  name: GetTimeAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetTimeAsync
  commentId: M:VPEAR.Core.DeviceClient.GetTimeAsync
  fullName: VPEAR.Core.DeviceClient.GetTimeAsync()
  nameWithType: DeviceClient.GetTimeAsync()
- uid: VPEAR.Core.DeviceClient.GetTimeAsync*
  name: GetTimeAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetTimeAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetTimeAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetTimeAsync
  nameWithType: DeviceClient.GetTimeAsync
- uid: VPEAR.Core.DeviceClient.GetWifiAsync
  name: GetWifiAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetWifiAsync
  commentId: M:VPEAR.Core.DeviceClient.GetWifiAsync
  fullName: VPEAR.Core.DeviceClient.GetWifiAsync()
  nameWithType: DeviceClient.GetWifiAsync()
- uid: VPEAR.Core.DeviceClient.GetWifiAsync*
  name: GetWifiAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_GetWifiAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.GetWifiAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.GetWifiAsync
  nameWithType: DeviceClient.GetWifiAsync
- uid: VPEAR.Core.DeviceClient.IsReachableAsync
  name: IsReachableAsync()
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_IsReachableAsync
  commentId: M:VPEAR.Core.DeviceClient.IsReachableAsync
  fullName: VPEAR.Core.DeviceClient.IsReachableAsync()
  nameWithType: DeviceClient.IsReachableAsync()
- uid: VPEAR.Core.DeviceClient.IsReachableAsync*
  name: IsReachableAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_IsReachableAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.IsReachableAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.IsReachableAsync
  nameWithType: DeviceClient.IsReachableAsync
- uid: VPEAR.Core.DeviceClient.PutFiltersAsync(System.Boolean,System.Boolean,System.Boolean)
  name: PutFiltersAsync(Boolean, Boolean, Boolean)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutFiltersAsync_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:VPEAR.Core.DeviceClient.PutFiltersAsync(System.Boolean,System.Boolean,System.Boolean)
  fullName: VPEAR.Core.DeviceClient.PutFiltersAsync(System.Boolean, System.Boolean, System.Boolean)
  nameWithType: DeviceClient.PutFiltersAsync(Boolean, Boolean, Boolean)
- uid: VPEAR.Core.DeviceClient.PutFiltersAsync*
  name: PutFiltersAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutFiltersAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.PutFiltersAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.PutFiltersAsync
  nameWithType: DeviceClient.PutFiltersAsync
- uid: VPEAR.Core.DeviceClient.PutFirmwareAsync(System.String,System.String,System.Boolean)
  name: PutFirmwareAsync(String, String, Boolean)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutFirmwareAsync_System_String_System_String_System_Boolean_
  commentId: M:VPEAR.Core.DeviceClient.PutFirmwareAsync(System.String,System.String,System.Boolean)
  fullName: VPEAR.Core.DeviceClient.PutFirmwareAsync(System.String, System.String, System.Boolean)
  nameWithType: DeviceClient.PutFirmwareAsync(String, String, Boolean)
- uid: VPEAR.Core.DeviceClient.PutFirmwareAsync*
  name: PutFirmwareAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutFirmwareAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.PutFirmwareAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.PutFirmwareAsync
  nameWithType: DeviceClient.PutFirmwareAsync
- uid: VPEAR.Core.DeviceClient.PutFrequencyAsync(System.Int32)
  name: PutFrequencyAsync(Int32)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutFrequencyAsync_System_Int32_
  commentId: M:VPEAR.Core.DeviceClient.PutFrequencyAsync(System.Int32)
  fullName: VPEAR.Core.DeviceClient.PutFrequencyAsync(System.Int32)
  nameWithType: DeviceClient.PutFrequencyAsync(Int32)
- uid: VPEAR.Core.DeviceClient.PutFrequencyAsync*
  name: PutFrequencyAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutFrequencyAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.PutFrequencyAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.PutFrequencyAsync
  nameWithType: DeviceClient.PutFrequencyAsync
- uid: VPEAR.Core.DeviceClient.PutRequiredSensorsAsync(System.Int32)
  name: PutRequiredSensorsAsync(Int32)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutRequiredSensorsAsync_System_Int32_
  commentId: M:VPEAR.Core.DeviceClient.PutRequiredSensorsAsync(System.Int32)
  fullName: VPEAR.Core.DeviceClient.PutRequiredSensorsAsync(System.Int32)
  nameWithType: DeviceClient.PutRequiredSensorsAsync(Int32)
- uid: VPEAR.Core.DeviceClient.PutRequiredSensorsAsync*
  name: PutRequiredSensorsAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutRequiredSensorsAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.PutRequiredSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.PutRequiredSensorsAsync
  nameWithType: DeviceClient.PutRequiredSensorsAsync
- uid: VPEAR.Core.DeviceClient.PutWifiAsync(System.String,System.String,System.String)
  name: PutWifiAsync(String, String, String)
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutWifiAsync_System_String_System_String_System_String_
  commentId: M:VPEAR.Core.DeviceClient.PutWifiAsync(System.String,System.String,System.String)
  fullName: VPEAR.Core.DeviceClient.PutWifiAsync(System.String, System.String, System.String)
  nameWithType: DeviceClient.PutWifiAsync(String, String, String)
- uid: VPEAR.Core.DeviceClient.PutWifiAsync*
  name: PutWifiAsync
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_PutWifiAsync_
  commentId: Overload:VPEAR.Core.DeviceClient.PutWifiAsync
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.PutWifiAsync
  nameWithType: DeviceClient.PutWifiAsync
- uid: VPEAR.Core.DeviceClient.ResponseStatusCode
  name: ResponseStatusCode
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_ResponseStatusCode
  commentId: P:VPEAR.Core.DeviceClient.ResponseStatusCode
  fullName: VPEAR.Core.DeviceClient.ResponseStatusCode
  nameWithType: DeviceClient.ResponseStatusCode
- uid: VPEAR.Core.DeviceClient.ResponseStatusCode*
  name: ResponseStatusCode
  href: api/VPEAR.Core.DeviceClient.html#VPEAR_Core_DeviceClient_ResponseStatusCode_
  commentId: Overload:VPEAR.Core.DeviceClient.ResponseStatusCode
  isSpec: "True"
  fullName: VPEAR.Core.DeviceClient.ResponseStatusCode
  nameWithType: DeviceClient.ResponseStatusCode
- uid: VPEAR.Core.DeviceStatus
  name: DeviceStatus
  href: api/VPEAR.Core.DeviceStatus.html
  commentId: T:VPEAR.Core.DeviceStatus
  fullName: VPEAR.Core.DeviceStatus
  nameWithType: DeviceStatus
- uid: VPEAR.Core.DeviceStatus.Archived
  name: Archived
  href: api/VPEAR.Core.DeviceStatus.html#VPEAR_Core_DeviceStatus_Archived
  commentId: F:VPEAR.Core.DeviceStatus.Archived
  fullName: VPEAR.Core.DeviceStatus.Archived
  nameWithType: DeviceStatus.Archived
- uid: VPEAR.Core.DeviceStatus.None
  name: None
  href: api/VPEAR.Core.DeviceStatus.html#VPEAR_Core_DeviceStatus_None
  commentId: F:VPEAR.Core.DeviceStatus.None
  fullName: VPEAR.Core.DeviceStatus.None
  nameWithType: DeviceStatus.None
- uid: VPEAR.Core.DeviceStatus.NotReachable
  name: NotReachable
  href: api/VPEAR.Core.DeviceStatus.html#VPEAR_Core_DeviceStatus_NotReachable
  commentId: F:VPEAR.Core.DeviceStatus.NotReachable
  fullName: VPEAR.Core.DeviceStatus.NotReachable
  nameWithType: DeviceStatus.NotReachable
- uid: VPEAR.Core.DeviceStatus.Recording
  name: Recording
  href: api/VPEAR.Core.DeviceStatus.html#VPEAR_Core_DeviceStatus_Recording
  commentId: F:VPEAR.Core.DeviceStatus.Recording
  fullName: VPEAR.Core.DeviceStatus.Recording
  nameWithType: DeviceStatus.Recording
- uid: VPEAR.Core.DeviceStatus.Stopped
  name: Stopped
  href: api/VPEAR.Core.DeviceStatus.html#VPEAR_Core_DeviceStatus_Stopped
  commentId: F:VPEAR.Core.DeviceStatus.Stopped
  fullName: VPEAR.Core.DeviceStatus.Stopped
  nameWithType: DeviceStatus.Stopped
- uid: VPEAR.Core.Extensions
  name: Extensions
  href: api/VPEAR.Core.Extensions.html
  commentId: T:VPEAR.Core.Extensions
  fullName: VPEAR.Core.Extensions
  nameWithType: Extensions
- uid: VPEAR.Core.Extensions.Clone*
  name: Clone
  href: api/VPEAR.Core.Extensions.html#VPEAR_Core_Extensions_Clone_
  commentId: Overload:VPEAR.Core.Extensions.Clone
  isSpec: "True"
  fullName: VPEAR.Core.Extensions.Clone
  nameWithType: Extensions.Clone
- uid: VPEAR.Core.Extensions.Clone``1(``0)
  name: Clone<T>(T)
  href: api/VPEAR.Core.Extensions.html#VPEAR_Core_Extensions_Clone__1___0_
  commentId: M:VPEAR.Core.Extensions.Clone``1(``0)
  name.vb: Clone(Of T)(T)
  fullName: VPEAR.Core.Extensions.Clone<T>(T)
  fullName.vb: VPEAR.Core.Extensions.Clone(Of T)(T)
  nameWithType: Extensions.Clone<T>(T)
  nameWithType.vb: Extensions.Clone(Of T)(T)
- uid: VPEAR.Core.Extensions.GetBroadcastAddress(System.Net.IPAddress,System.Net.IPAddress)
  name: GetBroadcastAddress(IPAddress, IPAddress)
  href: api/VPEAR.Core.Extensions.html#VPEAR_Core_Extensions_GetBroadcastAddress_System_Net_IPAddress_System_Net_IPAddress_
  commentId: M:VPEAR.Core.Extensions.GetBroadcastAddress(System.Net.IPAddress,System.Net.IPAddress)
  fullName: VPEAR.Core.Extensions.GetBroadcastAddress(System.Net.IPAddress, System.Net.IPAddress)
  nameWithType: Extensions.GetBroadcastAddress(IPAddress, IPAddress)
- uid: VPEAR.Core.Extensions.GetBroadcastAddress*
  name: GetBroadcastAddress
  href: api/VPEAR.Core.Extensions.html#VPEAR_Core_Extensions_GetBroadcastAddress_
  commentId: Overload:VPEAR.Core.Extensions.GetBroadcastAddress
  isSpec: "True"
  fullName: VPEAR.Core.Extensions.GetBroadcastAddress
  nameWithType: Extensions.GetBroadcastAddress
- uid: VPEAR.Core.Extensions.GetNetworkAddress(System.Net.IPAddress,System.Net.IPAddress)
  name: GetNetworkAddress(IPAddress, IPAddress)
  href: api/VPEAR.Core.Extensions.html#VPEAR_Core_Extensions_GetNetworkAddress_System_Net_IPAddress_System_Net_IPAddress_
  commentId: M:VPEAR.Core.Extensions.GetNetworkAddress(System.Net.IPAddress,System.Net.IPAddress)
  fullName: VPEAR.Core.Extensions.GetNetworkAddress(System.Net.IPAddress, System.Net.IPAddress)
  nameWithType: Extensions.GetNetworkAddress(IPAddress, IPAddress)
- uid: VPEAR.Core.Extensions.GetNetworkAddress*
  name: GetNetworkAddress
  href: api/VPEAR.Core.Extensions.html#VPEAR_Core_Extensions_GetNetworkAddress_
  commentId: Overload:VPEAR.Core.Extensions.GetNetworkAddress
  isSpec: "True"
  fullName: VPEAR.Core.Extensions.GetNetworkAddress
  nameWithType: Extensions.GetNetworkAddress
- uid: VPEAR.Core.Extensions.GetSubnetMask(System.Net.IPAddress)
  name: GetSubnetMask(IPAddress)
  href: api/VPEAR.Core.Extensions.html#VPEAR_Core_Extensions_GetSubnetMask_System_Net_IPAddress_
  commentId: M:VPEAR.Core.Extensions.GetSubnetMask(System.Net.IPAddress)
  fullName: VPEAR.Core.Extensions.GetSubnetMask(System.Net.IPAddress)
  nameWithType: Extensions.GetSubnetMask(IPAddress)
- uid: VPEAR.Core.Extensions.GetSubnetMask*
  name: GetSubnetMask
  href: api/VPEAR.Core.Extensions.html#VPEAR_Core_Extensions_GetSubnetMask_
  commentId: Overload:VPEAR.Core.Extensions.GetSubnetMask
  isSpec: "True"
  fullName: VPEAR.Core.Extensions.GetSubnetMask
  nameWithType: Extensions.GetSubnetMask
- uid: VPEAR.Core.Extensions.IsIPv4(System.Net.IPAddress)
  name: IsIPv4(IPAddress)
  href: api/VPEAR.Core.Extensions.html#VPEAR_Core_Extensions_IsIPv4_System_Net_IPAddress_
  commentId: M:VPEAR.Core.Extensions.IsIPv4(System.Net.IPAddress)
  fullName: VPEAR.Core.Extensions.IsIPv4(System.Net.IPAddress)
  nameWithType: Extensions.IsIPv4(IPAddress)
- uid: VPEAR.Core.Extensions.IsIPv4*
  name: IsIPv4
  href: api/VPEAR.Core.Extensions.html#VPEAR_Core_Extensions_IsIPv4_
  commentId: Overload:VPEAR.Core.Extensions.IsIPv4
  isSpec: "True"
  fullName: VPEAR.Core.Extensions.IsIPv4
  nameWithType: Extensions.IsIPv4
- uid: VPEAR.Core.Models
  name: VPEAR.Core.Models
  href: api/VPEAR.Core.Models.html
  commentId: N:VPEAR.Core.Models
  fullName: VPEAR.Core.Models
  nameWithType: VPEAR.Core.Models
- uid: VPEAR.Core.Models.Device
  name: Device
  href: api/VPEAR.Core.Models.Device.html
  commentId: T:VPEAR.Core.Models.Device
  fullName: VPEAR.Core.Models.Device
  nameWithType: Device
- uid: VPEAR.Core.Models.Device.Address
  name: Address
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Address
  commentId: P:VPEAR.Core.Models.Device.Address
  fullName: VPEAR.Core.Models.Device.Address
  nameWithType: Device.Address
- uid: VPEAR.Core.Models.Device.Address*
  name: Address
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Address_
  commentId: Overload:VPEAR.Core.Models.Device.Address
  isSpec: "True"
  fullName: VPEAR.Core.Models.Device.Address
  nameWithType: Device.Address
- uid: VPEAR.Core.Models.Device.Class
  name: Class
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Class
  commentId: P:VPEAR.Core.Models.Device.Class
  fullName: VPEAR.Core.Models.Device.Class
  nameWithType: Device.Class
- uid: VPEAR.Core.Models.Device.Class*
  name: Class
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Class_
  commentId: Overload:VPEAR.Core.Models.Device.Class
  isSpec: "True"
  fullName: VPEAR.Core.Models.Device.Class
  nameWithType: Device.Class
- uid: VPEAR.Core.Models.Device.DisplayName
  name: DisplayName
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_DisplayName
  commentId: P:VPEAR.Core.Models.Device.DisplayName
  fullName: VPEAR.Core.Models.Device.DisplayName
  nameWithType: Device.DisplayName
- uid: VPEAR.Core.Models.Device.DisplayName*
  name: DisplayName
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_DisplayName_
  commentId: Overload:VPEAR.Core.Models.Device.DisplayName
  isSpec: "True"
  fullName: VPEAR.Core.Models.Device.DisplayName
  nameWithType: Device.DisplayName
- uid: VPEAR.Core.Models.Device.Filters
  name: Filters
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Filters
  commentId: P:VPEAR.Core.Models.Device.Filters
  fullName: VPEAR.Core.Models.Device.Filters
  nameWithType: Device.Filters
- uid: VPEAR.Core.Models.Device.Filters*
  name: Filters
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Filters_
  commentId: Overload:VPEAR.Core.Models.Device.Filters
  isSpec: "True"
  fullName: VPEAR.Core.Models.Device.Filters
  nameWithType: Device.Filters
- uid: VPEAR.Core.Models.Device.Firmware
  name: Firmware
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Firmware
  commentId: P:VPEAR.Core.Models.Device.Firmware
  fullName: VPEAR.Core.Models.Device.Firmware
  nameWithType: Device.Firmware
- uid: VPEAR.Core.Models.Device.Firmware*
  name: Firmware
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Firmware_
  commentId: Overload:VPEAR.Core.Models.Device.Firmware
  isSpec: "True"
  fullName: VPEAR.Core.Models.Device.Firmware
  nameWithType: Device.Firmware
- uid: VPEAR.Core.Models.Device.Frames
  name: Frames
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Frames
  commentId: P:VPEAR.Core.Models.Device.Frames
  fullName: VPEAR.Core.Models.Device.Frames
  nameWithType: Device.Frames
- uid: VPEAR.Core.Models.Device.Frames*
  name: Frames
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Frames_
  commentId: Overload:VPEAR.Core.Models.Device.Frames
  isSpec: "True"
  fullName: VPEAR.Core.Models.Device.Frames
  nameWithType: Device.Frames
- uid: VPEAR.Core.Models.Device.Frequency
  name: Frequency
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Frequency
  commentId: P:VPEAR.Core.Models.Device.Frequency
  fullName: VPEAR.Core.Models.Device.Frequency
  nameWithType: Device.Frequency
- uid: VPEAR.Core.Models.Device.Frequency*
  name: Frequency
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Frequency_
  commentId: Overload:VPEAR.Core.Models.Device.Frequency
  isSpec: "True"
  fullName: VPEAR.Core.Models.Device.Frequency
  nameWithType: Device.Frequency
- uid: VPEAR.Core.Models.Device.Name
  name: Name
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Name
  commentId: P:VPEAR.Core.Models.Device.Name
  fullName: VPEAR.Core.Models.Device.Name
  nameWithType: Device.Name
- uid: VPEAR.Core.Models.Device.Name*
  name: Name
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Name_
  commentId: Overload:VPEAR.Core.Models.Device.Name
  isSpec: "True"
  fullName: VPEAR.Core.Models.Device.Name
  nameWithType: Device.Name
- uid: VPEAR.Core.Models.Device.RequiredSensors
  name: RequiredSensors
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_RequiredSensors
  commentId: P:VPEAR.Core.Models.Device.RequiredSensors
  fullName: VPEAR.Core.Models.Device.RequiredSensors
  nameWithType: Device.RequiredSensors
- uid: VPEAR.Core.Models.Device.RequiredSensors*
  name: RequiredSensors
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_RequiredSensors_
  commentId: Overload:VPEAR.Core.Models.Device.RequiredSensors
  isSpec: "True"
  fullName: VPEAR.Core.Models.Device.RequiredSensors
  nameWithType: Device.RequiredSensors
- uid: VPEAR.Core.Models.Device.Sensors
  name: Sensors
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Sensors
  commentId: P:VPEAR.Core.Models.Device.Sensors
  fullName: VPEAR.Core.Models.Device.Sensors
  nameWithType: Device.Sensors
- uid: VPEAR.Core.Models.Device.Sensors*
  name: Sensors
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Sensors_
  commentId: Overload:VPEAR.Core.Models.Device.Sensors
  isSpec: "True"
  fullName: VPEAR.Core.Models.Device.Sensors
  nameWithType: Device.Sensors
- uid: VPEAR.Core.Models.Device.Status
  name: Status
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Status
  commentId: P:VPEAR.Core.Models.Device.Status
  fullName: VPEAR.Core.Models.Device.Status
  nameWithType: Device.Status
- uid: VPEAR.Core.Models.Device.Status*
  name: Status
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Status_
  commentId: Overload:VPEAR.Core.Models.Device.Status
  isSpec: "True"
  fullName: VPEAR.Core.Models.Device.Status
  nameWithType: Device.Status
- uid: VPEAR.Core.Models.Device.Wifi
  name: Wifi
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Wifi
  commentId: P:VPEAR.Core.Models.Device.Wifi
  fullName: VPEAR.Core.Models.Device.Wifi
  nameWithType: Device.Wifi
- uid: VPEAR.Core.Models.Device.Wifi*
  name: Wifi
  href: api/VPEAR.Core.Models.Device.html#VPEAR_Core_Models_Device_Wifi_
  commentId: Overload:VPEAR.Core.Models.Device.Wifi
  isSpec: "True"
  fullName: VPEAR.Core.Models.Device.Wifi
  nameWithType: Device.Wifi
- uid: VPEAR.Core.Models.Filter
  name: Filter
  href: api/VPEAR.Core.Models.Filter.html
  commentId: T:VPEAR.Core.Models.Filter
  fullName: VPEAR.Core.Models.Filter
  nameWithType: Filter
- uid: VPEAR.Core.Models.Filter.Device
  name: Device
  href: api/VPEAR.Core.Models.Filter.html#VPEAR_Core_Models_Filter_Device
  commentId: P:VPEAR.Core.Models.Filter.Device
  fullName: VPEAR.Core.Models.Filter.Device
  nameWithType: Filter.Device
- uid: VPEAR.Core.Models.Filter.Device*
  name: Device
  href: api/VPEAR.Core.Models.Filter.html#VPEAR_Core_Models_Filter_Device_
  commentId: Overload:VPEAR.Core.Models.Filter.Device
  isSpec: "True"
  fullName: VPEAR.Core.Models.Filter.Device
  nameWithType: Filter.Device
- uid: VPEAR.Core.Models.Filter.DeviceForeignKey
  name: DeviceForeignKey
  href: api/VPEAR.Core.Models.Filter.html#VPEAR_Core_Models_Filter_DeviceForeignKey
  commentId: P:VPEAR.Core.Models.Filter.DeviceForeignKey
  fullName: VPEAR.Core.Models.Filter.DeviceForeignKey
  nameWithType: Filter.DeviceForeignKey
- uid: VPEAR.Core.Models.Filter.DeviceForeignKey*
  name: DeviceForeignKey
  href: api/VPEAR.Core.Models.Filter.html#VPEAR_Core_Models_Filter_DeviceForeignKey_
  commentId: Overload:VPEAR.Core.Models.Filter.DeviceForeignKey
  isSpec: "True"
  fullName: VPEAR.Core.Models.Filter.DeviceForeignKey
  nameWithType: Filter.DeviceForeignKey
- uid: VPEAR.Core.Models.Filter.Noise
  name: Noise
  href: api/VPEAR.Core.Models.Filter.html#VPEAR_Core_Models_Filter_Noise
  commentId: P:VPEAR.Core.Models.Filter.Noise
  fullName: VPEAR.Core.Models.Filter.Noise
  nameWithType: Filter.Noise
- uid: VPEAR.Core.Models.Filter.Noise*
  name: Noise
  href: api/VPEAR.Core.Models.Filter.html#VPEAR_Core_Models_Filter_Noise_
  commentId: Overload:VPEAR.Core.Models.Filter.Noise
  isSpec: "True"
  fullName: VPEAR.Core.Models.Filter.Noise
  nameWithType: Filter.Noise
- uid: VPEAR.Core.Models.Filter.Smooth
  name: Smooth
  href: api/VPEAR.Core.Models.Filter.html#VPEAR_Core_Models_Filter_Smooth
  commentId: P:VPEAR.Core.Models.Filter.Smooth
  fullName: VPEAR.Core.Models.Filter.Smooth
  nameWithType: Filter.Smooth
- uid: VPEAR.Core.Models.Filter.Smooth*
  name: Smooth
  href: api/VPEAR.Core.Models.Filter.html#VPEAR_Core_Models_Filter_Smooth_
  commentId: Overload:VPEAR.Core.Models.Filter.Smooth
  isSpec: "True"
  fullName: VPEAR.Core.Models.Filter.Smooth
  nameWithType: Filter.Smooth
- uid: VPEAR.Core.Models.Filter.Spot
  name: Spot
  href: api/VPEAR.Core.Models.Filter.html#VPEAR_Core_Models_Filter_Spot
  commentId: P:VPEAR.Core.Models.Filter.Spot
  fullName: VPEAR.Core.Models.Filter.Spot
  nameWithType: Filter.Spot
- uid: VPEAR.Core.Models.Filter.Spot*
  name: Spot
  href: api/VPEAR.Core.Models.Filter.html#VPEAR_Core_Models_Filter_Spot_
  commentId: Overload:VPEAR.Core.Models.Filter.Spot
  isSpec: "True"
  fullName: VPEAR.Core.Models.Filter.Spot
  nameWithType: Filter.Spot
- uid: VPEAR.Core.Models.Firmware
  name: Firmware
  href: api/VPEAR.Core.Models.Firmware.html
  commentId: T:VPEAR.Core.Models.Firmware
  fullName: VPEAR.Core.Models.Firmware
  nameWithType: Firmware
- uid: VPEAR.Core.Models.Firmware.Device
  name: Device
  href: api/VPEAR.Core.Models.Firmware.html#VPEAR_Core_Models_Firmware_Device
  commentId: P:VPEAR.Core.Models.Firmware.Device
  fullName: VPEAR.Core.Models.Firmware.Device
  nameWithType: Firmware.Device
- uid: VPEAR.Core.Models.Firmware.Device*
  name: Device
  href: api/VPEAR.Core.Models.Firmware.html#VPEAR_Core_Models_Firmware_Device_
  commentId: Overload:VPEAR.Core.Models.Firmware.Device
  isSpec: "True"
  fullName: VPEAR.Core.Models.Firmware.Device
  nameWithType: Firmware.Device
- uid: VPEAR.Core.Models.Firmware.DeviceForeignKey
  name: DeviceForeignKey
  href: api/VPEAR.Core.Models.Firmware.html#VPEAR_Core_Models_Firmware_DeviceForeignKey
  commentId: P:VPEAR.Core.Models.Firmware.DeviceForeignKey
  fullName: VPEAR.Core.Models.Firmware.DeviceForeignKey
  nameWithType: Firmware.DeviceForeignKey
- uid: VPEAR.Core.Models.Firmware.DeviceForeignKey*
  name: DeviceForeignKey
  href: api/VPEAR.Core.Models.Firmware.html#VPEAR_Core_Models_Firmware_DeviceForeignKey_
  commentId: Overload:VPEAR.Core.Models.Firmware.DeviceForeignKey
  isSpec: "True"
  fullName: VPEAR.Core.Models.Firmware.DeviceForeignKey
  nameWithType: Firmware.DeviceForeignKey
- uid: VPEAR.Core.Models.Firmware.Source
  name: Source
  href: api/VPEAR.Core.Models.Firmware.html#VPEAR_Core_Models_Firmware_Source
  commentId: P:VPEAR.Core.Models.Firmware.Source
  fullName: VPEAR.Core.Models.Firmware.Source
  nameWithType: Firmware.Source
- uid: VPEAR.Core.Models.Firmware.Source*
  name: Source
  href: api/VPEAR.Core.Models.Firmware.html#VPEAR_Core_Models_Firmware_Source_
  commentId: Overload:VPEAR.Core.Models.Firmware.Source
  isSpec: "True"
  fullName: VPEAR.Core.Models.Firmware.Source
  nameWithType: Firmware.Source
- uid: VPEAR.Core.Models.Firmware.Upgrade
  name: Upgrade
  href: api/VPEAR.Core.Models.Firmware.html#VPEAR_Core_Models_Firmware_Upgrade
  commentId: P:VPEAR.Core.Models.Firmware.Upgrade
  fullName: VPEAR.Core.Models.Firmware.Upgrade
  nameWithType: Firmware.Upgrade
- uid: VPEAR.Core.Models.Firmware.Upgrade*
  name: Upgrade
  href: api/VPEAR.Core.Models.Firmware.html#VPEAR_Core_Models_Firmware_Upgrade_
  commentId: Overload:VPEAR.Core.Models.Firmware.Upgrade
  isSpec: "True"
  fullName: VPEAR.Core.Models.Firmware.Upgrade
  nameWithType: Firmware.Upgrade
- uid: VPEAR.Core.Models.Firmware.Version
  name: Version
  href: api/VPEAR.Core.Models.Firmware.html#VPEAR_Core_Models_Firmware_Version
  commentId: P:VPEAR.Core.Models.Firmware.Version
  fullName: VPEAR.Core.Models.Firmware.Version
  nameWithType: Firmware.Version
- uid: VPEAR.Core.Models.Firmware.Version*
  name: Version
  href: api/VPEAR.Core.Models.Firmware.html#VPEAR_Core_Models_Firmware_Version_
  commentId: Overload:VPEAR.Core.Models.Firmware.Version
  isSpec: "True"
  fullName: VPEAR.Core.Models.Firmware.Version
  nameWithType: Firmware.Version
- uid: VPEAR.Core.Models.Frame
  name: Frame
  href: api/VPEAR.Core.Models.Frame.html
  commentId: T:VPEAR.Core.Models.Frame
  fullName: VPEAR.Core.Models.Frame
  nameWithType: Frame
- uid: VPEAR.Core.Models.Frame.Device
  name: Device
  href: api/VPEAR.Core.Models.Frame.html#VPEAR_Core_Models_Frame_Device
  commentId: P:VPEAR.Core.Models.Frame.Device
  fullName: VPEAR.Core.Models.Frame.Device
  nameWithType: Frame.Device
- uid: VPEAR.Core.Models.Frame.Device*
  name: Device
  href: api/VPEAR.Core.Models.Frame.html#VPEAR_Core_Models_Frame_Device_
  commentId: Overload:VPEAR.Core.Models.Frame.Device
  isSpec: "True"
  fullName: VPEAR.Core.Models.Frame.Device
  nameWithType: Frame.Device
- uid: VPEAR.Core.Models.Frame.DeviceForeignKey
  name: DeviceForeignKey
  href: api/VPEAR.Core.Models.Frame.html#VPEAR_Core_Models_Frame_DeviceForeignKey
  commentId: P:VPEAR.Core.Models.Frame.DeviceForeignKey
  fullName: VPEAR.Core.Models.Frame.DeviceForeignKey
  nameWithType: Frame.DeviceForeignKey
- uid: VPEAR.Core.Models.Frame.DeviceForeignKey*
  name: DeviceForeignKey
  href: api/VPEAR.Core.Models.Frame.html#VPEAR_Core_Models_Frame_DeviceForeignKey_
  commentId: Overload:VPEAR.Core.Models.Frame.DeviceForeignKey
  isSpec: "True"
  fullName: VPEAR.Core.Models.Frame.DeviceForeignKey
  nameWithType: Frame.DeviceForeignKey
- uid: VPEAR.Core.Models.Frame.Index
  name: Index
  href: api/VPEAR.Core.Models.Frame.html#VPEAR_Core_Models_Frame_Index
  commentId: P:VPEAR.Core.Models.Frame.Index
  fullName: VPEAR.Core.Models.Frame.Index
  nameWithType: Frame.Index
- uid: VPEAR.Core.Models.Frame.Index*
  name: Index
  href: api/VPEAR.Core.Models.Frame.html#VPEAR_Core_Models_Frame_Index_
  commentId: Overload:VPEAR.Core.Models.Frame.Index
  isSpec: "True"
  fullName: VPEAR.Core.Models.Frame.Index
  nameWithType: Frame.Index
- uid: VPEAR.Core.Models.Frame.Readings
  name: Readings
  href: api/VPEAR.Core.Models.Frame.html#VPEAR_Core_Models_Frame_Readings
  commentId: P:VPEAR.Core.Models.Frame.Readings
  fullName: VPEAR.Core.Models.Frame.Readings
  nameWithType: Frame.Readings
- uid: VPEAR.Core.Models.Frame.Readings*
  name: Readings
  href: api/VPEAR.Core.Models.Frame.html#VPEAR_Core_Models_Frame_Readings_
  commentId: Overload:VPEAR.Core.Models.Frame.Readings
  isSpec: "True"
  fullName: VPEAR.Core.Models.Frame.Readings
  nameWithType: Frame.Readings
- uid: VPEAR.Core.Models.Frame.Time
  name: Time
  href: api/VPEAR.Core.Models.Frame.html#VPEAR_Core_Models_Frame_Time
  commentId: P:VPEAR.Core.Models.Frame.Time
  fullName: VPEAR.Core.Models.Frame.Time
  nameWithType: Frame.Time
- uid: VPEAR.Core.Models.Frame.Time*
  name: Time
  href: api/VPEAR.Core.Models.Frame.html#VPEAR_Core_Models_Frame_Time_
  commentId: Overload:VPEAR.Core.Models.Frame.Time
  isSpec: "True"
  fullName: VPEAR.Core.Models.Frame.Time
  nameWithType: Frame.Time
- uid: VPEAR.Core.Models.Sensor
  name: Sensor
  href: api/VPEAR.Core.Models.Sensor.html
  commentId: T:VPEAR.Core.Models.Sensor
  fullName: VPEAR.Core.Models.Sensor
  nameWithType: Sensor
- uid: VPEAR.Core.Models.Sensor.Columns
  name: Columns
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Columns
  commentId: P:VPEAR.Core.Models.Sensor.Columns
  fullName: VPEAR.Core.Models.Sensor.Columns
  nameWithType: Sensor.Columns
- uid: VPEAR.Core.Models.Sensor.Columns*
  name: Columns
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Columns_
  commentId: Overload:VPEAR.Core.Models.Sensor.Columns
  isSpec: "True"
  fullName: VPEAR.Core.Models.Sensor.Columns
  nameWithType: Sensor.Columns
- uid: VPEAR.Core.Models.Sensor.Device
  name: Device
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Device
  commentId: P:VPEAR.Core.Models.Sensor.Device
  fullName: VPEAR.Core.Models.Sensor.Device
  nameWithType: Sensor.Device
- uid: VPEAR.Core.Models.Sensor.Device*
  name: Device
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Device_
  commentId: Overload:VPEAR.Core.Models.Sensor.Device
  isSpec: "True"
  fullName: VPEAR.Core.Models.Sensor.Device
  nameWithType: Sensor.Device
- uid: VPEAR.Core.Models.Sensor.DeviceForeignKey
  name: DeviceForeignKey
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_DeviceForeignKey
  commentId: P:VPEAR.Core.Models.Sensor.DeviceForeignKey
  fullName: VPEAR.Core.Models.Sensor.DeviceForeignKey
  nameWithType: Sensor.DeviceForeignKey
- uid: VPEAR.Core.Models.Sensor.DeviceForeignKey*
  name: DeviceForeignKey
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_DeviceForeignKey_
  commentId: Overload:VPEAR.Core.Models.Sensor.DeviceForeignKey
  isSpec: "True"
  fullName: VPEAR.Core.Models.Sensor.DeviceForeignKey
  nameWithType: Sensor.DeviceForeignKey
- uid: VPEAR.Core.Models.Sensor.Height
  name: Height
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Height
  commentId: P:VPEAR.Core.Models.Sensor.Height
  fullName: VPEAR.Core.Models.Sensor.Height
  nameWithType: Sensor.Height
- uid: VPEAR.Core.Models.Sensor.Height*
  name: Height
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Height_
  commentId: Overload:VPEAR.Core.Models.Sensor.Height
  isSpec: "True"
  fullName: VPEAR.Core.Models.Sensor.Height
  nameWithType: Sensor.Height
- uid: VPEAR.Core.Models.Sensor.Maximum
  name: Maximum
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Maximum
  commentId: P:VPEAR.Core.Models.Sensor.Maximum
  fullName: VPEAR.Core.Models.Sensor.Maximum
  nameWithType: Sensor.Maximum
- uid: VPEAR.Core.Models.Sensor.Maximum*
  name: Maximum
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Maximum_
  commentId: Overload:VPEAR.Core.Models.Sensor.Maximum
  isSpec: "True"
  fullName: VPEAR.Core.Models.Sensor.Maximum
  nameWithType: Sensor.Maximum
- uid: VPEAR.Core.Models.Sensor.Minimum
  name: Minimum
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Minimum
  commentId: P:VPEAR.Core.Models.Sensor.Minimum
  fullName: VPEAR.Core.Models.Sensor.Minimum
  nameWithType: Sensor.Minimum
- uid: VPEAR.Core.Models.Sensor.Minimum*
  name: Minimum
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Minimum_
  commentId: Overload:VPEAR.Core.Models.Sensor.Minimum
  isSpec: "True"
  fullName: VPEAR.Core.Models.Sensor.Minimum
  nameWithType: Sensor.Minimum
- uid: VPEAR.Core.Models.Sensor.Name
  name: Name
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Name
  commentId: P:VPEAR.Core.Models.Sensor.Name
  fullName: VPEAR.Core.Models.Sensor.Name
  nameWithType: Sensor.Name
- uid: VPEAR.Core.Models.Sensor.Name*
  name: Name
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Name_
  commentId: Overload:VPEAR.Core.Models.Sensor.Name
  isSpec: "True"
  fullName: VPEAR.Core.Models.Sensor.Name
  nameWithType: Sensor.Name
- uid: VPEAR.Core.Models.Sensor.Rows
  name: Rows
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Rows
  commentId: P:VPEAR.Core.Models.Sensor.Rows
  fullName: VPEAR.Core.Models.Sensor.Rows
  nameWithType: Sensor.Rows
- uid: VPEAR.Core.Models.Sensor.Rows*
  name: Rows
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Rows_
  commentId: Overload:VPEAR.Core.Models.Sensor.Rows
  isSpec: "True"
  fullName: VPEAR.Core.Models.Sensor.Rows
  nameWithType: Sensor.Rows
- uid: VPEAR.Core.Models.Sensor.Units
  name: Units
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Units
  commentId: P:VPEAR.Core.Models.Sensor.Units
  fullName: VPEAR.Core.Models.Sensor.Units
  nameWithType: Sensor.Units
- uid: VPEAR.Core.Models.Sensor.Units*
  name: Units
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Units_
  commentId: Overload:VPEAR.Core.Models.Sensor.Units
  isSpec: "True"
  fullName: VPEAR.Core.Models.Sensor.Units
  nameWithType: Sensor.Units
- uid: VPEAR.Core.Models.Sensor.Width
  name: Width
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Width
  commentId: P:VPEAR.Core.Models.Sensor.Width
  fullName: VPEAR.Core.Models.Sensor.Width
  nameWithType: Sensor.Width
- uid: VPEAR.Core.Models.Sensor.Width*
  name: Width
  href: api/VPEAR.Core.Models.Sensor.html#VPEAR_Core_Models_Sensor_Width_
  commentId: Overload:VPEAR.Core.Models.Sensor.Width
  isSpec: "True"
  fullName: VPEAR.Core.Models.Sensor.Width
  nameWithType: Sensor.Width
- uid: VPEAR.Core.Models.Wifi
  name: Wifi
  href: api/VPEAR.Core.Models.Wifi.html
  commentId: T:VPEAR.Core.Models.Wifi
  fullName: VPEAR.Core.Models.Wifi
  nameWithType: Wifi
- uid: VPEAR.Core.Models.Wifi.Device
  name: Device
  href: api/VPEAR.Core.Models.Wifi.html#VPEAR_Core_Models_Wifi_Device
  commentId: P:VPEAR.Core.Models.Wifi.Device
  fullName: VPEAR.Core.Models.Wifi.Device
  nameWithType: Wifi.Device
- uid: VPEAR.Core.Models.Wifi.Device*
  name: Device
  href: api/VPEAR.Core.Models.Wifi.html#VPEAR_Core_Models_Wifi_Device_
  commentId: Overload:VPEAR.Core.Models.Wifi.Device
  isSpec: "True"
  fullName: VPEAR.Core.Models.Wifi.Device
  nameWithType: Wifi.Device
- uid: VPEAR.Core.Models.Wifi.DeviceForeignKey
  name: DeviceForeignKey
  href: api/VPEAR.Core.Models.Wifi.html#VPEAR_Core_Models_Wifi_DeviceForeignKey
  commentId: P:VPEAR.Core.Models.Wifi.DeviceForeignKey
  fullName: VPEAR.Core.Models.Wifi.DeviceForeignKey
  nameWithType: Wifi.DeviceForeignKey
- uid: VPEAR.Core.Models.Wifi.DeviceForeignKey*
  name: DeviceForeignKey
  href: api/VPEAR.Core.Models.Wifi.html#VPEAR_Core_Models_Wifi_DeviceForeignKey_
  commentId: Overload:VPEAR.Core.Models.Wifi.DeviceForeignKey
  isSpec: "True"
  fullName: VPEAR.Core.Models.Wifi.DeviceForeignKey
  nameWithType: Wifi.DeviceForeignKey
- uid: VPEAR.Core.Models.Wifi.Mode
  name: Mode
  href: api/VPEAR.Core.Models.Wifi.html#VPEAR_Core_Models_Wifi_Mode
  commentId: P:VPEAR.Core.Models.Wifi.Mode
  fullName: VPEAR.Core.Models.Wifi.Mode
  nameWithType: Wifi.Mode
- uid: VPEAR.Core.Models.Wifi.Mode*
  name: Mode
  href: api/VPEAR.Core.Models.Wifi.html#VPEAR_Core_Models_Wifi_Mode_
  commentId: Overload:VPEAR.Core.Models.Wifi.Mode
  isSpec: "True"
  fullName: VPEAR.Core.Models.Wifi.Mode
  nameWithType: Wifi.Mode
- uid: VPEAR.Core.Models.Wifi.Neighbors
  name: Neighbors
  href: api/VPEAR.Core.Models.Wifi.html#VPEAR_Core_Models_Wifi_Neighbors
  commentId: P:VPEAR.Core.Models.Wifi.Neighbors
  fullName: VPEAR.Core.Models.Wifi.Neighbors
  nameWithType: Wifi.Neighbors
- uid: VPEAR.Core.Models.Wifi.Neighbors*
  name: Neighbors
  href: api/VPEAR.Core.Models.Wifi.html#VPEAR_Core_Models_Wifi_Neighbors_
  commentId: Overload:VPEAR.Core.Models.Wifi.Neighbors
  isSpec: "True"
  fullName: VPEAR.Core.Models.Wifi.Neighbors
  nameWithType: Wifi.Neighbors
- uid: VPEAR.Core.Models.Wifi.Ssid
  name: Ssid
  href: api/VPEAR.Core.Models.Wifi.html#VPEAR_Core_Models_Wifi_Ssid
  commentId: P:VPEAR.Core.Models.Wifi.Ssid
  fullName: VPEAR.Core.Models.Wifi.Ssid
  nameWithType: Wifi.Ssid
- uid: VPEAR.Core.Models.Wifi.Ssid*
  name: Ssid
  href: api/VPEAR.Core.Models.Wifi.html#VPEAR_Core_Models_Wifi_Ssid_
  commentId: Overload:VPEAR.Core.Models.Wifi.Ssid
  isSpec: "True"
  fullName: VPEAR.Core.Models.Wifi.Ssid
  nameWithType: Wifi.Ssid
- uid: VPEAR.Core.Null
  name: "Null"
  href: api/VPEAR.Core.Null.html
  commentId: T:VPEAR.Core.Null
  fullName: VPEAR.Core.Null
  nameWithType: "Null"
- uid: VPEAR.Core.Null.#ctor
  name: Null()
  href: api/VPEAR.Core.Null.html#VPEAR_Core_Null__ctor
  commentId: M:VPEAR.Core.Null.#ctor
  fullName: VPEAR.Core.Null.Null()
  nameWithType: Null.Null()
- uid: VPEAR.Core.Null.#ctor*
  name: "Null"
  href: api/VPEAR.Core.Null.html#VPEAR_Core_Null__ctor_
  commentId: Overload:VPEAR.Core.Null.#ctor
  isSpec: "True"
  fullName: VPEAR.Core.Null.Null
  nameWithType: Null.Null
- uid: VPEAR.Core.Result`1
  name: Result<TSuccess>
  href: api/VPEAR.Core.Result-1.html
  commentId: T:VPEAR.Core.Result`1
  name.vb: Result(Of TSuccess)
  fullName: VPEAR.Core.Result<TSuccess>
  fullName.vb: VPEAR.Core.Result(Of TSuccess)
  nameWithType: Result<TSuccess>
  nameWithType.vb: Result(Of TSuccess)
- uid: VPEAR.Core.Result`1.#ctor(System.Net.HttpStatusCode)
  name: Result(HttpStatusCode)
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1__ctor_System_Net_HttpStatusCode_
  commentId: M:VPEAR.Core.Result`1.#ctor(System.Net.HttpStatusCode)
  fullName: VPEAR.Core.Result<TSuccess>.Result(System.Net.HttpStatusCode)
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Result(System.Net.HttpStatusCode)
  nameWithType: Result<TSuccess>.Result(HttpStatusCode)
  nameWithType.vb: Result(Of TSuccess).Result(HttpStatusCode)
- uid: VPEAR.Core.Result`1.#ctor(System.Net.HttpStatusCode,`0)
  name: Result(HttpStatusCode, TSuccess)
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1__ctor_System_Net_HttpStatusCode__0_
  commentId: M:VPEAR.Core.Result`1.#ctor(System.Net.HttpStatusCode,`0)
  fullName: VPEAR.Core.Result<TSuccess>.Result(System.Net.HttpStatusCode, TSuccess)
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Result(System.Net.HttpStatusCode, TSuccess)
  nameWithType: Result<TSuccess>.Result(HttpStatusCode, TSuccess)
  nameWithType.vb: Result(Of TSuccess).Result(HttpStatusCode, TSuccess)
- uid: VPEAR.Core.Result`1.#ctor(System.Net.HttpStatusCode,System.String)
  name: Result(HttpStatusCode, String)
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1__ctor_System_Net_HttpStatusCode_System_String_
  commentId: M:VPEAR.Core.Result`1.#ctor(System.Net.HttpStatusCode,System.String)
  fullName: VPEAR.Core.Result<TSuccess>.Result(System.Net.HttpStatusCode, System.String)
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Result(System.Net.HttpStatusCode, System.String)
  nameWithType: Result<TSuccess>.Result(HttpStatusCode, String)
  nameWithType.vb: Result(Of TSuccess).Result(HttpStatusCode, String)
- uid: VPEAR.Core.Result`1.#ctor*
  name: Result
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1__ctor_
  commentId: Overload:VPEAR.Core.Result`1.#ctor
  isSpec: "True"
  fullName: VPEAR.Core.Result<TSuccess>.Result
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Result
  nameWithType: Result<TSuccess>.Result
  nameWithType.vb: Result(Of TSuccess).Result
- uid: VPEAR.Core.Result`1.Error
  name: Error
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_Error
  commentId: P:VPEAR.Core.Result`1.Error
  fullName: VPEAR.Core.Result<TSuccess>.Error
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Error
  nameWithType: Result<TSuccess>.Error
  nameWithType.vb: Result(Of TSuccess).Error
- uid: VPEAR.Core.Result`1.Error*
  name: Error
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_Error_
  commentId: Overload:VPEAR.Core.Result`1.Error
  isSpec: "True"
  fullName: VPEAR.Core.Result<TSuccess>.Error
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Error
  nameWithType: Result<TSuccess>.Error
  nameWithType.vb: Result(Of TSuccess).Error
- uid: VPEAR.Core.Result`1.IsSuccess
  name: IsSuccess
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_IsSuccess
  commentId: P:VPEAR.Core.Result`1.IsSuccess
  fullName: VPEAR.Core.Result<TSuccess>.IsSuccess
  fullName.vb: VPEAR.Core.Result(Of TSuccess).IsSuccess
  nameWithType: Result<TSuccess>.IsSuccess
  nameWithType.vb: Result(Of TSuccess).IsSuccess
- uid: VPEAR.Core.Result`1.IsSuccess*
  name: IsSuccess
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_IsSuccess_
  commentId: Overload:VPEAR.Core.Result`1.IsSuccess
  isSpec: "True"
  fullName: VPEAR.Core.Result<TSuccess>.IsSuccess
  fullName.vb: VPEAR.Core.Result(Of TSuccess).IsSuccess
  nameWithType: Result<TSuccess>.IsSuccess
  nameWithType.vb: Result(Of TSuccess).IsSuccess
- uid: VPEAR.Core.Result`1.StatusCode
  name: StatusCode
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_StatusCode
  commentId: P:VPEAR.Core.Result`1.StatusCode
  fullName: VPEAR.Core.Result<TSuccess>.StatusCode
  fullName.vb: VPEAR.Core.Result(Of TSuccess).StatusCode
  nameWithType: Result<TSuccess>.StatusCode
  nameWithType.vb: Result(Of TSuccess).StatusCode
- uid: VPEAR.Core.Result`1.StatusCode*
  name: StatusCode
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_StatusCode_
  commentId: Overload:VPEAR.Core.Result`1.StatusCode
  isSpec: "True"
  fullName: VPEAR.Core.Result<TSuccess>.StatusCode
  fullName.vb: VPEAR.Core.Result(Of TSuccess).StatusCode
  nameWithType: Result<TSuccess>.StatusCode
  nameWithType.vb: Result(Of TSuccess).StatusCode
- uid: VPEAR.Core.Result`1.Value
  name: Value
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_Value
  commentId: P:VPEAR.Core.Result`1.Value
  fullName: VPEAR.Core.Result<TSuccess>.Value
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Value
  nameWithType: Result<TSuccess>.Value
  nameWithType.vb: Result(Of TSuccess).Value
- uid: VPEAR.Core.Result`1.Value*
  name: Value
  href: api/VPEAR.Core.Result-1.html#VPEAR_Core_Result_1_Value_
  commentId: Overload:VPEAR.Core.Result`1.Value
  isSpec: "True"
  fullName: VPEAR.Core.Result<TSuccess>.Value
  fullName.vb: VPEAR.Core.Result(Of TSuccess).Value
  nameWithType: Result<TSuccess>.Value
  nameWithType.vb: Result(Of TSuccess).Value
- uid: VPEAR.Core.VPEARClient
  name: VPEARClient
  href: api/VPEAR.Core.VPEARClient.html
  commentId: T:VPEAR.Core.VPEARClient
  fullName: VPEAR.Core.VPEARClient
  nameWithType: VPEARClient
- uid: VPEAR.Core.VPEARClient.#ctor(System.String)
  name: VPEARClient(String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient__ctor_System_String_
  commentId: M:VPEAR.Core.VPEARClient.#ctor(System.String)
  fullName: VPEAR.Core.VPEARClient.VPEARClient(System.String)
  nameWithType: VPEARClient.VPEARClient(String)
- uid: VPEAR.Core.VPEARClient.#ctor*
  name: VPEARClient
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient__ctor_
  commentId: Overload:VPEAR.Core.VPEARClient.#ctor
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.VPEARClient
  nameWithType: VPEARClient.VPEARClient
- uid: VPEAR.Core.VPEARClient.GetFiltersAsync(System.Guid)
  name: GetFiltersAsync(Guid)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetFiltersAsync_System_Guid_
  commentId: M:VPEAR.Core.VPEARClient.GetFiltersAsync(System.Guid)
  fullName: VPEAR.Core.VPEARClient.GetFiltersAsync(System.Guid)
  nameWithType: VPEARClient.GetFiltersAsync(Guid)
- uid: VPEAR.Core.VPEARClient.GetFiltersAsync*
  name: GetFiltersAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_GetFiltersAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.GetFiltersAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.GetFiltersAsync
  nameWithType: VPEARClient.GetFiltersAsync
- uid: VPEAR.Core.VPEARClient.LoginAsync(System.String,System.String)
  name: LoginAsync(String, String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_LoginAsync_System_String_System_String_
  commentId: M:VPEAR.Core.VPEARClient.LoginAsync(System.String,System.String)
  fullName: VPEAR.Core.VPEARClient.LoginAsync(System.String, System.String)
  nameWithType: VPEARClient.LoginAsync(String, String)
- uid: VPEAR.Core.VPEARClient.LoginAsync*
  name: LoginAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_LoginAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.LoginAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.LoginAsync
  nameWithType: VPEARClient.LoginAsync
- uid: VPEAR.Core.VPEARClient.RegisterAsync(System.String,System.String)
  name: RegisterAsync(String, String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_RegisterAsync_System_String_System_String_
  commentId: M:VPEAR.Core.VPEARClient.RegisterAsync(System.String,System.String)
  fullName: VPEAR.Core.VPEARClient.RegisterAsync(System.String, System.String)
  nameWithType: VPEARClient.RegisterAsync(String, String)
- uid: VPEAR.Core.VPEARClient.RegisterAsync(System.String,System.String,System.String)
  name: RegisterAsync(String, String, String)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_RegisterAsync_System_String_System_String_System_String_
  commentId: M:VPEAR.Core.VPEARClient.RegisterAsync(System.String,System.String,System.String)
  fullName: VPEAR.Core.VPEARClient.RegisterAsync(System.String, System.String, System.String)
  nameWithType: VPEARClient.RegisterAsync(String, String, String)
- uid: VPEAR.Core.VPEARClient.RegisterAsync*
  name: RegisterAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_RegisterAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.RegisterAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.RegisterAsync
  nameWithType: VPEARClient.RegisterAsync
- uid: VPEAR.Core.VPEARClient.SendAsync(System.Net.Http.HttpMethod,System.String,System.Object)
  name: SendAsync(HttpMethod, String, Object)
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_SendAsync_System_Net_Http_HttpMethod_System_String_System_Object_
  commentId: M:VPEAR.Core.VPEARClient.SendAsync(System.Net.Http.HttpMethod,System.String,System.Object)
  fullName: VPEAR.Core.VPEARClient.SendAsync(System.Net.Http.HttpMethod, System.String, System.Object)
  nameWithType: VPEARClient.SendAsync(HttpMethod, String, Object)
- uid: VPEAR.Core.VPEARClient.SendAsync*
  name: SendAsync
  href: api/VPEAR.Core.VPEARClient.html#VPEAR_Core_VPEARClient_SendAsync_
  commentId: Overload:VPEAR.Core.VPEARClient.SendAsync
  isSpec: "True"
  fullName: VPEAR.Core.VPEARClient.SendAsync
  nameWithType: VPEARClient.SendAsync
- uid: VPEAR.Core.Wrappers
  name: VPEAR.Core.Wrappers
  href: api/VPEAR.Core.Wrappers.html
  commentId: N:VPEAR.Core.Wrappers
  fullName: VPEAR.Core.Wrappers
  nameWithType: VPEAR.Core.Wrappers
- uid: VPEAR.Core.Wrappers.ApiResponse
  name: ApiResponse
  href: api/VPEAR.Core.Wrappers.ApiResponse.html
  commentId: T:VPEAR.Core.Wrappers.ApiResponse
  fullName: VPEAR.Core.Wrappers.ApiResponse
  nameWithType: ApiResponse
- uid: VPEAR.Core.Wrappers.ApiResponse.Device
  name: Device
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Device
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Device
  fullName: VPEAR.Core.Wrappers.ApiResponse.Device
  nameWithType: ApiResponse.Device
- uid: VPEAR.Core.Wrappers.ApiResponse.Device*
  name: Device
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Device_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Device
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Device
  nameWithType: ApiResponse.Device
- uid: VPEAR.Core.Wrappers.ApiResponse.Filters
  name: Filters
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Filters
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Filters
  fullName: VPEAR.Core.Wrappers.ApiResponse.Filters
  nameWithType: ApiResponse.Filters
- uid: VPEAR.Core.Wrappers.ApiResponse.Filters*
  name: Filters
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Filters_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Filters
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Filters
  nameWithType: ApiResponse.Filters
- uid: VPEAR.Core.Wrappers.ApiResponse.Firmware
  name: Firmware
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Firmware
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Firmware
  fullName: VPEAR.Core.Wrappers.ApiResponse.Firmware
  nameWithType: ApiResponse.Firmware
- uid: VPEAR.Core.Wrappers.ApiResponse.Firmware*
  name: Firmware
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Firmware_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Firmware
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Firmware
  nameWithType: ApiResponse.Firmware
- uid: VPEAR.Core.Wrappers.ApiResponse.Frames
  name: Frames
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Frames
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Frames
  fullName: VPEAR.Core.Wrappers.ApiResponse.Frames
  nameWithType: ApiResponse.Frames
- uid: VPEAR.Core.Wrappers.ApiResponse.Frames*
  name: Frames
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Frames_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Frames
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Frames
  nameWithType: ApiResponse.Frames
- uid: VPEAR.Core.Wrappers.ApiResponse.Frequency
  name: Frequency
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Frequency
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Frequency
  fullName: VPEAR.Core.Wrappers.ApiResponse.Frequency
  nameWithType: ApiResponse.Frequency
- uid: VPEAR.Core.Wrappers.ApiResponse.Frequency*
  name: Frequency
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Frequency_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Frequency
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Frequency
  nameWithType: ApiResponse.Frequency
- uid: VPEAR.Core.Wrappers.ApiResponse.Power
  name: Power
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Power
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Power
  fullName: VPEAR.Core.Wrappers.ApiResponse.Power
  nameWithType: ApiResponse.Power
- uid: VPEAR.Core.Wrappers.ApiResponse.Power*
  name: Power
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Power_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Power
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Power
  nameWithType: ApiResponse.Power
- uid: VPEAR.Core.Wrappers.ApiResponse.Sensors
  name: Sensors
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Sensors
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Sensors
  fullName: VPEAR.Core.Wrappers.ApiResponse.Sensors
  nameWithType: ApiResponse.Sensors
- uid: VPEAR.Core.Wrappers.ApiResponse.Sensors*
  name: Sensors
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Sensors_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Sensors
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Sensors
  nameWithType: ApiResponse.Sensors
- uid: VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  name: SensorsRequired
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_SensorsRequired
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  fullName: VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  nameWithType: ApiResponse.SensorsRequired
- uid: VPEAR.Core.Wrappers.ApiResponse.SensorsRequired*
  name: SensorsRequired
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_SensorsRequired_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.SensorsRequired
  nameWithType: ApiResponse.SensorsRequired
- uid: VPEAR.Core.Wrappers.ApiResponse.Wifi
  name: Wifi
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Wifi
  commentId: P:VPEAR.Core.Wrappers.ApiResponse.Wifi
  fullName: VPEAR.Core.Wrappers.ApiResponse.Wifi
  nameWithType: ApiResponse.Wifi
- uid: VPEAR.Core.Wrappers.ApiResponse.Wifi*
  name: Wifi
  href: api/VPEAR.Core.Wrappers.ApiResponse.html#VPEAR_Core_Wrappers_ApiResponse_Wifi_
  commentId: Overload:VPEAR.Core.Wrappers.ApiResponse.Wifi
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ApiResponse.Wifi
  nameWithType: ApiResponse.Wifi
- uid: VPEAR.Core.Wrappers.Container`1
  name: Container<TItem>
  href: api/VPEAR.Core.Wrappers.Container-1.html
  commentId: T:VPEAR.Core.Wrappers.Container`1
  name.vb: Container(Of TItem)
  fullName: VPEAR.Core.Wrappers.Container<TItem>
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem)
  nameWithType: Container<TItem>
  nameWithType.vb: Container(Of TItem)
- uid: VPEAR.Core.Wrappers.Container`1.Count
  name: Count
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_Count
  commentId: P:VPEAR.Core.Wrappers.Container`1.Count
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Count
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Count
  nameWithType: Container<TItem>.Count
  nameWithType.vb: Container(Of TItem).Count
- uid: VPEAR.Core.Wrappers.Container`1.Count*
  name: Count
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_Count_
  commentId: Overload:VPEAR.Core.Wrappers.Container`1.Count
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Count
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Count
  nameWithType: Container<TItem>.Count
  nameWithType.vb: Container(Of TItem).Count
- uid: VPEAR.Core.Wrappers.Container`1.Items
  name: Items
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_Items
  commentId: P:VPEAR.Core.Wrappers.Container`1.Items
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Items
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Items
  nameWithType: Container<TItem>.Items
  nameWithType.vb: Container(Of TItem).Items
- uid: VPEAR.Core.Wrappers.Container`1.Items*
  name: Items
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_Items_
  commentId: Overload:VPEAR.Core.Wrappers.Container`1.Items
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Items
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Items
  nameWithType: Container<TItem>.Items
  nameWithType.vb: Container(Of TItem).Items
- uid: VPEAR.Core.Wrappers.Container`1.Start
  name: Start
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_Start
  commentId: P:VPEAR.Core.Wrappers.Container`1.Start
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Start
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Start
  nameWithType: Container<TItem>.Start
  nameWithType.vb: Container(Of TItem).Start
- uid: VPEAR.Core.Wrappers.Container`1.Start*
  name: Start
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_Start_
  commentId: Overload:VPEAR.Core.Wrappers.Container`1.Start
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Start
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Start
  nameWithType: Container<TItem>.Start
  nameWithType.vb: Container(Of TItem).Start
- uid: VPEAR.Core.Wrappers.Container`1.Stop
  name: Stop
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_Stop
  commentId: P:VPEAR.Core.Wrappers.Container`1.Stop
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Stop
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Stop
  nameWithType: Container<TItem>.Stop
  nameWithType.vb: Container(Of TItem).Stop
- uid: VPEAR.Core.Wrappers.Container`1.Stop*
  name: Stop
  href: api/VPEAR.Core.Wrappers.Container-1.html#VPEAR_Core_Wrappers_Container_1_Stop_
  commentId: Overload:VPEAR.Core.Wrappers.Container`1.Stop
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.Container<TItem>.Stop
  fullName.vb: VPEAR.Core.Wrappers.Container(Of TItem).Stop
  nameWithType: Container<TItem>.Stop
  nameWithType.vb: Container(Of TItem).Stop
- uid: VPEAR.Core.Wrappers.DeviceResponse
  name: DeviceResponse
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html
  commentId: T:VPEAR.Core.Wrappers.DeviceResponse
  fullName: VPEAR.Core.Wrappers.DeviceResponse
  nameWithType: DeviceResponse
- uid: VPEAR.Core.Wrappers.DeviceResponse.Address
  name: Address
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Address
  commentId: P:VPEAR.Core.Wrappers.DeviceResponse.Address
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Address
  nameWithType: DeviceResponse.Address
- uid: VPEAR.Core.Wrappers.DeviceResponse.Address*
  name: Address
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Address_
  commentId: Overload:VPEAR.Core.Wrappers.DeviceResponse.Address
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Address
  nameWithType: DeviceResponse.Address
- uid: VPEAR.Core.Wrappers.DeviceResponse.Class
  name: Class
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Class
  commentId: P:VPEAR.Core.Wrappers.DeviceResponse.Class
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Class
  nameWithType: DeviceResponse.Class
- uid: VPEAR.Core.Wrappers.DeviceResponse.Class*
  name: Class
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Class_
  commentId: Overload:VPEAR.Core.Wrappers.DeviceResponse.Class
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Class
  nameWithType: DeviceResponse.Class
- uid: VPEAR.Core.Wrappers.DeviceResponse.Name
  name: Name
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Name
  commentId: P:VPEAR.Core.Wrappers.DeviceResponse.Name
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Name
  nameWithType: DeviceResponse.Name
- uid: VPEAR.Core.Wrappers.DeviceResponse.Name*
  name: Name
  href: api/VPEAR.Core.Wrappers.DeviceResponse.html#VPEAR_Core_Wrappers_DeviceResponse_Name_
  commentId: Overload:VPEAR.Core.Wrappers.DeviceResponse.Name
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.DeviceResponse.Name
  nameWithType: DeviceResponse.Name
- uid: VPEAR.Core.Wrappers.ErrorResponse
  name: ErrorResponse
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html
  commentId: T:VPEAR.Core.Wrappers.ErrorResponse
  fullName: VPEAR.Core.Wrappers.ErrorResponse
  nameWithType: ErrorResponse
- uid: VPEAR.Core.Wrappers.ErrorResponse.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{System.String})
  name: ErrorResponse(HttpStatusCode, IEnumerable<String>)
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse__ctor_System_Net_HttpStatusCode_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:VPEAR.Core.Wrappers.ErrorResponse.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{System.String})
  name.vb: ErrorResponse(HttpStatusCode, IEnumerable(Of String))
  fullName: VPEAR.Core.Wrappers.ErrorResponse.ErrorResponse(System.Net.HttpStatusCode, System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: VPEAR.Core.Wrappers.ErrorResponse.ErrorResponse(System.Net.HttpStatusCode, System.Collections.Generic.IEnumerable(Of System.String))
  nameWithType: ErrorResponse.ErrorResponse(HttpStatusCode, IEnumerable<String>)
  nameWithType.vb: ErrorResponse.ErrorResponse(HttpStatusCode, IEnumerable(Of String))
- uid: VPEAR.Core.Wrappers.ErrorResponse.#ctor(System.Net.HttpStatusCode,System.String)
  name: ErrorResponse(HttpStatusCode, String)
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse__ctor_System_Net_HttpStatusCode_System_String_
  commentId: M:VPEAR.Core.Wrappers.ErrorResponse.#ctor(System.Net.HttpStatusCode,System.String)
  fullName: VPEAR.Core.Wrappers.ErrorResponse.ErrorResponse(System.Net.HttpStatusCode, System.String)
  nameWithType: ErrorResponse.ErrorResponse(HttpStatusCode, String)
- uid: VPEAR.Core.Wrappers.ErrorResponse.#ctor*
  name: ErrorResponse
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse__ctor_
  commentId: Overload:VPEAR.Core.Wrappers.ErrorResponse.#ctor
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ErrorResponse.ErrorResponse
  nameWithType: ErrorResponse.ErrorResponse
- uid: VPEAR.Core.Wrappers.ErrorResponse.Messages
  name: Messages
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse_Messages
  commentId: P:VPEAR.Core.Wrappers.ErrorResponse.Messages
  fullName: VPEAR.Core.Wrappers.ErrorResponse.Messages
  nameWithType: ErrorResponse.Messages
- uid: VPEAR.Core.Wrappers.ErrorResponse.Messages*
  name: Messages
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse_Messages_
  commentId: Overload:VPEAR.Core.Wrappers.ErrorResponse.Messages
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ErrorResponse.Messages
  nameWithType: ErrorResponse.Messages
- uid: VPEAR.Core.Wrappers.ErrorResponse.StatusCode
  name: StatusCode
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse_StatusCode
  commentId: P:VPEAR.Core.Wrappers.ErrorResponse.StatusCode
  fullName: VPEAR.Core.Wrappers.ErrorResponse.StatusCode
  nameWithType: ErrorResponse.StatusCode
- uid: VPEAR.Core.Wrappers.ErrorResponse.StatusCode*
  name: StatusCode
  href: api/VPEAR.Core.Wrappers.ErrorResponse.html#VPEAR_Core_Wrappers_ErrorResponse_StatusCode_
  commentId: Overload:VPEAR.Core.Wrappers.ErrorResponse.StatusCode
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.ErrorResponse.StatusCode
  nameWithType: ErrorResponse.StatusCode
- uid: VPEAR.Core.Wrappers.FrameResponse
  name: FrameResponse
  href: api/VPEAR.Core.Wrappers.FrameResponse.html
  commentId: T:VPEAR.Core.Wrappers.FrameResponse
  fullName: VPEAR.Core.Wrappers.FrameResponse
  nameWithType: FrameResponse
- uid: VPEAR.Core.Wrappers.FrameResponse.Id
  name: Id
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Id
  commentId: P:VPEAR.Core.Wrappers.FrameResponse.Id
  fullName: VPEAR.Core.Wrappers.FrameResponse.Id
  nameWithType: FrameResponse.Id
- uid: VPEAR.Core.Wrappers.FrameResponse.Id*
  name: Id
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Id_
  commentId: Overload:VPEAR.Core.Wrappers.FrameResponse.Id
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FrameResponse.Id
  nameWithType: FrameResponse.Id
- uid: VPEAR.Core.Wrappers.FrameResponse.Readings
  name: Readings
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Readings
  commentId: P:VPEAR.Core.Wrappers.FrameResponse.Readings
  fullName: VPEAR.Core.Wrappers.FrameResponse.Readings
  nameWithType: FrameResponse.Readings
- uid: VPEAR.Core.Wrappers.FrameResponse.Readings*
  name: Readings
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Readings_
  commentId: Overload:VPEAR.Core.Wrappers.FrameResponse.Readings
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FrameResponse.Readings
  nameWithType: FrameResponse.Readings
- uid: VPEAR.Core.Wrappers.FrameResponse.Time
  name: Time
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Time
  commentId: P:VPEAR.Core.Wrappers.FrameResponse.Time
  fullName: VPEAR.Core.Wrappers.FrameResponse.Time
  nameWithType: FrameResponse.Time
- uid: VPEAR.Core.Wrappers.FrameResponse.Time*
  name: Time
  href: api/VPEAR.Core.Wrappers.FrameResponse.html#VPEAR_Core_Wrappers_FrameResponse_Time_
  commentId: Overload:VPEAR.Core.Wrappers.FrameResponse.Time
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.FrameResponse.Time
  nameWithType: FrameResponse.Time
- uid: VPEAR.Core.Wrappers.GetDeviceResponse
  name: GetDeviceResponse
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetDeviceResponse
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse
  nameWithType: GetDeviceResponse
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.Address
  name: Address
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_Address
  commentId: P:VPEAR.Core.Wrappers.GetDeviceResponse.Address
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.Address
  nameWithType: GetDeviceResponse.Address
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.Address*
  name: Address
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_Address_
  commentId: Overload:VPEAR.Core.Wrappers.GetDeviceResponse.Address
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.Address
  nameWithType: GetDeviceResponse.Address
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.DisplayName
  name: DisplayName
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_DisplayName
  commentId: P:VPEAR.Core.Wrappers.GetDeviceResponse.DisplayName
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.DisplayName
  nameWithType: GetDeviceResponse.DisplayName
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.DisplayName*
  name: DisplayName
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_DisplayName_
  commentId: Overload:VPEAR.Core.Wrappers.GetDeviceResponse.DisplayName
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.DisplayName
  nameWithType: GetDeviceResponse.DisplayName
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.Id
  name: Id
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_Id
  commentId: P:VPEAR.Core.Wrappers.GetDeviceResponse.Id
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.Id
  nameWithType: GetDeviceResponse.Id
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.Id*
  name: Id
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_Id_
  commentId: Overload:VPEAR.Core.Wrappers.GetDeviceResponse.Id
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.Id
  nameWithType: GetDeviceResponse.Id
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.ReqioredSensors
  name: ReqioredSensors
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_ReqioredSensors
  commentId: P:VPEAR.Core.Wrappers.GetDeviceResponse.ReqioredSensors
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.ReqioredSensors
  nameWithType: GetDeviceResponse.ReqioredSensors
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.ReqioredSensors*
  name: ReqioredSensors
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_ReqioredSensors_
  commentId: Overload:VPEAR.Core.Wrappers.GetDeviceResponse.ReqioredSensors
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.ReqioredSensors
  nameWithType: GetDeviceResponse.ReqioredSensors
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.SampleFrequency
  name: SampleFrequency
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_SampleFrequency
  commentId: P:VPEAR.Core.Wrappers.GetDeviceResponse.SampleFrequency
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.SampleFrequency
  nameWithType: GetDeviceResponse.SampleFrequency
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.SampleFrequency*
  name: SampleFrequency
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_SampleFrequency_
  commentId: Overload:VPEAR.Core.Wrappers.GetDeviceResponse.SampleFrequency
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.SampleFrequency
  nameWithType: GetDeviceResponse.SampleFrequency
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.Status
  name: Status
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_Status
  commentId: P:VPEAR.Core.Wrappers.GetDeviceResponse.Status
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.Status
  nameWithType: GetDeviceResponse.Status
- uid: VPEAR.Core.Wrappers.GetDeviceResponse.Status*
  name: Status
  href: api/VPEAR.Core.Wrappers.GetDeviceResponse.html#VPEAR_Core_Wrappers_GetDeviceResponse_Status_
  commentId: Overload:VPEAR.Core.Wrappers.GetDeviceResponse.Status
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetDeviceResponse.Status
  nameWithType: GetDeviceResponse.Status
- uid: VPEAR.Core.Wrappers.GetFiltersResponse
  name: GetFiltersResponse
  href: api/VPEAR.Core.Wrappers.GetFiltersResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetFiltersResponse
  fullName: VPEAR.Core.Wrappers.GetFiltersResponse
  nameWithType: GetFiltersResponse
- uid: VPEAR.Core.Wrappers.GetFiltersResponse.Noise
  name: Noise
  href: api/VPEAR.Core.Wrappers.GetFiltersResponse.html#VPEAR_Core_Wrappers_GetFiltersResponse_Noise
  commentId: P:VPEAR.Core.Wrappers.GetFiltersResponse.Noise
  fullName: VPEAR.Core.Wrappers.GetFiltersResponse.Noise
  nameWithType: GetFiltersResponse.Noise
- uid: VPEAR.Core.Wrappers.GetFiltersResponse.Noise*
  name: Noise
  href: api/VPEAR.Core.Wrappers.GetFiltersResponse.html#VPEAR_Core_Wrappers_GetFiltersResponse_Noise_
  commentId: Overload:VPEAR.Core.Wrappers.GetFiltersResponse.Noise
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFiltersResponse.Noise
  nameWithType: GetFiltersResponse.Noise
- uid: VPEAR.Core.Wrappers.GetFiltersResponse.Smooth
  name: Smooth
  href: api/VPEAR.Core.Wrappers.GetFiltersResponse.html#VPEAR_Core_Wrappers_GetFiltersResponse_Smooth
  commentId: P:VPEAR.Core.Wrappers.GetFiltersResponse.Smooth
  fullName: VPEAR.Core.Wrappers.GetFiltersResponse.Smooth
  nameWithType: GetFiltersResponse.Smooth
- uid: VPEAR.Core.Wrappers.GetFiltersResponse.Smooth*
  name: Smooth
  href: api/VPEAR.Core.Wrappers.GetFiltersResponse.html#VPEAR_Core_Wrappers_GetFiltersResponse_Smooth_
  commentId: Overload:VPEAR.Core.Wrappers.GetFiltersResponse.Smooth
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFiltersResponse.Smooth
  nameWithType: GetFiltersResponse.Smooth
- uid: VPEAR.Core.Wrappers.GetFiltersResponse.Spot
  name: Spot
  href: api/VPEAR.Core.Wrappers.GetFiltersResponse.html#VPEAR_Core_Wrappers_GetFiltersResponse_Spot
  commentId: P:VPEAR.Core.Wrappers.GetFiltersResponse.Spot
  fullName: VPEAR.Core.Wrappers.GetFiltersResponse.Spot
  nameWithType: GetFiltersResponse.Spot
- uid: VPEAR.Core.Wrappers.GetFiltersResponse.Spot*
  name: Spot
  href: api/VPEAR.Core.Wrappers.GetFiltersResponse.html#VPEAR_Core_Wrappers_GetFiltersResponse_Spot_
  commentId: Overload:VPEAR.Core.Wrappers.GetFiltersResponse.Spot
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFiltersResponse.Spot
  nameWithType: GetFiltersResponse.Spot
- uid: VPEAR.Core.Wrappers.GetFirmwareResponse
  name: GetFirmwareResponse
  href: api/VPEAR.Core.Wrappers.GetFirmwareResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetFirmwareResponse
  fullName: VPEAR.Core.Wrappers.GetFirmwareResponse
  nameWithType: GetFirmwareResponse
- uid: VPEAR.Core.Wrappers.GetFirmwareResponse.Source
  name: Source
  href: api/VPEAR.Core.Wrappers.GetFirmwareResponse.html#VPEAR_Core_Wrappers_GetFirmwareResponse_Source
  commentId: P:VPEAR.Core.Wrappers.GetFirmwareResponse.Source
  fullName: VPEAR.Core.Wrappers.GetFirmwareResponse.Source
  nameWithType: GetFirmwareResponse.Source
- uid: VPEAR.Core.Wrappers.GetFirmwareResponse.Source*
  name: Source
  href: api/VPEAR.Core.Wrappers.GetFirmwareResponse.html#VPEAR_Core_Wrappers_GetFirmwareResponse_Source_
  commentId: Overload:VPEAR.Core.Wrappers.GetFirmwareResponse.Source
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFirmwareResponse.Source
  nameWithType: GetFirmwareResponse.Source
- uid: VPEAR.Core.Wrappers.GetFirmwareResponse.Upgrade
  name: Upgrade
  href: api/VPEAR.Core.Wrappers.GetFirmwareResponse.html#VPEAR_Core_Wrappers_GetFirmwareResponse_Upgrade
  commentId: P:VPEAR.Core.Wrappers.GetFirmwareResponse.Upgrade
  fullName: VPEAR.Core.Wrappers.GetFirmwareResponse.Upgrade
  nameWithType: GetFirmwareResponse.Upgrade
- uid: VPEAR.Core.Wrappers.GetFirmwareResponse.Upgrade*
  name: Upgrade
  href: api/VPEAR.Core.Wrappers.GetFirmwareResponse.html#VPEAR_Core_Wrappers_GetFirmwareResponse_Upgrade_
  commentId: Overload:VPEAR.Core.Wrappers.GetFirmwareResponse.Upgrade
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFirmwareResponse.Upgrade
  nameWithType: GetFirmwareResponse.Upgrade
- uid: VPEAR.Core.Wrappers.GetFirmwareResponse.Version
  name: Version
  href: api/VPEAR.Core.Wrappers.GetFirmwareResponse.html#VPEAR_Core_Wrappers_GetFirmwareResponse_Version
  commentId: P:VPEAR.Core.Wrappers.GetFirmwareResponse.Version
  fullName: VPEAR.Core.Wrappers.GetFirmwareResponse.Version
  nameWithType: GetFirmwareResponse.Version
- uid: VPEAR.Core.Wrappers.GetFirmwareResponse.Version*
  name: Version
  href: api/VPEAR.Core.Wrappers.GetFirmwareResponse.html#VPEAR_Core_Wrappers_GetFirmwareResponse_Version_
  commentId: Overload:VPEAR.Core.Wrappers.GetFirmwareResponse.Version
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFirmwareResponse.Version
  nameWithType: GetFirmwareResponse.Version
- uid: VPEAR.Core.Wrappers.GetFrameResponse
  name: GetFrameResponse
  href: api/VPEAR.Core.Wrappers.GetFrameResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetFrameResponse
  fullName: VPEAR.Core.Wrappers.GetFrameResponse
  nameWithType: GetFrameResponse
- uid: VPEAR.Core.Wrappers.GetFrameResponse.Readings
  name: Readings
  href: api/VPEAR.Core.Wrappers.GetFrameResponse.html#VPEAR_Core_Wrappers_GetFrameResponse_Readings
  commentId: P:VPEAR.Core.Wrappers.GetFrameResponse.Readings
  fullName: VPEAR.Core.Wrappers.GetFrameResponse.Readings
  nameWithType: GetFrameResponse.Readings
- uid: VPEAR.Core.Wrappers.GetFrameResponse.Readings*
  name: Readings
  href: api/VPEAR.Core.Wrappers.GetFrameResponse.html#VPEAR_Core_Wrappers_GetFrameResponse_Readings_
  commentId: Overload:VPEAR.Core.Wrappers.GetFrameResponse.Readings
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFrameResponse.Readings
  nameWithType: GetFrameResponse.Readings
- uid: VPEAR.Core.Wrappers.GetFrameResponse.Time
  name: Time
  href: api/VPEAR.Core.Wrappers.GetFrameResponse.html#VPEAR_Core_Wrappers_GetFrameResponse_Time
  commentId: P:VPEAR.Core.Wrappers.GetFrameResponse.Time
  fullName: VPEAR.Core.Wrappers.GetFrameResponse.Time
  nameWithType: GetFrameResponse.Time
- uid: VPEAR.Core.Wrappers.GetFrameResponse.Time*
  name: Time
  href: api/VPEAR.Core.Wrappers.GetFrameResponse.html#VPEAR_Core_Wrappers_GetFrameResponse_Time_
  commentId: Overload:VPEAR.Core.Wrappers.GetFrameResponse.Time
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFrameResponse.Time
  nameWithType: GetFrameResponse.Time
- uid: VPEAR.Core.Wrappers.GetFramesResponse
  name: GetFramesResponse
  href: api/VPEAR.Core.Wrappers.GetFramesResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetFramesResponse
  fullName: VPEAR.Core.Wrappers.GetFramesResponse
  nameWithType: GetFramesResponse
- uid: VPEAR.Core.Wrappers.GetFramesResponse.Frames
  name: Frames
  href: api/VPEAR.Core.Wrappers.GetFramesResponse.html#VPEAR_Core_Wrappers_GetFramesResponse_Frames
  commentId: P:VPEAR.Core.Wrappers.GetFramesResponse.Frames
  fullName: VPEAR.Core.Wrappers.GetFramesResponse.Frames
  nameWithType: GetFramesResponse.Frames
- uid: VPEAR.Core.Wrappers.GetFramesResponse.Frames*
  name: Frames
  href: api/VPEAR.Core.Wrappers.GetFramesResponse.html#VPEAR_Core_Wrappers_GetFramesResponse_Frames_
  commentId: Overload:VPEAR.Core.Wrappers.GetFramesResponse.Frames
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetFramesResponse.Frames
  nameWithType: GetFramesResponse.Frames
- uid: VPEAR.Core.Wrappers.GetPowerResponse
  name: GetPowerResponse
  href: api/VPEAR.Core.Wrappers.GetPowerResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetPowerResponse
  fullName: VPEAR.Core.Wrappers.GetPowerResponse
  nameWithType: GetPowerResponse
- uid: VPEAR.Core.Wrappers.GetPowerResponse.Level
  name: Level
  href: api/VPEAR.Core.Wrappers.GetPowerResponse.html#VPEAR_Core_Wrappers_GetPowerResponse_Level
  commentId: P:VPEAR.Core.Wrappers.GetPowerResponse.Level
  fullName: VPEAR.Core.Wrappers.GetPowerResponse.Level
  nameWithType: GetPowerResponse.Level
- uid: VPEAR.Core.Wrappers.GetPowerResponse.Level*
  name: Level
  href: api/VPEAR.Core.Wrappers.GetPowerResponse.html#VPEAR_Core_Wrappers_GetPowerResponse_Level_
  commentId: Overload:VPEAR.Core.Wrappers.GetPowerResponse.Level
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetPowerResponse.Level
  nameWithType: GetPowerResponse.Level
- uid: VPEAR.Core.Wrappers.GetPowerResponse.State
  name: State
  href: api/VPEAR.Core.Wrappers.GetPowerResponse.html#VPEAR_Core_Wrappers_GetPowerResponse_State
  commentId: P:VPEAR.Core.Wrappers.GetPowerResponse.State
  fullName: VPEAR.Core.Wrappers.GetPowerResponse.State
  nameWithType: GetPowerResponse.State
- uid: VPEAR.Core.Wrappers.GetPowerResponse.State*
  name: State
  href: api/VPEAR.Core.Wrappers.GetPowerResponse.html#VPEAR_Core_Wrappers_GetPowerResponse_State_
  commentId: Overload:VPEAR.Core.Wrappers.GetPowerResponse.State
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetPowerResponse.State
  nameWithType: GetPowerResponse.State
- uid: VPEAR.Core.Wrappers.GetSensorResponse
  name: GetSensorResponse
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetSensorResponse
  fullName: VPEAR.Core.Wrappers.GetSensorResponse
  nameWithType: GetSensorResponse
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Columns
  name: Columns
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Columns
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Columns
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Columns
  nameWithType: GetSensorResponse.Columns
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Columns*
  name: Columns
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Columns_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Columns
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Columns
  nameWithType: GetSensorResponse.Columns
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Height
  name: Height
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Height
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Height
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Height
  nameWithType: GetSensorResponse.Height
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Height*
  name: Height
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Height_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Height
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Height
  nameWithType: GetSensorResponse.Height
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Maximum
  name: Maximum
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Maximum
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Maximum
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Maximum
  nameWithType: GetSensorResponse.Maximum
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Maximum*
  name: Maximum
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Maximum_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Maximum
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Maximum
  nameWithType: GetSensorResponse.Maximum
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Minimum
  name: Minimum
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Minimum
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Minimum
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Minimum
  nameWithType: GetSensorResponse.Minimum
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Minimum*
  name: Minimum
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Minimum_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Minimum
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Minimum
  nameWithType: GetSensorResponse.Minimum
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Name
  name: Name
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Name
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Name
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Name
  nameWithType: GetSensorResponse.Name
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Name*
  name: Name
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Name_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Name
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Name
  nameWithType: GetSensorResponse.Name
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Rows
  name: Rows
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Rows
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Rows
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Rows
  nameWithType: GetSensorResponse.Rows
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Rows*
  name: Rows
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Rows_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Rows
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Rows
  nameWithType: GetSensorResponse.Rows
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Units
  name: Units
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Units
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Units
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Units
  nameWithType: GetSensorResponse.Units
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Units*
  name: Units
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Units_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Units
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Units
  nameWithType: GetSensorResponse.Units
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Width
  name: Width
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Width
  commentId: P:VPEAR.Core.Wrappers.GetSensorResponse.Width
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Width
  nameWithType: GetSensorResponse.Width
- uid: VPEAR.Core.Wrappers.GetSensorResponse.Width*
  name: Width
  href: api/VPEAR.Core.Wrappers.GetSensorResponse.html#VPEAR_Core_Wrappers_GetSensorResponse_Width_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorResponse.Width
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorResponse.Width
  nameWithType: GetSensorResponse.Width
- uid: VPEAR.Core.Wrappers.GetSensorsResponse
  name: GetSensorsResponse
  href: api/VPEAR.Core.Wrappers.GetSensorsResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetSensorsResponse
  fullName: VPEAR.Core.Wrappers.GetSensorsResponse
  nameWithType: GetSensorsResponse
- uid: VPEAR.Core.Wrappers.GetSensorsResponse.Sensors
  name: Sensors
  href: api/VPEAR.Core.Wrappers.GetSensorsResponse.html#VPEAR_Core_Wrappers_GetSensorsResponse_Sensors
  commentId: P:VPEAR.Core.Wrappers.GetSensorsResponse.Sensors
  fullName: VPEAR.Core.Wrappers.GetSensorsResponse.Sensors
  nameWithType: GetSensorsResponse.Sensors
- uid: VPEAR.Core.Wrappers.GetSensorsResponse.Sensors*
  name: Sensors
  href: api/VPEAR.Core.Wrappers.GetSensorsResponse.html#VPEAR_Core_Wrappers_GetSensorsResponse_Sensors_
  commentId: Overload:VPEAR.Core.Wrappers.GetSensorsResponse.Sensors
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetSensorsResponse.Sensors
  nameWithType: GetSensorsResponse.Sensors
- uid: VPEAR.Core.Wrappers.GetUserResponse
  name: GetUserResponse
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetUserResponse
  fullName: VPEAR.Core.Wrappers.GetUserResponse
  nameWithType: GetUserResponse
- uid: VPEAR.Core.Wrappers.GetUserResponse.DisplayName
  name: DisplayName
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_DisplayName
  commentId: P:VPEAR.Core.Wrappers.GetUserResponse.DisplayName
  fullName: VPEAR.Core.Wrappers.GetUserResponse.DisplayName
  nameWithType: GetUserResponse.DisplayName
- uid: VPEAR.Core.Wrappers.GetUserResponse.DisplayName*
  name: DisplayName
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_DisplayName_
  commentId: Overload:VPEAR.Core.Wrappers.GetUserResponse.DisplayName
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetUserResponse.DisplayName
  nameWithType: GetUserResponse.DisplayName
- uid: VPEAR.Core.Wrappers.GetUserResponse.Email
  name: Email
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_Email
  commentId: P:VPEAR.Core.Wrappers.GetUserResponse.Email
  fullName: VPEAR.Core.Wrappers.GetUserResponse.Email
  nameWithType: GetUserResponse.Email
- uid: VPEAR.Core.Wrappers.GetUserResponse.Email*
  name: Email
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_Email_
  commentId: Overload:VPEAR.Core.Wrappers.GetUserResponse.Email
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetUserResponse.Email
  nameWithType: GetUserResponse.Email
- uid: VPEAR.Core.Wrappers.GetUserResponse.Id
  name: Id
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_Id
  commentId: P:VPEAR.Core.Wrappers.GetUserResponse.Id
  fullName: VPEAR.Core.Wrappers.GetUserResponse.Id
  nameWithType: GetUserResponse.Id
- uid: VPEAR.Core.Wrappers.GetUserResponse.Id*
  name: Id
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_Id_
  commentId: Overload:VPEAR.Core.Wrappers.GetUserResponse.Id
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetUserResponse.Id
  nameWithType: GetUserResponse.Id
- uid: VPEAR.Core.Wrappers.GetUserResponse.IsVerified
  name: IsVerified
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_IsVerified
  commentId: P:VPEAR.Core.Wrappers.GetUserResponse.IsVerified
  fullName: VPEAR.Core.Wrappers.GetUserResponse.IsVerified
  nameWithType: GetUserResponse.IsVerified
- uid: VPEAR.Core.Wrappers.GetUserResponse.IsVerified*
  name: IsVerified
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_IsVerified_
  commentId: Overload:VPEAR.Core.Wrappers.GetUserResponse.IsVerified
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetUserResponse.IsVerified
  nameWithType: GetUserResponse.IsVerified
- uid: VPEAR.Core.Wrappers.GetUserResponse.Roles
  name: Roles
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_Roles
  commentId: P:VPEAR.Core.Wrappers.GetUserResponse.Roles
  fullName: VPEAR.Core.Wrappers.GetUserResponse.Roles
  nameWithType: GetUserResponse.Roles
- uid: VPEAR.Core.Wrappers.GetUserResponse.Roles*
  name: Roles
  href: api/VPEAR.Core.Wrappers.GetUserResponse.html#VPEAR_Core_Wrappers_GetUserResponse_Roles_
  commentId: Overload:VPEAR.Core.Wrappers.GetUserResponse.Roles
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetUserResponse.Roles
  nameWithType: GetUserResponse.Roles
- uid: VPEAR.Core.Wrappers.GetWifiResponse
  name: GetWifiResponse
  href: api/VPEAR.Core.Wrappers.GetWifiResponse.html
  commentId: T:VPEAR.Core.Wrappers.GetWifiResponse
  fullName: VPEAR.Core.Wrappers.GetWifiResponse
  nameWithType: GetWifiResponse
- uid: VPEAR.Core.Wrappers.GetWifiResponse.Mode
  name: Mode
  href: api/VPEAR.Core.Wrappers.GetWifiResponse.html#VPEAR_Core_Wrappers_GetWifiResponse_Mode
  commentId: P:VPEAR.Core.Wrappers.GetWifiResponse.Mode
  fullName: VPEAR.Core.Wrappers.GetWifiResponse.Mode
  nameWithType: GetWifiResponse.Mode
- uid: VPEAR.Core.Wrappers.GetWifiResponse.Mode*
  name: Mode
  href: api/VPEAR.Core.Wrappers.GetWifiResponse.html#VPEAR_Core_Wrappers_GetWifiResponse_Mode_
  commentId: Overload:VPEAR.Core.Wrappers.GetWifiResponse.Mode
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetWifiResponse.Mode
  nameWithType: GetWifiResponse.Mode
- uid: VPEAR.Core.Wrappers.GetWifiResponse.Neighbors
  name: Neighbors
  href: api/VPEAR.Core.Wrappers.GetWifiResponse.html#VPEAR_Core_Wrappers_GetWifiResponse_Neighbors
  commentId: P:VPEAR.Core.Wrappers.GetWifiResponse.Neighbors
  fullName: VPEAR.Core.Wrappers.GetWifiResponse.Neighbors
  nameWithType: GetWifiResponse.Neighbors
- uid: VPEAR.Core.Wrappers.GetWifiResponse.Neighbors*
  name: Neighbors
  href: api/VPEAR.Core.Wrappers.GetWifiResponse.html#VPEAR_Core_Wrappers_GetWifiResponse_Neighbors_
  commentId: Overload:VPEAR.Core.Wrappers.GetWifiResponse.Neighbors
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetWifiResponse.Neighbors
  nameWithType: GetWifiResponse.Neighbors
- uid: VPEAR.Core.Wrappers.GetWifiResponse.Ssid
  name: Ssid
  href: api/VPEAR.Core.Wrappers.GetWifiResponse.html#VPEAR_Core_Wrappers_GetWifiResponse_Ssid
  commentId: P:VPEAR.Core.Wrappers.GetWifiResponse.Ssid
  fullName: VPEAR.Core.Wrappers.GetWifiResponse.Ssid
  nameWithType: GetWifiResponse.Ssid
- uid: VPEAR.Core.Wrappers.GetWifiResponse.Ssid*
  name: Ssid
  href: api/VPEAR.Core.Wrappers.GetWifiResponse.html#VPEAR_Core_Wrappers_GetWifiResponse_Ssid_
  commentId: Overload:VPEAR.Core.Wrappers.GetWifiResponse.Ssid
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.GetWifiResponse.Ssid
  nameWithType: GetWifiResponse.Ssid
- uid: VPEAR.Core.Wrappers.PostDeviceRequest
  name: PostDeviceRequest
  href: api/VPEAR.Core.Wrappers.PostDeviceRequest.html
  commentId: T:VPEAR.Core.Wrappers.PostDeviceRequest
  fullName: VPEAR.Core.Wrappers.PostDeviceRequest
  nameWithType: PostDeviceRequest
- uid: VPEAR.Core.Wrappers.PostDeviceRequest.Address
  name: Address
  href: api/VPEAR.Core.Wrappers.PostDeviceRequest.html#VPEAR_Core_Wrappers_PostDeviceRequest_Address
  commentId: P:VPEAR.Core.Wrappers.PostDeviceRequest.Address
  fullName: VPEAR.Core.Wrappers.PostDeviceRequest.Address
  nameWithType: PostDeviceRequest.Address
- uid: VPEAR.Core.Wrappers.PostDeviceRequest.Address*
  name: Address
  href: api/VPEAR.Core.Wrappers.PostDeviceRequest.html#VPEAR_Core_Wrappers_PostDeviceRequest_Address_
  commentId: Overload:VPEAR.Core.Wrappers.PostDeviceRequest.Address
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PostDeviceRequest.Address
  nameWithType: PostDeviceRequest.Address
- uid: VPEAR.Core.Wrappers.PostDeviceRequest.SubnetMask
  name: SubnetMask
  href: api/VPEAR.Core.Wrappers.PostDeviceRequest.html#VPEAR_Core_Wrappers_PostDeviceRequest_SubnetMask
  commentId: P:VPEAR.Core.Wrappers.PostDeviceRequest.SubnetMask
  fullName: VPEAR.Core.Wrappers.PostDeviceRequest.SubnetMask
  nameWithType: PostDeviceRequest.SubnetMask
- uid: VPEAR.Core.Wrappers.PostDeviceRequest.SubnetMask*
  name: SubnetMask
  href: api/VPEAR.Core.Wrappers.PostDeviceRequest.html#VPEAR_Core_Wrappers_PostDeviceRequest_SubnetMask_
  commentId: Overload:VPEAR.Core.Wrappers.PostDeviceRequest.SubnetMask
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PostDeviceRequest.SubnetMask
  nameWithType: PostDeviceRequest.SubnetMask
- uid: VPEAR.Core.Wrappers.PostRegisterRequest
  name: PostRegisterRequest
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html
  commentId: T:VPEAR.Core.Wrappers.PostRegisterRequest
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest
  nameWithType: PostRegisterRequest
- uid: VPEAR.Core.Wrappers.PostRegisterRequest.DisplayName
  name: DisplayName
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html#VPEAR_Core_Wrappers_PostRegisterRequest_DisplayName
  commentId: P:VPEAR.Core.Wrappers.PostRegisterRequest.DisplayName
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest.DisplayName
  nameWithType: PostRegisterRequest.DisplayName
- uid: VPEAR.Core.Wrappers.PostRegisterRequest.DisplayName*
  name: DisplayName
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html#VPEAR_Core_Wrappers_PostRegisterRequest_DisplayName_
  commentId: Overload:VPEAR.Core.Wrappers.PostRegisterRequest.DisplayName
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest.DisplayName
  nameWithType: PostRegisterRequest.DisplayName
- uid: VPEAR.Core.Wrappers.PostRegisterRequest.Email
  name: Email
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html#VPEAR_Core_Wrappers_PostRegisterRequest_Email
  commentId: P:VPEAR.Core.Wrappers.PostRegisterRequest.Email
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest.Email
  nameWithType: PostRegisterRequest.Email
- uid: VPEAR.Core.Wrappers.PostRegisterRequest.Email*
  name: Email
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html#VPEAR_Core_Wrappers_PostRegisterRequest_Email_
  commentId: Overload:VPEAR.Core.Wrappers.PostRegisterRequest.Email
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest.Email
  nameWithType: PostRegisterRequest.Email
- uid: VPEAR.Core.Wrappers.PostRegisterRequest.IsAdmin
  name: IsAdmin
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html#VPEAR_Core_Wrappers_PostRegisterRequest_IsAdmin
  commentId: P:VPEAR.Core.Wrappers.PostRegisterRequest.IsAdmin
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest.IsAdmin
  nameWithType: PostRegisterRequest.IsAdmin
- uid: VPEAR.Core.Wrappers.PostRegisterRequest.IsAdmin*
  name: IsAdmin
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html#VPEAR_Core_Wrappers_PostRegisterRequest_IsAdmin_
  commentId: Overload:VPEAR.Core.Wrappers.PostRegisterRequest.IsAdmin
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest.IsAdmin
  nameWithType: PostRegisterRequest.IsAdmin
- uid: VPEAR.Core.Wrappers.PostRegisterRequest.Password
  name: Password
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html#VPEAR_Core_Wrappers_PostRegisterRequest_Password
  commentId: P:VPEAR.Core.Wrappers.PostRegisterRequest.Password
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest.Password
  nameWithType: PostRegisterRequest.Password
- uid: VPEAR.Core.Wrappers.PostRegisterRequest.Password*
  name: Password
  href: api/VPEAR.Core.Wrappers.PostRegisterRequest.html#VPEAR_Core_Wrappers_PostRegisterRequest_Password_
  commentId: Overload:VPEAR.Core.Wrappers.PostRegisterRequest.Password
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PostRegisterRequest.Password
  nameWithType: PostRegisterRequest.Password
- uid: VPEAR.Core.Wrappers.PutDeviceRequest
  name: PutDeviceRequest
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html
  commentId: T:VPEAR.Core.Wrappers.PutDeviceRequest
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest
  nameWithType: PutDeviceRequest
- uid: VPEAR.Core.Wrappers.PutDeviceRequest.DisplayName
  name: DisplayName
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html#VPEAR_Core_Wrappers_PutDeviceRequest_DisplayName
  commentId: P:VPEAR.Core.Wrappers.PutDeviceRequest.DisplayName
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest.DisplayName
  nameWithType: PutDeviceRequest.DisplayName
- uid: VPEAR.Core.Wrappers.PutDeviceRequest.DisplayName*
  name: DisplayName
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html#VPEAR_Core_Wrappers_PutDeviceRequest_DisplayName_
  commentId: Overload:VPEAR.Core.Wrappers.PutDeviceRequest.DisplayName
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest.DisplayName
  nameWithType: PutDeviceRequest.DisplayName
- uid: VPEAR.Core.Wrappers.PutDeviceRequest.Frequency
  name: Frequency
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html#VPEAR_Core_Wrappers_PutDeviceRequest_Frequency
  commentId: P:VPEAR.Core.Wrappers.PutDeviceRequest.Frequency
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest.Frequency
  nameWithType: PutDeviceRequest.Frequency
- uid: VPEAR.Core.Wrappers.PutDeviceRequest.Frequency*
  name: Frequency
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html#VPEAR_Core_Wrappers_PutDeviceRequest_Frequency_
  commentId: Overload:VPEAR.Core.Wrappers.PutDeviceRequest.Frequency
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest.Frequency
  nameWithType: PutDeviceRequest.Frequency
- uid: VPEAR.Core.Wrappers.PutDeviceRequest.RequiredSensors
  name: RequiredSensors
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html#VPEAR_Core_Wrappers_PutDeviceRequest_RequiredSensors
  commentId: P:VPEAR.Core.Wrappers.PutDeviceRequest.RequiredSensors
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest.RequiredSensors
  nameWithType: PutDeviceRequest.RequiredSensors
- uid: VPEAR.Core.Wrappers.PutDeviceRequest.RequiredSensors*
  name: RequiredSensors
  href: api/VPEAR.Core.Wrappers.PutDeviceRequest.html#VPEAR_Core_Wrappers_PutDeviceRequest_RequiredSensors_
  commentId: Overload:VPEAR.Core.Wrappers.PutDeviceRequest.RequiredSensors
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutDeviceRequest.RequiredSensors
  nameWithType: PutDeviceRequest.RequiredSensors
- uid: VPEAR.Core.Wrappers.PutFilterRequest
  name: PutFilterRequest
  href: api/VPEAR.Core.Wrappers.PutFilterRequest.html
  commentId: T:VPEAR.Core.Wrappers.PutFilterRequest
  fullName: VPEAR.Core.Wrappers.PutFilterRequest
  nameWithType: PutFilterRequest
- uid: VPEAR.Core.Wrappers.PutFilterRequest.Noise
  name: Noise
  href: api/VPEAR.Core.Wrappers.PutFilterRequest.html#VPEAR_Core_Wrappers_PutFilterRequest_Noise
  commentId: P:VPEAR.Core.Wrappers.PutFilterRequest.Noise
  fullName: VPEAR.Core.Wrappers.PutFilterRequest.Noise
  nameWithType: PutFilterRequest.Noise
- uid: VPEAR.Core.Wrappers.PutFilterRequest.Noise*
  name: Noise
  href: api/VPEAR.Core.Wrappers.PutFilterRequest.html#VPEAR_Core_Wrappers_PutFilterRequest_Noise_
  commentId: Overload:VPEAR.Core.Wrappers.PutFilterRequest.Noise
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutFilterRequest.Noise
  nameWithType: PutFilterRequest.Noise
- uid: VPEAR.Core.Wrappers.PutFilterRequest.Smooth
  name: Smooth
  href: api/VPEAR.Core.Wrappers.PutFilterRequest.html#VPEAR_Core_Wrappers_PutFilterRequest_Smooth
  commentId: P:VPEAR.Core.Wrappers.PutFilterRequest.Smooth
  fullName: VPEAR.Core.Wrappers.PutFilterRequest.Smooth
  nameWithType: PutFilterRequest.Smooth
- uid: VPEAR.Core.Wrappers.PutFilterRequest.Smooth*
  name: Smooth
  href: api/VPEAR.Core.Wrappers.PutFilterRequest.html#VPEAR_Core_Wrappers_PutFilterRequest_Smooth_
  commentId: Overload:VPEAR.Core.Wrappers.PutFilterRequest.Smooth
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutFilterRequest.Smooth
  nameWithType: PutFilterRequest.Smooth
- uid: VPEAR.Core.Wrappers.PutFilterRequest.Spot
  name: Spot
  href: api/VPEAR.Core.Wrappers.PutFilterRequest.html#VPEAR_Core_Wrappers_PutFilterRequest_Spot
  commentId: P:VPEAR.Core.Wrappers.PutFilterRequest.Spot
  fullName: VPEAR.Core.Wrappers.PutFilterRequest.Spot
  nameWithType: PutFilterRequest.Spot
- uid: VPEAR.Core.Wrappers.PutFilterRequest.Spot*
  name: Spot
  href: api/VPEAR.Core.Wrappers.PutFilterRequest.html#VPEAR_Core_Wrappers_PutFilterRequest_Spot_
  commentId: Overload:VPEAR.Core.Wrappers.PutFilterRequest.Spot
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutFilterRequest.Spot
  nameWithType: PutFilterRequest.Spot
- uid: VPEAR.Core.Wrappers.PutFirmwareRequest
  name: PutFirmwareRequest
  href: api/VPEAR.Core.Wrappers.PutFirmwareRequest.html
  commentId: T:VPEAR.Core.Wrappers.PutFirmwareRequest
  fullName: VPEAR.Core.Wrappers.PutFirmwareRequest
  nameWithType: PutFirmwareRequest
- uid: VPEAR.Core.Wrappers.PutFirmwareRequest.Package
  name: Package
  href: api/VPEAR.Core.Wrappers.PutFirmwareRequest.html#VPEAR_Core_Wrappers_PutFirmwareRequest_Package
  commentId: P:VPEAR.Core.Wrappers.PutFirmwareRequest.Package
  fullName: VPEAR.Core.Wrappers.PutFirmwareRequest.Package
  nameWithType: PutFirmwareRequest.Package
- uid: VPEAR.Core.Wrappers.PutFirmwareRequest.Package*
  name: Package
  href: api/VPEAR.Core.Wrappers.PutFirmwareRequest.html#VPEAR_Core_Wrappers_PutFirmwareRequest_Package_
  commentId: Overload:VPEAR.Core.Wrappers.PutFirmwareRequest.Package
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutFirmwareRequest.Package
  nameWithType: PutFirmwareRequest.Package
- uid: VPEAR.Core.Wrappers.PutFirmwareRequest.Source
  name: Source
  href: api/VPEAR.Core.Wrappers.PutFirmwareRequest.html#VPEAR_Core_Wrappers_PutFirmwareRequest_Source
  commentId: P:VPEAR.Core.Wrappers.PutFirmwareRequest.Source
  fullName: VPEAR.Core.Wrappers.PutFirmwareRequest.Source
  nameWithType: PutFirmwareRequest.Source
- uid: VPEAR.Core.Wrappers.PutFirmwareRequest.Source*
  name: Source
  href: api/VPEAR.Core.Wrappers.PutFirmwareRequest.html#VPEAR_Core_Wrappers_PutFirmwareRequest_Source_
  commentId: Overload:VPEAR.Core.Wrappers.PutFirmwareRequest.Source
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutFirmwareRequest.Source
  nameWithType: PutFirmwareRequest.Source
- uid: VPEAR.Core.Wrappers.PutFirmwareRequest.Upgrade
  name: Upgrade
  href: api/VPEAR.Core.Wrappers.PutFirmwareRequest.html#VPEAR_Core_Wrappers_PutFirmwareRequest_Upgrade
  commentId: P:VPEAR.Core.Wrappers.PutFirmwareRequest.Upgrade
  fullName: VPEAR.Core.Wrappers.PutFirmwareRequest.Upgrade
  nameWithType: PutFirmwareRequest.Upgrade
- uid: VPEAR.Core.Wrappers.PutFirmwareRequest.Upgrade*
  name: Upgrade
  href: api/VPEAR.Core.Wrappers.PutFirmwareRequest.html#VPEAR_Core_Wrappers_PutFirmwareRequest_Upgrade_
  commentId: Overload:VPEAR.Core.Wrappers.PutFirmwareRequest.Upgrade
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutFirmwareRequest.Upgrade
  nameWithType: PutFirmwareRequest.Upgrade
- uid: VPEAR.Core.Wrappers.PutLoginRequest
  name: PutLoginRequest
  href: api/VPEAR.Core.Wrappers.PutLoginRequest.html
  commentId: T:VPEAR.Core.Wrappers.PutLoginRequest
  fullName: VPEAR.Core.Wrappers.PutLoginRequest
  nameWithType: PutLoginRequest
- uid: VPEAR.Core.Wrappers.PutLoginRequest.Email
  name: Email
  href: api/VPEAR.Core.Wrappers.PutLoginRequest.html#VPEAR_Core_Wrappers_PutLoginRequest_Email
  commentId: P:VPEAR.Core.Wrappers.PutLoginRequest.Email
  fullName: VPEAR.Core.Wrappers.PutLoginRequest.Email
  nameWithType: PutLoginRequest.Email
- uid: VPEAR.Core.Wrappers.PutLoginRequest.Email*
  name: Email
  href: api/VPEAR.Core.Wrappers.PutLoginRequest.html#VPEAR_Core_Wrappers_PutLoginRequest_Email_
  commentId: Overload:VPEAR.Core.Wrappers.PutLoginRequest.Email
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutLoginRequest.Email
  nameWithType: PutLoginRequest.Email
- uid: VPEAR.Core.Wrappers.PutLoginRequest.Password
  name: Password
  href: api/VPEAR.Core.Wrappers.PutLoginRequest.html#VPEAR_Core_Wrappers_PutLoginRequest_Password
  commentId: P:VPEAR.Core.Wrappers.PutLoginRequest.Password
  fullName: VPEAR.Core.Wrappers.PutLoginRequest.Password
  nameWithType: PutLoginRequest.Password
- uid: VPEAR.Core.Wrappers.PutLoginRequest.Password*
  name: Password
  href: api/VPEAR.Core.Wrappers.PutLoginRequest.html#VPEAR_Core_Wrappers_PutLoginRequest_Password_
  commentId: Overload:VPEAR.Core.Wrappers.PutLoginRequest.Password
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutLoginRequest.Password
  nameWithType: PutLoginRequest.Password
- uid: VPEAR.Core.Wrappers.PutLoginResponse
  name: PutLoginResponse
  href: api/VPEAR.Core.Wrappers.PutLoginResponse.html
  commentId: T:VPEAR.Core.Wrappers.PutLoginResponse
  fullName: VPEAR.Core.Wrappers.PutLoginResponse
  nameWithType: PutLoginResponse
- uid: VPEAR.Core.Wrappers.PutLoginResponse.ExpiresAt
  name: ExpiresAt
  href: api/VPEAR.Core.Wrappers.PutLoginResponse.html#VPEAR_Core_Wrappers_PutLoginResponse_ExpiresAt
  commentId: P:VPEAR.Core.Wrappers.PutLoginResponse.ExpiresAt
  fullName: VPEAR.Core.Wrappers.PutLoginResponse.ExpiresAt
  nameWithType: PutLoginResponse.ExpiresAt
- uid: VPEAR.Core.Wrappers.PutLoginResponse.ExpiresAt*
  name: ExpiresAt
  href: api/VPEAR.Core.Wrappers.PutLoginResponse.html#VPEAR_Core_Wrappers_PutLoginResponse_ExpiresAt_
  commentId: Overload:VPEAR.Core.Wrappers.PutLoginResponse.ExpiresAt
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutLoginResponse.ExpiresAt
  nameWithType: PutLoginResponse.ExpiresAt
- uid: VPEAR.Core.Wrappers.PutLoginResponse.Token
  name: Token
  href: api/VPEAR.Core.Wrappers.PutLoginResponse.html#VPEAR_Core_Wrappers_PutLoginResponse_Token
  commentId: P:VPEAR.Core.Wrappers.PutLoginResponse.Token
  fullName: VPEAR.Core.Wrappers.PutLoginResponse.Token
  nameWithType: PutLoginResponse.Token
- uid: VPEAR.Core.Wrappers.PutLoginResponse.Token*
  name: Token
  href: api/VPEAR.Core.Wrappers.PutLoginResponse.html#VPEAR_Core_Wrappers_PutLoginResponse_Token_
  commentId: Overload:VPEAR.Core.Wrappers.PutLoginResponse.Token
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutLoginResponse.Token
  nameWithType: PutLoginResponse.Token
- uid: VPEAR.Core.Wrappers.PutUserRequest
  name: PutUserRequest
  href: api/VPEAR.Core.Wrappers.PutUserRequest.html
  commentId: T:VPEAR.Core.Wrappers.PutUserRequest
  fullName: VPEAR.Core.Wrappers.PutUserRequest
  nameWithType: PutUserRequest
- uid: VPEAR.Core.Wrappers.PutUserRequest.IsVerified
  name: IsVerified
  href: api/VPEAR.Core.Wrappers.PutUserRequest.html#VPEAR_Core_Wrappers_PutUserRequest_IsVerified
  commentId: P:VPEAR.Core.Wrappers.PutUserRequest.IsVerified
  fullName: VPEAR.Core.Wrappers.PutUserRequest.IsVerified
  nameWithType: PutUserRequest.IsVerified
- uid: VPEAR.Core.Wrappers.PutUserRequest.IsVerified*
  name: IsVerified
  href: api/VPEAR.Core.Wrappers.PutUserRequest.html#VPEAR_Core_Wrappers_PutUserRequest_IsVerified_
  commentId: Overload:VPEAR.Core.Wrappers.PutUserRequest.IsVerified
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutUserRequest.IsVerified
  nameWithType: PutUserRequest.IsVerified
- uid: VPEAR.Core.Wrappers.PutUserRequest.NewPassword
  name: NewPassword
  href: api/VPEAR.Core.Wrappers.PutUserRequest.html#VPEAR_Core_Wrappers_PutUserRequest_NewPassword
  commentId: P:VPEAR.Core.Wrappers.PutUserRequest.NewPassword
  fullName: VPEAR.Core.Wrappers.PutUserRequest.NewPassword
  nameWithType: PutUserRequest.NewPassword
- uid: VPEAR.Core.Wrappers.PutUserRequest.NewPassword*
  name: NewPassword
  href: api/VPEAR.Core.Wrappers.PutUserRequest.html#VPEAR_Core_Wrappers_PutUserRequest_NewPassword_
  commentId: Overload:VPEAR.Core.Wrappers.PutUserRequest.NewPassword
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutUserRequest.NewPassword
  nameWithType: PutUserRequest.NewPassword
- uid: VPEAR.Core.Wrappers.PutUserRequest.OldPassword
  name: OldPassword
  href: api/VPEAR.Core.Wrappers.PutUserRequest.html#VPEAR_Core_Wrappers_PutUserRequest_OldPassword
  commentId: P:VPEAR.Core.Wrappers.PutUserRequest.OldPassword
  fullName: VPEAR.Core.Wrappers.PutUserRequest.OldPassword
  nameWithType: PutUserRequest.OldPassword
- uid: VPEAR.Core.Wrappers.PutUserRequest.OldPassword*
  name: OldPassword
  href: api/VPEAR.Core.Wrappers.PutUserRequest.html#VPEAR_Core_Wrappers_PutUserRequest_OldPassword_
  commentId: Overload:VPEAR.Core.Wrappers.PutUserRequest.OldPassword
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutUserRequest.OldPassword
  nameWithType: PutUserRequest.OldPassword
- uid: VPEAR.Core.Wrappers.PutWifiRequest
  name: PutWifiRequest
  href: api/VPEAR.Core.Wrappers.PutWifiRequest.html
  commentId: T:VPEAR.Core.Wrappers.PutWifiRequest
  fullName: VPEAR.Core.Wrappers.PutWifiRequest
  nameWithType: PutWifiRequest
- uid: VPEAR.Core.Wrappers.PutWifiRequest.Mode
  name: Mode
  href: api/VPEAR.Core.Wrappers.PutWifiRequest.html#VPEAR_Core_Wrappers_PutWifiRequest_Mode
  commentId: P:VPEAR.Core.Wrappers.PutWifiRequest.Mode
  fullName: VPEAR.Core.Wrappers.PutWifiRequest.Mode
  nameWithType: PutWifiRequest.Mode
- uid: VPEAR.Core.Wrappers.PutWifiRequest.Mode*
  name: Mode
  href: api/VPEAR.Core.Wrappers.PutWifiRequest.html#VPEAR_Core_Wrappers_PutWifiRequest_Mode_
  commentId: Overload:VPEAR.Core.Wrappers.PutWifiRequest.Mode
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutWifiRequest.Mode
  nameWithType: PutWifiRequest.Mode
- uid: VPEAR.Core.Wrappers.PutWifiRequest.Password
  name: Password
  href: api/VPEAR.Core.Wrappers.PutWifiRequest.html#VPEAR_Core_Wrappers_PutWifiRequest_Password
  commentId: P:VPEAR.Core.Wrappers.PutWifiRequest.Password
  fullName: VPEAR.Core.Wrappers.PutWifiRequest.Password
  nameWithType: PutWifiRequest.Password
- uid: VPEAR.Core.Wrappers.PutWifiRequest.Password*
  name: Password
  href: api/VPEAR.Core.Wrappers.PutWifiRequest.html#VPEAR_Core_Wrappers_PutWifiRequest_Password_
  commentId: Overload:VPEAR.Core.Wrappers.PutWifiRequest.Password
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutWifiRequest.Password
  nameWithType: PutWifiRequest.Password
- uid: VPEAR.Core.Wrappers.PutWifiRequest.Ssid
  name: Ssid
  href: api/VPEAR.Core.Wrappers.PutWifiRequest.html#VPEAR_Core_Wrappers_PutWifiRequest_Ssid
  commentId: P:VPEAR.Core.Wrappers.PutWifiRequest.Ssid
  fullName: VPEAR.Core.Wrappers.PutWifiRequest.Ssid
  nameWithType: PutWifiRequest.Ssid
- uid: VPEAR.Core.Wrappers.PutWifiRequest.Ssid*
  name: Ssid
  href: api/VPEAR.Core.Wrappers.PutWifiRequest.html#VPEAR_Core_Wrappers_PutWifiRequest_Ssid_
  commentId: Overload:VPEAR.Core.Wrappers.PutWifiRequest.Ssid
  isSpec: "True"
  fullName: VPEAR.Core.Wrappers.PutWifiRequest.Ssid
  nameWithType: PutWifiRequest.Ssid
- uid: VPEAR.Server
  name: VPEAR.Server
  href: api/VPEAR.Server.html
  commentId: N:VPEAR.Server
  fullName: VPEAR.Server
  nameWithType: VPEAR.Server
- uid: VPEAR.Server.ClientModule
  name: ClientModule
  href: api/VPEAR.Server.ClientModule.html
  commentId: T:VPEAR.Server.ClientModule
  fullName: VPEAR.Server.ClientModule
  nameWithType: ClientModule
- uid: VPEAR.Server.ClientModule.Load(Autofac.ContainerBuilder)
  name: Load(ContainerBuilder)
  href: api/VPEAR.Server.ClientModule.html#VPEAR_Server_ClientModule_Load_Autofac_ContainerBuilder_
  commentId: M:VPEAR.Server.ClientModule.Load(Autofac.ContainerBuilder)
  fullName: VPEAR.Server.ClientModule.Load(Autofac.ContainerBuilder)
  nameWithType: ClientModule.Load(ContainerBuilder)
- uid: VPEAR.Server.ClientModule.Load*
  name: Load
  href: api/VPEAR.Server.ClientModule.html#VPEAR_Server_ClientModule_Load_
  commentId: Overload:VPEAR.Server.ClientModule.Load
  isSpec: "True"
  fullName: VPEAR.Server.ClientModule.Load
  nameWithType: ClientModule.Load
- uid: VPEAR.Server.Constants
  name: Constants
  href: api/VPEAR.Server.Constants.html
  commentId: T:VPEAR.Server.Constants
  fullName: VPEAR.Server.Constants
  nameWithType: Constants
- uid: VPEAR.Server.Constants.Defaults
  name: Constants.Defaults
  href: api/VPEAR.Server.Constants.Defaults.html
  commentId: T:VPEAR.Server.Constants.Defaults
  fullName: VPEAR.Server.Constants.Defaults
  nameWithType: Constants.Defaults
- uid: VPEAR.Server.Constants.Defaults.DefaultConfigurationPath
  name: DefaultConfigurationPath
  href: api/VPEAR.Server.Constants.Defaults.html#VPEAR_Server_Constants_Defaults_DefaultConfigurationPath
  commentId: F:VPEAR.Server.Constants.Defaults.DefaultConfigurationPath
  fullName: VPEAR.Server.Constants.Defaults.DefaultConfigurationPath
  nameWithType: Constants.Defaults.DefaultConfigurationPath
- uid: VPEAR.Server.Constants.Defaults.DefaultHttpPort
  name: DefaultHttpPort
  href: api/VPEAR.Server.Constants.Defaults.html#VPEAR_Server_Constants_Defaults_DefaultHttpPort
  commentId: F:VPEAR.Server.Constants.Defaults.DefaultHttpPort
  fullName: VPEAR.Server.Constants.Defaults.DefaultHttpPort
  nameWithType: Constants.Defaults.DefaultHttpPort
- uid: VPEAR.Server.Constants.Defaults.DefaultHttpsPort
  name: DefaultHttpsPort
  href: api/VPEAR.Server.Constants.Defaults.html#VPEAR_Server_Constants_Defaults_DefaultHttpsPort
  commentId: F:VPEAR.Server.Constants.Defaults.DefaultHttpsPort
  fullName: VPEAR.Server.Constants.Defaults.DefaultHttpsPort
  nameWithType: Constants.Defaults.DefaultHttpsPort
- uid: VPEAR.Server.Constants.Defaults.DefaultLogLevel
  name: DefaultLogLevel
  href: api/VPEAR.Server.Constants.Defaults.html#VPEAR_Server_Constants_Defaults_DefaultLogLevel
  commentId: F:VPEAR.Server.Constants.Defaults.DefaultLogLevel
  fullName: VPEAR.Server.Constants.Defaults.DefaultLogLevel
  nameWithType: Constants.Defaults.DefaultLogLevel
- uid: VPEAR.Server.Constants.Defaults.DefaultResponseType
  name: DefaultResponseType
  href: api/VPEAR.Server.Constants.Defaults.html#VPEAR_Server_Constants_Defaults_DefaultResponseType
  commentId: F:VPEAR.Server.Constants.Defaults.DefaultResponseType
  fullName: VPEAR.Server.Constants.Defaults.DefaultResponseType
  nameWithType: Constants.Defaults.DefaultResponseType
- uid: VPEAR.Server.Constants.Defaults.DefaultUrls
  name: DefaultUrls
  href: api/VPEAR.Server.Constants.Defaults.html#VPEAR_Server_Constants_Defaults_DefaultUrls
  commentId: F:VPEAR.Server.Constants.Defaults.DefaultUrls
  fullName: VPEAR.Server.Constants.Defaults.DefaultUrls
  nameWithType: Constants.Defaults.DefaultUrls
- uid: VPEAR.Server.Constants.ErrorMessages
  name: Constants.ErrorMessages
  href: api/VPEAR.Server.Constants.ErrorMessages.html
  commentId: T:VPEAR.Server.Constants.ErrorMessages
  fullName: VPEAR.Server.Constants.ErrorMessages
  nameWithType: Constants.ErrorMessages
- uid: VPEAR.Server.Constants.ErrorMessages.BadRequest
  name: BadRequest
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_BadRequest
  commentId: F:VPEAR.Server.Constants.ErrorMessages.BadRequest
  fullName: VPEAR.Server.Constants.ErrorMessages.BadRequest
  nameWithType: Constants.ErrorMessages.BadRequest
- uid: VPEAR.Server.Constants.ErrorMessages.DeviceIsArchived
  name: DeviceIsArchived
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_DeviceIsArchived
  commentId: F:VPEAR.Server.Constants.ErrorMessages.DeviceIsArchived
  fullName: VPEAR.Server.Constants.ErrorMessages.DeviceIsArchived
  nameWithType: Constants.ErrorMessages.DeviceIsArchived
- uid: VPEAR.Server.Constants.ErrorMessages.DeviceIsNotReachable
  name: DeviceIsNotReachable
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_DeviceIsNotReachable
  commentId: F:VPEAR.Server.Constants.ErrorMessages.DeviceIsNotReachable
  fullName: VPEAR.Server.Constants.ErrorMessages.DeviceIsNotReachable
  nameWithType: Constants.ErrorMessages.DeviceIsNotReachable
- uid: VPEAR.Server.Constants.ErrorMessages.DeviceIsRecording
  name: DeviceIsRecording
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_DeviceIsRecording
  commentId: F:VPEAR.Server.Constants.ErrorMessages.DeviceIsRecording
  fullName: VPEAR.Server.Constants.ErrorMessages.DeviceIsRecording
  nameWithType: Constants.ErrorMessages.DeviceIsRecording
- uid: VPEAR.Server.Constants.ErrorMessages.DeviceNotFound
  name: DeviceNotFound
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_DeviceNotFound
  commentId: F:VPEAR.Server.Constants.ErrorMessages.DeviceNotFound
  fullName: VPEAR.Server.Constants.ErrorMessages.DeviceNotFound
  nameWithType: Constants.ErrorMessages.DeviceNotFound
- uid: VPEAR.Server.Constants.ErrorMessages.FirmwareNotFound
  name: FirmwareNotFound
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_FirmwareNotFound
  commentId: F:VPEAR.Server.Constants.ErrorMessages.FirmwareNotFound
  fullName: VPEAR.Server.Constants.ErrorMessages.FirmwareNotFound
  nameWithType: Constants.ErrorMessages.FirmwareNotFound
- uid: VPEAR.Server.Constants.ErrorMessages.FramesNotFound
  name: FramesNotFound
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_FramesNotFound
  commentId: F:VPEAR.Server.Constants.ErrorMessages.FramesNotFound
  fullName: VPEAR.Server.Constants.ErrorMessages.FramesNotFound
  nameWithType: Constants.ErrorMessages.FramesNotFound
- uid: VPEAR.Server.Constants.ErrorMessages.InternalServerError
  name: InternalServerError
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_InternalServerError
  commentId: F:VPEAR.Server.Constants.ErrorMessages.InternalServerError
  fullName: VPEAR.Server.Constants.ErrorMessages.InternalServerError
  nameWithType: Constants.ErrorMessages.InternalServerError
- uid: VPEAR.Server.Constants.ErrorMessages.InvalidPassword
  name: InvalidPassword
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_InvalidPassword
  commentId: F:VPEAR.Server.Constants.ErrorMessages.InvalidPassword
  fullName: VPEAR.Server.Constants.ErrorMessages.InvalidPassword
  nameWithType: Constants.ErrorMessages.InvalidPassword
- uid: VPEAR.Server.Constants.ErrorMessages.LastAdminError
  name: LastAdminError
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_LastAdminError
  commentId: F:VPEAR.Server.Constants.ErrorMessages.LastAdminError
  fullName: VPEAR.Server.Constants.ErrorMessages.LastAdminError
  nameWithType: Constants.ErrorMessages.LastAdminError
- uid: VPEAR.Server.Constants.ErrorMessages.SensorsNotFound
  name: SensorsNotFound
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_SensorsNotFound
  commentId: F:VPEAR.Server.Constants.ErrorMessages.SensorsNotFound
  fullName: VPEAR.Server.Constants.ErrorMessages.SensorsNotFound
  nameWithType: Constants.ErrorMessages.SensorsNotFound
- uid: VPEAR.Server.Constants.ErrorMessages.StartGreaterOrEqualsStop
  name: StartGreaterOrEqualsStop
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_StartGreaterOrEqualsStop
  commentId: F:VPEAR.Server.Constants.ErrorMessages.StartGreaterOrEqualsStop
  fullName: VPEAR.Server.Constants.ErrorMessages.StartGreaterOrEqualsStop
  nameWithType: Constants.ErrorMessages.StartGreaterOrEqualsStop
- uid: VPEAR.Server.Constants.ErrorMessages.UserEmailAlreadyUsed
  name: UserEmailAlreadyUsed
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_UserEmailAlreadyUsed
  commentId: F:VPEAR.Server.Constants.ErrorMessages.UserEmailAlreadyUsed
  fullName: VPEAR.Server.Constants.ErrorMessages.UserEmailAlreadyUsed
  nameWithType: Constants.ErrorMessages.UserEmailAlreadyUsed
- uid: VPEAR.Server.Constants.ErrorMessages.UserNotFound
  name: UserNotFound
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_UserNotFound
  commentId: F:VPEAR.Server.Constants.ErrorMessages.UserNotFound
  fullName: VPEAR.Server.Constants.ErrorMessages.UserNotFound
  nameWithType: Constants.ErrorMessages.UserNotFound
- uid: VPEAR.Server.Constants.ErrorMessages.UserNotVerfied
  name: UserNotVerfied
  href: api/VPEAR.Server.Constants.ErrorMessages.html#VPEAR_Server_Constants_ErrorMessages_UserNotVerfied
  commentId: F:VPEAR.Server.Constants.ErrorMessages.UserNotVerfied
  fullName: VPEAR.Server.Constants.ErrorMessages.UserNotVerfied
  nameWithType: Constants.ErrorMessages.UserNotVerfied
- uid: VPEAR.Server.Constants.Limits
  name: Constants.Limits
  href: api/VPEAR.Server.Constants.Limits.html
  commentId: T:VPEAR.Server.Constants.Limits
  fullName: VPEAR.Server.Constants.Limits
  nameWithType: Constants.Limits
- uid: VPEAR.Server.Constants.Limits.MaxPasswordLength
  name: MaxPasswordLength
  href: api/VPEAR.Server.Constants.Limits.html#VPEAR_Server_Constants_Limits_MaxPasswordLength
  commentId: F:VPEAR.Server.Constants.Limits.MaxPasswordLength
  fullName: VPEAR.Server.Constants.Limits.MaxPasswordLength
  nameWithType: Constants.Limits.MaxPasswordLength
- uid: VPEAR.Server.Constants.Limits.MaxStringLength
  name: MaxStringLength
  href: api/VPEAR.Server.Constants.Limits.html#VPEAR_Server_Constants_Limits_MaxStringLength
  commentId: F:VPEAR.Server.Constants.Limits.MaxStringLength
  fullName: VPEAR.Server.Constants.Limits.MaxStringLength
  nameWithType: Constants.Limits.MaxStringLength
- uid: VPEAR.Server.Constants.Limits.MinPasswordLength
  name: MinPasswordLength
  href: api/VPEAR.Server.Constants.Limits.html#VPEAR_Server_Constants_Limits_MinPasswordLength
  commentId: F:VPEAR.Server.Constants.Limits.MinPasswordLength
  fullName: VPEAR.Server.Constants.Limits.MinPasswordLength
  nameWithType: Constants.Limits.MinPasswordLength
- uid: VPEAR.Server.Constants.Limits.MinStringLength
  name: MinStringLength
  href: api/VPEAR.Server.Constants.Limits.html#VPEAR_Server_Constants_Limits_MinStringLength
  commentId: F:VPEAR.Server.Constants.Limits.MinStringLength
  fullName: VPEAR.Server.Constants.Limits.MinStringLength
  nameWithType: Constants.Limits.MinStringLength
- uid: VPEAR.Server.Constants.Regex
  name: Constants.Regex
  href: api/VPEAR.Server.Constants.Regex.html
  commentId: T:VPEAR.Server.Constants.Regex
  fullName: VPEAR.Server.Constants.Regex
  nameWithType: Constants.Regex
- uid: VPEAR.Server.Constants.Regex.IPv4
  name: IPv4
  href: api/VPEAR.Server.Constants.Regex.html#VPEAR_Server_Constants_Regex_IPv4
  commentId: F:VPEAR.Server.Constants.Regex.IPv4
  fullName: VPEAR.Server.Constants.Regex.IPv4
  nameWithType: Constants.Regex.IPv4
- uid: VPEAR.Server.Constants.Roles
  name: Constants.Roles
  href: api/VPEAR.Server.Constants.Roles.html
  commentId: T:VPEAR.Server.Constants.Roles
  fullName: VPEAR.Server.Constants.Roles
  nameWithType: Constants.Roles
- uid: VPEAR.Server.Constants.Roles.AdminRole
  name: AdminRole
  href: api/VPEAR.Server.Constants.Roles.html#VPEAR_Server_Constants_Roles_AdminRole
  commentId: F:VPEAR.Server.Constants.Roles.AdminRole
  fullName: VPEAR.Server.Constants.Roles.AdminRole
  nameWithType: Constants.Roles.AdminRole
- uid: VPEAR.Server.Constants.Roles.AllRoles
  name: AllRoles
  href: api/VPEAR.Server.Constants.Roles.html#VPEAR_Server_Constants_Roles_AllRoles
  commentId: F:VPEAR.Server.Constants.Roles.AllRoles
  fullName: VPEAR.Server.Constants.Roles.AllRoles
  nameWithType: Constants.Roles.AllRoles
- uid: VPEAR.Server.Constants.Roles.None
  name: None
  href: api/VPEAR.Server.Constants.Roles.html#VPEAR_Server_Constants_Roles_None
  commentId: F:VPEAR.Server.Constants.Roles.None
  fullName: VPEAR.Server.Constants.Roles.None
  nameWithType: Constants.Roles.None
- uid: VPEAR.Server.Constants.Roles.UserRole
  name: UserRole
  href: api/VPEAR.Server.Constants.Roles.html#VPEAR_Server_Constants_Roles_UserRole
  commentId: F:VPEAR.Server.Constants.Roles.UserRole
  fullName: VPEAR.Server.Constants.Roles.UserRole
  nameWithType: Constants.Roles.UserRole
- uid: VPEAR.Server.Constants.Routes
  name: Constants.Routes
  href: api/VPEAR.Server.Constants.Routes.html
  commentId: T:VPEAR.Server.Constants.Routes
  fullName: VPEAR.Server.Constants.Routes
  nameWithType: Constants.Routes
- uid: VPEAR.Server.Constants.Routes.ApiPrefix
  name: ApiPrefix
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_ApiPrefix
  commentId: F:VPEAR.Server.Constants.Routes.ApiPrefix
  fullName: VPEAR.Server.Constants.Routes.ApiPrefix
  nameWithType: Constants.Routes.ApiPrefix
- uid: VPEAR.Server.Constants.Routes.ApiVersion
  name: ApiVersion
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_ApiVersion
  commentId: F:VPEAR.Server.Constants.Routes.ApiVersion
  fullName: VPEAR.Server.Constants.Routes.ApiVersion
  nameWithType: Constants.Routes.ApiVersion
- uid: VPEAR.Server.Constants.Routes.BaseRoute
  name: BaseRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_BaseRoute
  commentId: F:VPEAR.Server.Constants.Routes.BaseRoute
  fullName: VPEAR.Server.Constants.Routes.BaseRoute
  nameWithType: Constants.Routes.BaseRoute
- uid: VPEAR.Server.Constants.Routes.DeviceRoute
  name: DeviceRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_DeviceRoute
  commentId: F:VPEAR.Server.Constants.Routes.DeviceRoute
  fullName: VPEAR.Server.Constants.Routes.DeviceRoute
  nameWithType: Constants.Routes.DeviceRoute
- uid: VPEAR.Server.Constants.Routes.FilterRoute
  name: FilterRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_FilterRoute
  commentId: F:VPEAR.Server.Constants.Routes.FilterRoute
  fullName: VPEAR.Server.Constants.Routes.FilterRoute
  nameWithType: Constants.Routes.FilterRoute
- uid: VPEAR.Server.Constants.Routes.FirmwareRoute
  name: FirmwareRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_FirmwareRoute
  commentId: F:VPEAR.Server.Constants.Routes.FirmwareRoute
  fullName: VPEAR.Server.Constants.Routes.FirmwareRoute
  nameWithType: Constants.Routes.FirmwareRoute
- uid: VPEAR.Server.Constants.Routes.FramesRoute
  name: FramesRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_FramesRoute
  commentId: F:VPEAR.Server.Constants.Routes.FramesRoute
  fullName: VPEAR.Server.Constants.Routes.FramesRoute
  nameWithType: Constants.Routes.FramesRoute
- uid: VPEAR.Server.Constants.Routes.LoginRoute
  name: LoginRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_LoginRoute
  commentId: F:VPEAR.Server.Constants.Routes.LoginRoute
  fullName: VPEAR.Server.Constants.Routes.LoginRoute
  nameWithType: Constants.Routes.LoginRoute
- uid: VPEAR.Server.Constants.Routes.LogoutRoute
  name: LogoutRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_LogoutRoute
  commentId: F:VPEAR.Server.Constants.Routes.LogoutRoute
  fullName: VPEAR.Server.Constants.Routes.LogoutRoute
  nameWithType: Constants.Routes.LogoutRoute
- uid: VPEAR.Server.Constants.Routes.PowerRoute
  name: PowerRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_PowerRoute
  commentId: F:VPEAR.Server.Constants.Routes.PowerRoute
  fullName: VPEAR.Server.Constants.Routes.PowerRoute
  nameWithType: Constants.Routes.PowerRoute
- uid: VPEAR.Server.Constants.Routes.RegisterRoute
  name: RegisterRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_RegisterRoute
  commentId: F:VPEAR.Server.Constants.Routes.RegisterRoute
  fullName: VPEAR.Server.Constants.Routes.RegisterRoute
  nameWithType: Constants.Routes.RegisterRoute
- uid: VPEAR.Server.Constants.Routes.SensorsRoute
  name: SensorsRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_SensorsRoute
  commentId: F:VPEAR.Server.Constants.Routes.SensorsRoute
  fullName: VPEAR.Server.Constants.Routes.SensorsRoute
  nameWithType: Constants.Routes.SensorsRoute
- uid: VPEAR.Server.Constants.Routes.UsersRoute
  name: UsersRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_UsersRoute
  commentId: F:VPEAR.Server.Constants.Routes.UsersRoute
  fullName: VPEAR.Server.Constants.Routes.UsersRoute
  nameWithType: Constants.Routes.UsersRoute
- uid: VPEAR.Server.Constants.Routes.WifiRoute
  name: WifiRoute
  href: api/VPEAR.Server.Constants.Routes.html#VPEAR_Server_Constants_Routes_WifiRoute
  commentId: F:VPEAR.Server.Constants.Routes.WifiRoute
  fullName: VPEAR.Server.Constants.Routes.WifiRoute
  nameWithType: Constants.Routes.WifiRoute
- uid: VPEAR.Server.Constants.Schemas
  name: Constants.Schemas
  href: api/VPEAR.Server.Constants.Schemas.html
  commentId: T:VPEAR.Server.Constants.Schemas
  fullName: VPEAR.Server.Constants.Schemas
  nameWithType: Constants.Schemas
- uid: VPEAR.Server.Constants.Schemas.DbSchema
  name: DbSchema
  href: api/VPEAR.Server.Constants.Schemas.html#VPEAR_Server_Constants_Schemas_DbSchema
  commentId: F:VPEAR.Server.Constants.Schemas.DbSchema
  fullName: VPEAR.Server.Constants.Schemas.DbSchema
  nameWithType: Constants.Schemas.DbSchema
- uid: VPEAR.Server.Constants.Schemas.DeviceSchema
  name: DeviceSchema
  href: api/VPEAR.Server.Constants.Schemas.html#VPEAR_Server_Constants_Schemas_DeviceSchema
  commentId: F:VPEAR.Server.Constants.Schemas.DeviceSchema
  fullName: VPEAR.Server.Constants.Schemas.DeviceSchema
  nameWithType: Constants.Schemas.DeviceSchema
- uid: VPEAR.Server.Constants.Schemas.FilterSchema
  name: FilterSchema
  href: api/VPEAR.Server.Constants.Schemas.html#VPEAR_Server_Constants_Schemas_FilterSchema
  commentId: F:VPEAR.Server.Constants.Schemas.FilterSchema
  fullName: VPEAR.Server.Constants.Schemas.FilterSchema
  nameWithType: Constants.Schemas.FilterSchema
- uid: VPEAR.Server.Constants.Schemas.FirmwareSchema
  name: FirmwareSchema
  href: api/VPEAR.Server.Constants.Schemas.html#VPEAR_Server_Constants_Schemas_FirmwareSchema
  commentId: F:VPEAR.Server.Constants.Schemas.FirmwareSchema
  fullName: VPEAR.Server.Constants.Schemas.FirmwareSchema
  nameWithType: Constants.Schemas.FirmwareSchema
- uid: VPEAR.Server.Constants.Schemas.FrameSchema
  name: FrameSchema
  href: api/VPEAR.Server.Constants.Schemas.html#VPEAR_Server_Constants_Schemas_FrameSchema
  commentId: F:VPEAR.Server.Constants.Schemas.FrameSchema
  fullName: VPEAR.Server.Constants.Schemas.FrameSchema
  nameWithType: Constants.Schemas.FrameSchema
- uid: VPEAR.Server.Constants.Schemas.SensorSchema
  name: SensorSchema
  href: api/VPEAR.Server.Constants.Schemas.html#VPEAR_Server_Constants_Schemas_SensorSchema
  commentId: F:VPEAR.Server.Constants.Schemas.SensorSchema
  fullName: VPEAR.Server.Constants.Schemas.SensorSchema
  nameWithType: Constants.Schemas.SensorSchema
- uid: VPEAR.Server.Constants.Schemas.TimeSchema
  name: TimeSchema
  href: api/VPEAR.Server.Constants.Schemas.html#VPEAR_Server_Constants_Schemas_TimeSchema
  commentId: F:VPEAR.Server.Constants.Schemas.TimeSchema
  fullName: VPEAR.Server.Constants.Schemas.TimeSchema
  nameWithType: Constants.Schemas.TimeSchema
- uid: VPEAR.Server.Constants.Schemas.WifiSchema
  name: WifiSchema
  href: api/VPEAR.Server.Constants.Schemas.html#VPEAR_Server_Constants_Schemas_WifiSchema
  commentId: F:VPEAR.Server.Constants.Schemas.WifiSchema
  fullName: VPEAR.Server.Constants.Schemas.WifiSchema
  nameWithType: Constants.Schemas.WifiSchema
- uid: VPEAR.Server.Constants.WifiModes
  name: Constants.WifiModes
  href: api/VPEAR.Server.Constants.WifiModes.html
  commentId: T:VPEAR.Server.Constants.WifiModes
  fullName: VPEAR.Server.Constants.WifiModes
  nameWithType: Constants.WifiModes
- uid: VPEAR.Server.Constants.WifiModes.All
  name: All
  href: api/VPEAR.Server.Constants.WifiModes.html#VPEAR_Server_Constants_WifiModes_All
  commentId: F:VPEAR.Server.Constants.WifiModes.All
  fullName: VPEAR.Server.Constants.WifiModes.All
  nameWithType: Constants.WifiModes.All
- uid: VPEAR.Server.Constants.WifiModes.Direct
  name: Direct
  href: api/VPEAR.Server.Constants.WifiModes.html#VPEAR_Server_Constants_WifiModes_Direct
  commentId: F:VPEAR.Server.Constants.WifiModes.Direct
  fullName: VPEAR.Server.Constants.WifiModes.Direct
  nameWithType: Constants.WifiModes.Direct
- uid: VPEAR.Server.Constants.WifiModes.Inderiect
  name: Inderiect
  href: api/VPEAR.Server.Constants.WifiModes.html#VPEAR_Server_Constants_WifiModes_Inderiect
  commentId: F:VPEAR.Server.Constants.WifiModes.Inderiect
  fullName: VPEAR.Server.Constants.WifiModes.Inderiect
  nameWithType: Constants.WifiModes.Inderiect
- uid: VPEAR.Server.Controllers
  name: VPEAR.Server.Controllers
  href: api/VPEAR.Server.Controllers.html
  commentId: N:VPEAR.Server.Controllers
  fullName: VPEAR.Server.Controllers
  nameWithType: VPEAR.Server.Controllers
- uid: VPEAR.Server.Controllers.BaseController
  name: BaseController
  href: api/VPEAR.Server.Controllers.BaseController.html
  commentId: T:VPEAR.Server.Controllers.BaseController
  fullName: VPEAR.Server.Controllers.BaseController
  nameWithType: BaseController
- uid: VPEAR.Server.Controllers.BaseController.OnGet
  name: OnGet()
  href: api/VPEAR.Server.Controllers.BaseController.html#VPEAR_Server_Controllers_BaseController_OnGet
  commentId: M:VPEAR.Server.Controllers.BaseController.OnGet
  fullName: VPEAR.Server.Controllers.BaseController.OnGet()
  nameWithType: BaseController.OnGet()
- uid: VPEAR.Server.Controllers.BaseController.OnGet*
  name: OnGet
  href: api/VPEAR.Server.Controllers.BaseController.html#VPEAR_Server_Controllers_BaseController_OnGet_
  commentId: Overload:VPEAR.Server.Controllers.BaseController.OnGet
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.BaseController.OnGet
  nameWithType: BaseController.OnGet
- uid: VPEAR.Server.Controllers.DeviceController
  name: DeviceController
  href: api/VPEAR.Server.Controllers.DeviceController.html
  commentId: T:VPEAR.Server.Controllers.DeviceController
  fullName: VPEAR.Server.Controllers.DeviceController
  nameWithType: DeviceController
- uid: VPEAR.Server.Controllers.DeviceController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.DeviceController},VPEAR.Core.Abstractions.IDeviceService)
  name: DeviceController(ILogger<DeviceController>, IDeviceService)
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController__ctor_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_DeviceController__VPEAR_Core_Abstractions_IDeviceService_
  commentId: M:VPEAR.Server.Controllers.DeviceController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.DeviceController},VPEAR.Core.Abstractions.IDeviceService)
  name.vb: DeviceController(ILogger(Of DeviceController), IDeviceService)
  fullName: VPEAR.Server.Controllers.DeviceController.DeviceController(Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.DeviceController>, VPEAR.Core.Abstractions.IDeviceService)
  fullName.vb: VPEAR.Server.Controllers.DeviceController.DeviceController(Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.DeviceController), VPEAR.Core.Abstractions.IDeviceService)
  nameWithType: DeviceController.DeviceController(ILogger<DeviceController>, IDeviceService)
  nameWithType.vb: DeviceController.DeviceController(ILogger(Of DeviceController), IDeviceService)
- uid: VPEAR.Server.Controllers.DeviceController.#ctor*
  name: DeviceController
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController__ctor_
  commentId: Overload:VPEAR.Server.Controllers.DeviceController.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.DeviceController.DeviceController
  nameWithType: DeviceController.DeviceController
- uid: VPEAR.Server.Controllers.DeviceController.OnDeleteAsync(System.Guid)
  name: OnDeleteAsync(Guid)
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnDeleteAsync_System_Guid_
  commentId: M:VPEAR.Server.Controllers.DeviceController.OnDeleteAsync(System.Guid)
  fullName: VPEAR.Server.Controllers.DeviceController.OnDeleteAsync(System.Guid)
  nameWithType: DeviceController.OnDeleteAsync(Guid)
- uid: VPEAR.Server.Controllers.DeviceController.OnDeleteAsync*
  name: OnDeleteAsync
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnDeleteAsync_
  commentId: Overload:VPEAR.Server.Controllers.DeviceController.OnDeleteAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.DeviceController.OnDeleteAsync
  nameWithType: DeviceController.OnDeleteAsync
- uid: VPEAR.Server.Controllers.DeviceController.OnGetAsync(VPEAR.Core.DeviceStatus)
  name: OnGetAsync(DeviceStatus)
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnGetAsync_VPEAR_Core_DeviceStatus_
  commentId: M:VPEAR.Server.Controllers.DeviceController.OnGetAsync(VPEAR.Core.DeviceStatus)
  fullName: VPEAR.Server.Controllers.DeviceController.OnGetAsync(VPEAR.Core.DeviceStatus)
  nameWithType: DeviceController.OnGetAsync(DeviceStatus)
- uid: VPEAR.Server.Controllers.DeviceController.OnGetAsync*
  name: OnGetAsync
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnGetAsync_
  commentId: Overload:VPEAR.Server.Controllers.DeviceController.OnGetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.DeviceController.OnGetAsync
  nameWithType: DeviceController.OnGetAsync
- uid: VPEAR.Server.Controllers.DeviceController.OnPostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  name: OnPostAsync(PostDeviceRequest)
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnPostAsync_VPEAR_Core_Wrappers_PostDeviceRequest_
  commentId: M:VPEAR.Server.Controllers.DeviceController.OnPostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  fullName: VPEAR.Server.Controllers.DeviceController.OnPostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  nameWithType: DeviceController.OnPostAsync(PostDeviceRequest)
- uid: VPEAR.Server.Controllers.DeviceController.OnPostAsync*
  name: OnPostAsync
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnPostAsync_
  commentId: Overload:VPEAR.Server.Controllers.DeviceController.OnPostAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.DeviceController.OnPostAsync
  nameWithType: DeviceController.OnPostAsync
- uid: VPEAR.Server.Controllers.DeviceController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutDeviceRequest)
  name: OnPutAsync(Guid, PutDeviceRequest)
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnPutAsync_System_Guid_VPEAR_Core_Wrappers_PutDeviceRequest_
  commentId: M:VPEAR.Server.Controllers.DeviceController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutDeviceRequest)
  fullName: VPEAR.Server.Controllers.DeviceController.OnPutAsync(System.Guid, VPEAR.Core.Wrappers.PutDeviceRequest)
  nameWithType: DeviceController.OnPutAsync(Guid, PutDeviceRequest)
- uid: VPEAR.Server.Controllers.DeviceController.OnPutAsync*
  name: OnPutAsync
  href: api/VPEAR.Server.Controllers.DeviceController.html#VPEAR_Server_Controllers_DeviceController_OnPutAsync_
  commentId: Overload:VPEAR.Server.Controllers.DeviceController.OnPutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.DeviceController.OnPutAsync
  nameWithType: DeviceController.OnPutAsync
- uid: VPEAR.Server.Controllers.FilterController
  name: FilterController
  href: api/VPEAR.Server.Controllers.FilterController.html
  commentId: T:VPEAR.Server.Controllers.FilterController
  fullName: VPEAR.Server.Controllers.FilterController
  nameWithType: FilterController
- uid: VPEAR.Server.Controllers.FilterController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FilterController},VPEAR.Core.Abstractions.IFilterService)
  name: FilterController(ILogger<FilterController>, IFilterService)
  href: api/VPEAR.Server.Controllers.FilterController.html#VPEAR_Server_Controllers_FilterController__ctor_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_FilterController__VPEAR_Core_Abstractions_IFilterService_
  commentId: M:VPEAR.Server.Controllers.FilterController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FilterController},VPEAR.Core.Abstractions.IFilterService)
  name.vb: FilterController(ILogger(Of FilterController), IFilterService)
  fullName: VPEAR.Server.Controllers.FilterController.FilterController(Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.FilterController>, VPEAR.Core.Abstractions.IFilterService)
  fullName.vb: VPEAR.Server.Controllers.FilterController.FilterController(Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.FilterController), VPEAR.Core.Abstractions.IFilterService)
  nameWithType: FilterController.FilterController(ILogger<FilterController>, IFilterService)
  nameWithType.vb: FilterController.FilterController(ILogger(Of FilterController), IFilterService)
- uid: VPEAR.Server.Controllers.FilterController.#ctor*
  name: FilterController
  href: api/VPEAR.Server.Controllers.FilterController.html#VPEAR_Server_Controllers_FilterController__ctor_
  commentId: Overload:VPEAR.Server.Controllers.FilterController.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.FilterController.FilterController
  nameWithType: FilterController.FilterController
- uid: VPEAR.Server.Controllers.FilterController.OnGetAsync(System.Guid)
  name: OnGetAsync(Guid)
  href: api/VPEAR.Server.Controllers.FilterController.html#VPEAR_Server_Controllers_FilterController_OnGetAsync_System_Guid_
  commentId: M:VPEAR.Server.Controllers.FilterController.OnGetAsync(System.Guid)
  fullName: VPEAR.Server.Controllers.FilterController.OnGetAsync(System.Guid)
  nameWithType: FilterController.OnGetAsync(Guid)
- uid: VPEAR.Server.Controllers.FilterController.OnGetAsync*
  name: OnGetAsync
  href: api/VPEAR.Server.Controllers.FilterController.html#VPEAR_Server_Controllers_FilterController_OnGetAsync_
  commentId: Overload:VPEAR.Server.Controllers.FilterController.OnGetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.FilterController.OnGetAsync
  nameWithType: FilterController.OnGetAsync
- uid: VPEAR.Server.Controllers.FilterController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutFilterRequest)
  name: OnPutAsync(Guid, PutFilterRequest)
  href: api/VPEAR.Server.Controllers.FilterController.html#VPEAR_Server_Controllers_FilterController_OnPutAsync_System_Guid_VPEAR_Core_Wrappers_PutFilterRequest_
  commentId: M:VPEAR.Server.Controllers.FilterController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutFilterRequest)
  fullName: VPEAR.Server.Controllers.FilterController.OnPutAsync(System.Guid, VPEAR.Core.Wrappers.PutFilterRequest)
  nameWithType: FilterController.OnPutAsync(Guid, PutFilterRequest)
- uid: VPEAR.Server.Controllers.FilterController.OnPutAsync*
  name: OnPutAsync
  href: api/VPEAR.Server.Controllers.FilterController.html#VPEAR_Server_Controllers_FilterController_OnPutAsync_
  commentId: Overload:VPEAR.Server.Controllers.FilterController.OnPutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.FilterController.OnPutAsync
  nameWithType: FilterController.OnPutAsync
- uid: VPEAR.Server.Controllers.FirmwareController
  name: FirmwareController
  href: api/VPEAR.Server.Controllers.FirmwareController.html
  commentId: T:VPEAR.Server.Controllers.FirmwareController
  fullName: VPEAR.Server.Controllers.FirmwareController
  nameWithType: FirmwareController
- uid: VPEAR.Server.Controllers.FirmwareController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FirmwareController},VPEAR.Core.Abstractions.IFirmwareService)
  name: FirmwareController(ILogger<FirmwareController>, IFirmwareService)
  href: api/VPEAR.Server.Controllers.FirmwareController.html#VPEAR_Server_Controllers_FirmwareController__ctor_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_FirmwareController__VPEAR_Core_Abstractions_IFirmwareService_
  commentId: M:VPEAR.Server.Controllers.FirmwareController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FirmwareController},VPEAR.Core.Abstractions.IFirmwareService)
  name.vb: FirmwareController(ILogger(Of FirmwareController), IFirmwareService)
  fullName: VPEAR.Server.Controllers.FirmwareController.FirmwareController(Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.FirmwareController>, VPEAR.Core.Abstractions.IFirmwareService)
  fullName.vb: VPEAR.Server.Controllers.FirmwareController.FirmwareController(Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.FirmwareController), VPEAR.Core.Abstractions.IFirmwareService)
  nameWithType: FirmwareController.FirmwareController(ILogger<FirmwareController>, IFirmwareService)
  nameWithType.vb: FirmwareController.FirmwareController(ILogger(Of FirmwareController), IFirmwareService)
- uid: VPEAR.Server.Controllers.FirmwareController.#ctor*
  name: FirmwareController
  href: api/VPEAR.Server.Controllers.FirmwareController.html#VPEAR_Server_Controllers_FirmwareController__ctor_
  commentId: Overload:VPEAR.Server.Controllers.FirmwareController.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.FirmwareController.FirmwareController
  nameWithType: FirmwareController.FirmwareController
- uid: VPEAR.Server.Controllers.FirmwareController.OnGetAsync(System.Guid)
  name: OnGetAsync(Guid)
  href: api/VPEAR.Server.Controllers.FirmwareController.html#VPEAR_Server_Controllers_FirmwareController_OnGetAsync_System_Guid_
  commentId: M:VPEAR.Server.Controllers.FirmwareController.OnGetAsync(System.Guid)
  fullName: VPEAR.Server.Controllers.FirmwareController.OnGetAsync(System.Guid)
  nameWithType: FirmwareController.OnGetAsync(Guid)
- uid: VPEAR.Server.Controllers.FirmwareController.OnGetAsync*
  name: OnGetAsync
  href: api/VPEAR.Server.Controllers.FirmwareController.html#VPEAR_Server_Controllers_FirmwareController_OnGetAsync_
  commentId: Overload:VPEAR.Server.Controllers.FirmwareController.OnGetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.FirmwareController.OnGetAsync
  nameWithType: FirmwareController.OnGetAsync
- uid: VPEAR.Server.Controllers.FirmwareController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutFirmwareRequest)
  name: OnPutAsync(Guid, PutFirmwareRequest)
  href: api/VPEAR.Server.Controllers.FirmwareController.html#VPEAR_Server_Controllers_FirmwareController_OnPutAsync_System_Guid_VPEAR_Core_Wrappers_PutFirmwareRequest_
  commentId: M:VPEAR.Server.Controllers.FirmwareController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutFirmwareRequest)
  fullName: VPEAR.Server.Controllers.FirmwareController.OnPutAsync(System.Guid, VPEAR.Core.Wrappers.PutFirmwareRequest)
  nameWithType: FirmwareController.OnPutAsync(Guid, PutFirmwareRequest)
- uid: VPEAR.Server.Controllers.FirmwareController.OnPutAsync*
  name: OnPutAsync
  href: api/VPEAR.Server.Controllers.FirmwareController.html#VPEAR_Server_Controllers_FirmwareController_OnPutAsync_
  commentId: Overload:VPEAR.Server.Controllers.FirmwareController.OnPutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.FirmwareController.OnPutAsync
  nameWithType: FirmwareController.OnPutAsync
- uid: VPEAR.Server.Controllers.PowerController
  name: PowerController
  href: api/VPEAR.Server.Controllers.PowerController.html
  commentId: T:VPEAR.Server.Controllers.PowerController
  fullName: VPEAR.Server.Controllers.PowerController
  nameWithType: PowerController
- uid: VPEAR.Server.Controllers.PowerController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.PowerController},VPEAR.Core.Abstractions.IPowerService)
  name: PowerController(ILogger<PowerController>, IPowerService)
  href: api/VPEAR.Server.Controllers.PowerController.html#VPEAR_Server_Controllers_PowerController__ctor_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_PowerController__VPEAR_Core_Abstractions_IPowerService_
  commentId: M:VPEAR.Server.Controllers.PowerController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.PowerController},VPEAR.Core.Abstractions.IPowerService)
  name.vb: PowerController(ILogger(Of PowerController), IPowerService)
  fullName: VPEAR.Server.Controllers.PowerController.PowerController(Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.PowerController>, VPEAR.Core.Abstractions.IPowerService)
  fullName.vb: VPEAR.Server.Controllers.PowerController.PowerController(Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.PowerController), VPEAR.Core.Abstractions.IPowerService)
  nameWithType: PowerController.PowerController(ILogger<PowerController>, IPowerService)
  nameWithType.vb: PowerController.PowerController(ILogger(Of PowerController), IPowerService)
- uid: VPEAR.Server.Controllers.PowerController.#ctor*
  name: PowerController
  href: api/VPEAR.Server.Controllers.PowerController.html#VPEAR_Server_Controllers_PowerController__ctor_
  commentId: Overload:VPEAR.Server.Controllers.PowerController.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.PowerController.PowerController
  nameWithType: PowerController.PowerController
- uid: VPEAR.Server.Controllers.PowerController.OnGetAsync(System.Guid)
  name: OnGetAsync(Guid)
  href: api/VPEAR.Server.Controllers.PowerController.html#VPEAR_Server_Controllers_PowerController_OnGetAsync_System_Guid_
  commentId: M:VPEAR.Server.Controllers.PowerController.OnGetAsync(System.Guid)
  fullName: VPEAR.Server.Controllers.PowerController.OnGetAsync(System.Guid)
  nameWithType: PowerController.OnGetAsync(Guid)
- uid: VPEAR.Server.Controllers.PowerController.OnGetAsync*
  name: OnGetAsync
  href: api/VPEAR.Server.Controllers.PowerController.html#VPEAR_Server_Controllers_PowerController_OnGetAsync_
  commentId: Overload:VPEAR.Server.Controllers.PowerController.OnGetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.PowerController.OnGetAsync
  nameWithType: PowerController.OnGetAsync
- uid: VPEAR.Server.Controllers.SensorController
  name: SensorController
  href: api/VPEAR.Server.Controllers.SensorController.html
  commentId: T:VPEAR.Server.Controllers.SensorController
  fullName: VPEAR.Server.Controllers.SensorController
  nameWithType: SensorController
- uid: VPEAR.Server.Controllers.SensorController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.SensorController},VPEAR.Core.Abstractions.ISensorService)
  name: SensorController(ILogger<SensorController>, ISensorService)
  href: api/VPEAR.Server.Controllers.SensorController.html#VPEAR_Server_Controllers_SensorController__ctor_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_SensorController__VPEAR_Core_Abstractions_ISensorService_
  commentId: M:VPEAR.Server.Controllers.SensorController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.SensorController},VPEAR.Core.Abstractions.ISensorService)
  name.vb: SensorController(ILogger(Of SensorController), ISensorService)
  fullName: VPEAR.Server.Controllers.SensorController.SensorController(Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.SensorController>, VPEAR.Core.Abstractions.ISensorService)
  fullName.vb: VPEAR.Server.Controllers.SensorController.SensorController(Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.SensorController), VPEAR.Core.Abstractions.ISensorService)
  nameWithType: SensorController.SensorController(ILogger<SensorController>, ISensorService)
  nameWithType.vb: SensorController.SensorController(ILogger(Of SensorController), ISensorService)
- uid: VPEAR.Server.Controllers.SensorController.#ctor*
  name: SensorController
  href: api/VPEAR.Server.Controllers.SensorController.html#VPEAR_Server_Controllers_SensorController__ctor_
  commentId: Overload:VPEAR.Server.Controllers.SensorController.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.SensorController.SensorController
  nameWithType: SensorController.SensorController
- uid: VPEAR.Server.Controllers.SensorController.OnGetFramesAsync(System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name: OnGetFramesAsync(Guid, Nullable<Int32>, Nullable<Int32>)
  href: api/VPEAR.Server.Controllers.SensorController.html#VPEAR_Server_Controllers_SensorController_OnGetFramesAsync_System_Guid_System_Nullable_System_Int32__System_Nullable_System_Int32__
  commentId: M:VPEAR.Server.Controllers.SensorController.OnGetFramesAsync(System.Guid,System.Nullable{System.Int32},System.Nullable{System.Int32})
  name.vb: OnGetFramesAsync(Guid, Nullable(Of Int32), Nullable(Of Int32))
  fullName: VPEAR.Server.Controllers.SensorController.OnGetFramesAsync(System.Guid, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  fullName.vb: VPEAR.Server.Controllers.SensorController.OnGetFramesAsync(System.Guid, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  nameWithType: SensorController.OnGetFramesAsync(Guid, Nullable<Int32>, Nullable<Int32>)
  nameWithType.vb: SensorController.OnGetFramesAsync(Guid, Nullable(Of Int32), Nullable(Of Int32))
- uid: VPEAR.Server.Controllers.SensorController.OnGetFramesAsync*
  name: OnGetFramesAsync
  href: api/VPEAR.Server.Controllers.SensorController.html#VPEAR_Server_Controllers_SensorController_OnGetFramesAsync_
  commentId: Overload:VPEAR.Server.Controllers.SensorController.OnGetFramesAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.SensorController.OnGetFramesAsync
  nameWithType: SensorController.OnGetFramesAsync
- uid: VPEAR.Server.Controllers.SensorController.OnGetSensorsAsync(System.Guid)
  name: OnGetSensorsAsync(Guid)
  href: api/VPEAR.Server.Controllers.SensorController.html#VPEAR_Server_Controllers_SensorController_OnGetSensorsAsync_System_Guid_
  commentId: M:VPEAR.Server.Controllers.SensorController.OnGetSensorsAsync(System.Guid)
  fullName: VPEAR.Server.Controllers.SensorController.OnGetSensorsAsync(System.Guid)
  nameWithType: SensorController.OnGetSensorsAsync(Guid)
- uid: VPEAR.Server.Controllers.SensorController.OnGetSensorsAsync*
  name: OnGetSensorsAsync
  href: api/VPEAR.Server.Controllers.SensorController.html#VPEAR_Server_Controllers_SensorController_OnGetSensorsAsync_
  commentId: Overload:VPEAR.Server.Controllers.SensorController.OnGetSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.SensorController.OnGetSensorsAsync
  nameWithType: SensorController.OnGetSensorsAsync
- uid: VPEAR.Server.Controllers.UserController
  name: UserController
  href: api/VPEAR.Server.Controllers.UserController.html
  commentId: T:VPEAR.Server.Controllers.UserController
  fullName: VPEAR.Server.Controllers.UserController
  nameWithType: UserController
- uid: VPEAR.Server.Controllers.UserController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.UserController},VPEAR.Core.Abstractions.IUserService)
  name: UserController(ILogger<UserController>, IUserService)
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController__ctor_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_UserController__VPEAR_Core_Abstractions_IUserService_
  commentId: M:VPEAR.Server.Controllers.UserController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.UserController},VPEAR.Core.Abstractions.IUserService)
  name.vb: UserController(ILogger(Of UserController), IUserService)
  fullName: VPEAR.Server.Controllers.UserController.UserController(Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.UserController>, VPEAR.Core.Abstractions.IUserService)
  fullName.vb: VPEAR.Server.Controllers.UserController.UserController(Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.UserController), VPEAR.Core.Abstractions.IUserService)
  nameWithType: UserController.UserController(ILogger<UserController>, IUserService)
  nameWithType.vb: UserController.UserController(ILogger(Of UserController), IUserService)
- uid: VPEAR.Server.Controllers.UserController.#ctor*
  name: UserController
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController__ctor_
  commentId: Overload:VPEAR.Server.Controllers.UserController.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.UserController.UserController
  nameWithType: UserController.UserController
- uid: VPEAR.Server.Controllers.UserController.OnDeleteAsync(System.String)
  name: OnDeleteAsync(String)
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnDeleteAsync_System_String_
  commentId: M:VPEAR.Server.Controllers.UserController.OnDeleteAsync(System.String)
  fullName: VPEAR.Server.Controllers.UserController.OnDeleteAsync(System.String)
  nameWithType: UserController.OnDeleteAsync(String)
- uid: VPEAR.Server.Controllers.UserController.OnDeleteAsync*
  name: OnDeleteAsync
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnDeleteAsync_
  commentId: Overload:VPEAR.Server.Controllers.UserController.OnDeleteAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.UserController.OnDeleteAsync
  nameWithType: UserController.OnDeleteAsync
- uid: VPEAR.Server.Controllers.UserController.OnGetAsync(System.String)
  name: OnGetAsync(String)
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnGetAsync_System_String_
  commentId: M:VPEAR.Server.Controllers.UserController.OnGetAsync(System.String)
  fullName: VPEAR.Server.Controllers.UserController.OnGetAsync(System.String)
  nameWithType: UserController.OnGetAsync(String)
- uid: VPEAR.Server.Controllers.UserController.OnGetAsync*
  name: OnGetAsync
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnGetAsync_
  commentId: Overload:VPEAR.Server.Controllers.UserController.OnGetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.UserController.OnGetAsync
  nameWithType: UserController.OnGetAsync
- uid: VPEAR.Server.Controllers.UserController.OnPostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  name: OnPostRegisterAsync(PostRegisterRequest)
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnPostRegisterAsync_VPEAR_Core_Wrappers_PostRegisterRequest_
  commentId: M:VPEAR.Server.Controllers.UserController.OnPostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  fullName: VPEAR.Server.Controllers.UserController.OnPostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  nameWithType: UserController.OnPostRegisterAsync(PostRegisterRequest)
- uid: VPEAR.Server.Controllers.UserController.OnPostRegisterAsync*
  name: OnPostRegisterAsync
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnPostRegisterAsync_
  commentId: Overload:VPEAR.Server.Controllers.UserController.OnPostRegisterAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.UserController.OnPostRegisterAsync
  nameWithType: UserController.OnPostRegisterAsync
- uid: VPEAR.Server.Controllers.UserController.OnPutAsync(System.String,VPEAR.Core.Wrappers.PutUserRequest)
  name: OnPutAsync(String, PutUserRequest)
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnPutAsync_System_String_VPEAR_Core_Wrappers_PutUserRequest_
  commentId: M:VPEAR.Server.Controllers.UserController.OnPutAsync(System.String,VPEAR.Core.Wrappers.PutUserRequest)
  fullName: VPEAR.Server.Controllers.UserController.OnPutAsync(System.String, VPEAR.Core.Wrappers.PutUserRequest)
  nameWithType: UserController.OnPutAsync(String, PutUserRequest)
- uid: VPEAR.Server.Controllers.UserController.OnPutAsync*
  name: OnPutAsync
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnPutAsync_
  commentId: Overload:VPEAR.Server.Controllers.UserController.OnPutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.UserController.OnPutAsync
  nameWithType: UserController.OnPutAsync
- uid: VPEAR.Server.Controllers.UserController.OnPutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  name: OnPutLoginAsync(PutLoginRequest)
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnPutLoginAsync_VPEAR_Core_Wrappers_PutLoginRequest_
  commentId: M:VPEAR.Server.Controllers.UserController.OnPutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  fullName: VPEAR.Server.Controllers.UserController.OnPutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  nameWithType: UserController.OnPutLoginAsync(PutLoginRequest)
- uid: VPEAR.Server.Controllers.UserController.OnPutLoginAsync*
  name: OnPutLoginAsync
  href: api/VPEAR.Server.Controllers.UserController.html#VPEAR_Server_Controllers_UserController_OnPutLoginAsync_
  commentId: Overload:VPEAR.Server.Controllers.UserController.OnPutLoginAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.UserController.OnPutLoginAsync
  nameWithType: UserController.OnPutLoginAsync
- uid: VPEAR.Server.Controllers.WifiController
  name: WifiController
  href: api/VPEAR.Server.Controllers.WifiController.html
  commentId: T:VPEAR.Server.Controllers.WifiController
  fullName: VPEAR.Server.Controllers.WifiController
  nameWithType: WifiController
- uid: VPEAR.Server.Controllers.WifiController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.WifiController},VPEAR.Core.Abstractions.IWifiService)
  name: WifiController(ILogger<WifiController>, IWifiService)
  href: api/VPEAR.Server.Controllers.WifiController.html#VPEAR_Server_Controllers_WifiController__ctor_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_WifiController__VPEAR_Core_Abstractions_IWifiService_
  commentId: M:VPEAR.Server.Controllers.WifiController.#ctor(Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.WifiController},VPEAR.Core.Abstractions.IWifiService)
  name.vb: WifiController(ILogger(Of WifiController), IWifiService)
  fullName: VPEAR.Server.Controllers.WifiController.WifiController(Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.WifiController>, VPEAR.Core.Abstractions.IWifiService)
  fullName.vb: VPEAR.Server.Controllers.WifiController.WifiController(Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.WifiController), VPEAR.Core.Abstractions.IWifiService)
  nameWithType: WifiController.WifiController(ILogger<WifiController>, IWifiService)
  nameWithType.vb: WifiController.WifiController(ILogger(Of WifiController), IWifiService)
- uid: VPEAR.Server.Controllers.WifiController.#ctor*
  name: WifiController
  href: api/VPEAR.Server.Controllers.WifiController.html#VPEAR_Server_Controllers_WifiController__ctor_
  commentId: Overload:VPEAR.Server.Controllers.WifiController.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.WifiController.WifiController
  nameWithType: WifiController.WifiController
- uid: VPEAR.Server.Controllers.WifiController.OnGetAsync(System.Guid)
  name: OnGetAsync(Guid)
  href: api/VPEAR.Server.Controllers.WifiController.html#VPEAR_Server_Controllers_WifiController_OnGetAsync_System_Guid_
  commentId: M:VPEAR.Server.Controllers.WifiController.OnGetAsync(System.Guid)
  fullName: VPEAR.Server.Controllers.WifiController.OnGetAsync(System.Guid)
  nameWithType: WifiController.OnGetAsync(Guid)
- uid: VPEAR.Server.Controllers.WifiController.OnGetAsync*
  name: OnGetAsync
  href: api/VPEAR.Server.Controllers.WifiController.html#VPEAR_Server_Controllers_WifiController_OnGetAsync_
  commentId: Overload:VPEAR.Server.Controllers.WifiController.OnGetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.WifiController.OnGetAsync
  nameWithType: WifiController.OnGetAsync
- uid: VPEAR.Server.Controllers.WifiController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutWifiRequest)
  name: OnPutAsync(Guid, PutWifiRequest)
  href: api/VPEAR.Server.Controllers.WifiController.html#VPEAR_Server_Controllers_WifiController_OnPutAsync_System_Guid_VPEAR_Core_Wrappers_PutWifiRequest_
  commentId: M:VPEAR.Server.Controllers.WifiController.OnPutAsync(System.Guid,VPEAR.Core.Wrappers.PutWifiRequest)
  fullName: VPEAR.Server.Controllers.WifiController.OnPutAsync(System.Guid, VPEAR.Core.Wrappers.PutWifiRequest)
  nameWithType: WifiController.OnPutAsync(Guid, PutWifiRequest)
- uid: VPEAR.Server.Controllers.WifiController.OnPutAsync*
  name: OnPutAsync
  href: api/VPEAR.Server.Controllers.WifiController.html#VPEAR_Server_Controllers_WifiController_OnPutAsync_
  commentId: Overload:VPEAR.Server.Controllers.WifiController.OnPutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Controllers.WifiController.OnPutAsync
  nameWithType: WifiController.OnPutAsync
- uid: VPEAR.Server.Db
  name: VPEAR.Server.Db
  href: api/VPEAR.Server.Db.html
  commentId: N:VPEAR.Server.Db
  fullName: VPEAR.Server.Db
  nameWithType: VPEAR.Server.Db
- uid: VPEAR.Server.Db.DeviceConfiguration
  name: DeviceConfiguration
  href: api/VPEAR.Server.Db.DeviceConfiguration.html
  commentId: T:VPEAR.Server.Db.DeviceConfiguration
  fullName: VPEAR.Server.Db.DeviceConfiguration
  nameWithType: DeviceConfiguration
- uid: VPEAR.Server.Db.DeviceConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Models.Device})
  name: Configure(EntityTypeBuilder<Device>)
  href: api/VPEAR.Server.Db.DeviceConfiguration.html#VPEAR_Server_Db_DeviceConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Core_Models_Device__
  commentId: M:VPEAR.Server.Db.DeviceConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Models.Device})
  name.vb: Configure(EntityTypeBuilder(Of Device))
  fullName: VPEAR.Server.Db.DeviceConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Core.Models.Device>)
  fullName.vb: VPEAR.Server.Db.DeviceConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Core.Models.Device))
  nameWithType: DeviceConfiguration.Configure(EntityTypeBuilder<Device>)
  nameWithType.vb: DeviceConfiguration.Configure(EntityTypeBuilder(Of Device))
- uid: VPEAR.Server.Db.DeviceConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.DeviceConfiguration.html#VPEAR_Server_Db_DeviceConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Db.DeviceConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.DeviceConfiguration.Configure
  nameWithType: DeviceConfiguration.Configure
- uid: VPEAR.Server.Db.EntityBaseConfiguration`2
  name: EntityBaseConfiguration<TEntity, TKey>
  href: api/VPEAR.Server.Db.EntityBaseConfiguration-2.html
  commentId: T:VPEAR.Server.Db.EntityBaseConfiguration`2
  name.vb: EntityBaseConfiguration(Of TEntity, TKey)
  fullName: VPEAR.Server.Db.EntityBaseConfiguration<TEntity, TKey>
  fullName.vb: VPEAR.Server.Db.EntityBaseConfiguration(Of TEntity, TKey)
  nameWithType: EntityBaseConfiguration<TEntity, TKey>
  nameWithType.vb: EntityBaseConfiguration(Of TEntity, TKey)
- uid: VPEAR.Server.Db.EntityBaseConfiguration`2.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{`0})
  name: Configure(EntityTypeBuilder<TEntity>)
  href: api/VPEAR.Server.Db.EntityBaseConfiguration-2.html#VPEAR_Server_Db_EntityBaseConfiguration_2_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder__0__
  commentId: M:VPEAR.Server.Db.EntityBaseConfiguration`2.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{`0})
  name.vb: Configure(EntityTypeBuilder(Of TEntity))
  fullName: VPEAR.Server.Db.EntityBaseConfiguration<TEntity, TKey>.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<TEntity>)
  fullName.vb: VPEAR.Server.Db.EntityBaseConfiguration(Of TEntity, TKey).Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of TEntity))
  nameWithType: EntityBaseConfiguration<TEntity, TKey>.Configure(EntityTypeBuilder<TEntity>)
  nameWithType.vb: EntityBaseConfiguration(Of TEntity, TKey).Configure(EntityTypeBuilder(Of TEntity))
- uid: VPEAR.Server.Db.EntityBaseConfiguration`2.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.EntityBaseConfiguration-2.html#VPEAR_Server_Db_EntityBaseConfiguration_2_Configure_
  commentId: Overload:VPEAR.Server.Db.EntityBaseConfiguration`2.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.EntityBaseConfiguration<TEntity, TKey>.Configure
  fullName.vb: VPEAR.Server.Db.EntityBaseConfiguration(Of TEntity, TKey).Configure
  nameWithType: EntityBaseConfiguration<TEntity, TKey>.Configure
  nameWithType.vb: EntityBaseConfiguration(Of TEntity, TKey).Configure
- uid: VPEAR.Server.Db.FiltersConfiguration
  name: FiltersConfiguration
  href: api/VPEAR.Server.Db.FiltersConfiguration.html
  commentId: T:VPEAR.Server.Db.FiltersConfiguration
  fullName: VPEAR.Server.Db.FiltersConfiguration
  nameWithType: FiltersConfiguration
- uid: VPEAR.Server.Db.FiltersConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Models.Filter})
  name: Configure(EntityTypeBuilder<Filter>)
  href: api/VPEAR.Server.Db.FiltersConfiguration.html#VPEAR_Server_Db_FiltersConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Core_Models_Filter__
  commentId: M:VPEAR.Server.Db.FiltersConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Models.Filter})
  name.vb: Configure(EntityTypeBuilder(Of Filter))
  fullName: VPEAR.Server.Db.FiltersConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Core.Models.Filter>)
  fullName.vb: VPEAR.Server.Db.FiltersConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Core.Models.Filter))
  nameWithType: FiltersConfiguration.Configure(EntityTypeBuilder<Filter>)
  nameWithType.vb: FiltersConfiguration.Configure(EntityTypeBuilder(Of Filter))
- uid: VPEAR.Server.Db.FiltersConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.FiltersConfiguration.html#VPEAR_Server_Db_FiltersConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Db.FiltersConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.FiltersConfiguration.Configure
  nameWithType: FiltersConfiguration.Configure
- uid: VPEAR.Server.Db.FirmwareConfiguration
  name: FirmwareConfiguration
  href: api/VPEAR.Server.Db.FirmwareConfiguration.html
  commentId: T:VPEAR.Server.Db.FirmwareConfiguration
  fullName: VPEAR.Server.Db.FirmwareConfiguration
  nameWithType: FirmwareConfiguration
- uid: VPEAR.Server.Db.FirmwareConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Models.Firmware})
  name: Configure(EntityTypeBuilder<Firmware>)
  href: api/VPEAR.Server.Db.FirmwareConfiguration.html#VPEAR_Server_Db_FirmwareConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Core_Models_Firmware__
  commentId: M:VPEAR.Server.Db.FirmwareConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Models.Firmware})
  name.vb: Configure(EntityTypeBuilder(Of Firmware))
  fullName: VPEAR.Server.Db.FirmwareConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Core.Models.Firmware>)
  fullName.vb: VPEAR.Server.Db.FirmwareConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Core.Models.Firmware))
  nameWithType: FirmwareConfiguration.Configure(EntityTypeBuilder<Firmware>)
  nameWithType.vb: FirmwareConfiguration.Configure(EntityTypeBuilder(Of Firmware))
- uid: VPEAR.Server.Db.FirmwareConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.FirmwareConfiguration.html#VPEAR_Server_Db_FirmwareConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Db.FirmwareConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.FirmwareConfiguration.Configure
  nameWithType: FirmwareConfiguration.Configure
- uid: VPEAR.Server.Db.FrameConfiguration
  name: FrameConfiguration
  href: api/VPEAR.Server.Db.FrameConfiguration.html
  commentId: T:VPEAR.Server.Db.FrameConfiguration
  fullName: VPEAR.Server.Db.FrameConfiguration
  nameWithType: FrameConfiguration
- uid: VPEAR.Server.Db.FrameConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Models.Frame})
  name: Configure(EntityTypeBuilder<Frame>)
  href: api/VPEAR.Server.Db.FrameConfiguration.html#VPEAR_Server_Db_FrameConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Core_Models_Frame__
  commentId: M:VPEAR.Server.Db.FrameConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Models.Frame})
  name.vb: Configure(EntityTypeBuilder(Of Frame))
  fullName: VPEAR.Server.Db.FrameConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Core.Models.Frame>)
  fullName.vb: VPEAR.Server.Db.FrameConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Core.Models.Frame))
  nameWithType: FrameConfiguration.Configure(EntityTypeBuilder<Frame>)
  nameWithType.vb: FrameConfiguration.Configure(EntityTypeBuilder(Of Frame))
- uid: VPEAR.Server.Db.FrameConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.FrameConfiguration.html#VPEAR_Server_Db_FrameConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Db.FrameConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.FrameConfiguration.Configure
  nameWithType: FrameConfiguration.Configure
- uid: VPEAR.Server.Db.Repository`3
  name: Repository<TDbContext, TEntity, TKey>
  href: api/VPEAR.Server.Db.Repository-3.html
  commentId: T:VPEAR.Server.Db.Repository`3
  name.vb: Repository(Of TDbContext, TEntity, TKey)
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey)
  nameWithType: Repository<TDbContext, TEntity, TKey>
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey)
- uid: VPEAR.Server.Db.Repository`3.#ctor(`0,Microsoft.Extensions.Logging.ILogger{VPEAR.Core.Abstractions.IRepository{`1,`2}})
  name: Repository(TDbContext, ILogger<IRepository<TEntity, TKey>>)
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3__ctor__0_Microsoft_Extensions_Logging_ILogger_VPEAR_Core_Abstractions_IRepository__1__2___
  commentId: M:VPEAR.Server.Db.Repository`3.#ctor(`0,Microsoft.Extensions.Logging.ILogger{VPEAR.Core.Abstractions.IRepository{`1,`2}})
  name.vb: Repository(TDbContext, ILogger(Of IRepository(Of TEntity, TKey)))
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.Repository(TDbContext, Microsoft.Extensions.Logging.ILogger<VPEAR.Core.Abstractions.IRepository<TEntity, TKey>>)
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).Repository(TDbContext, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Core.Abstractions.IRepository(Of TEntity, TKey)))
  nameWithType: Repository<TDbContext, TEntity, TKey>.Repository(TDbContext, ILogger<IRepository<TEntity, TKey>>)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).Repository(TDbContext, ILogger(Of IRepository(Of TEntity, TKey)))
- uid: VPEAR.Server.Db.Repository`3.#ctor*
  name: Repository
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3__ctor_
  commentId: Overload:VPEAR.Server.Db.Repository`3.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.Repository
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).Repository
  nameWithType: Repository<TDbContext, TEntity, TKey>.Repository
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).Repository
- uid: VPEAR.Server.Db.Repository`3.CreateAsync(`1)
  name: CreateAsync(TEntity)
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_CreateAsync__1_
  commentId: M:VPEAR.Server.Db.Repository`3.CreateAsync(`1)
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.CreateAsync(TEntity)
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).CreateAsync(TEntity)
  nameWithType: Repository<TDbContext, TEntity, TKey>.CreateAsync(TEntity)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).CreateAsync(TEntity)
- uid: VPEAR.Server.Db.Repository`3.CreateAsync*
  name: CreateAsync
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_CreateAsync_
  commentId: Overload:VPEAR.Server.Db.Repository`3.CreateAsync
  isSpec: "True"
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.CreateAsync
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).CreateAsync
  nameWithType: Repository<TDbContext, TEntity, TKey>.CreateAsync
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).CreateAsync
- uid: VPEAR.Server.Db.Repository`3.DeleteAsync(`1)
  name: DeleteAsync(TEntity)
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_DeleteAsync__1_
  commentId: M:VPEAR.Server.Db.Repository`3.DeleteAsync(`1)
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.DeleteAsync(TEntity)
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).DeleteAsync(TEntity)
  nameWithType: Repository<TDbContext, TEntity, TKey>.DeleteAsync(TEntity)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).DeleteAsync(TEntity)
- uid: VPEAR.Server.Db.Repository`3.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_DeleteAsync_
  commentId: Overload:VPEAR.Server.Db.Repository`3.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.DeleteAsync
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).DeleteAsync
  nameWithType: Repository<TDbContext, TEntity, TKey>.DeleteAsync
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).DeleteAsync
- uid: VPEAR.Server.Db.Repository`3.Get
  name: Get()
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_Get
  commentId: M:VPEAR.Server.Db.Repository`3.Get
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.Get()
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).Get()
  nameWithType: Repository<TDbContext, TEntity, TKey>.Get()
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).Get()
- uid: VPEAR.Server.Db.Repository`3.Get*
  name: Get
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_Get_
  commentId: Overload:VPEAR.Server.Db.Repository`3.Get
  isSpec: "True"
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.Get
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).Get
  nameWithType: Repository<TDbContext, TEntity, TKey>.Get
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).Get
- uid: VPEAR.Server.Db.Repository`3.GetAsync(`2)
  name: GetAsync(TKey)
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_GetAsync__2_
  commentId: M:VPEAR.Server.Db.Repository`3.GetAsync(`2)
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.GetAsync(TKey)
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).GetAsync(TKey)
  nameWithType: Repository<TDbContext, TEntity, TKey>.GetAsync(TKey)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).GetAsync(TKey)
- uid: VPEAR.Server.Db.Repository`3.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_GetAsync_
  commentId: Overload:VPEAR.Server.Db.Repository`3.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.GetAsync
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).GetAsync
  nameWithType: Repository<TDbContext, TEntity, TKey>.GetAsync
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).GetAsync
- uid: VPEAR.Server.Db.Repository`3.UpdateAsync(`1)
  name: UpdateAsync(TEntity)
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_UpdateAsync__1_
  commentId: M:VPEAR.Server.Db.Repository`3.UpdateAsync(`1)
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.UpdateAsync(TEntity)
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).UpdateAsync(TEntity)
  nameWithType: Repository<TDbContext, TEntity, TKey>.UpdateAsync(TEntity)
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).UpdateAsync(TEntity)
- uid: VPEAR.Server.Db.Repository`3.UpdateAsync*
  name: UpdateAsync
  href: api/VPEAR.Server.Db.Repository-3.html#VPEAR_Server_Db_Repository_3_UpdateAsync_
  commentId: Overload:VPEAR.Server.Db.Repository`3.UpdateAsync
  isSpec: "True"
  fullName: VPEAR.Server.Db.Repository<TDbContext, TEntity, TKey>.UpdateAsync
  fullName.vb: VPEAR.Server.Db.Repository(Of TDbContext, TEntity, TKey).UpdateAsync
  nameWithType: Repository<TDbContext, TEntity, TKey>.UpdateAsync
  nameWithType.vb: Repository(Of TDbContext, TEntity, TKey).UpdateAsync
- uid: VPEAR.Server.Db.SensorConfiguration
  name: SensorConfiguration
  href: api/VPEAR.Server.Db.SensorConfiguration.html
  commentId: T:VPEAR.Server.Db.SensorConfiguration
  fullName: VPEAR.Server.Db.SensorConfiguration
  nameWithType: SensorConfiguration
- uid: VPEAR.Server.Db.SensorConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Models.Sensor})
  name: Configure(EntityTypeBuilder<Sensor>)
  href: api/VPEAR.Server.Db.SensorConfiguration.html#VPEAR_Server_Db_SensorConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Core_Models_Sensor__
  commentId: M:VPEAR.Server.Db.SensorConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Models.Sensor})
  name.vb: Configure(EntityTypeBuilder(Of Sensor))
  fullName: VPEAR.Server.Db.SensorConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Core.Models.Sensor>)
  fullName.vb: VPEAR.Server.Db.SensorConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Core.Models.Sensor))
  nameWithType: SensorConfiguration.Configure(EntityTypeBuilder<Sensor>)
  nameWithType.vb: SensorConfiguration.Configure(EntityTypeBuilder(Of Sensor))
- uid: VPEAR.Server.Db.SensorConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.SensorConfiguration.html#VPEAR_Server_Db_SensorConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Db.SensorConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.SensorConfiguration.Configure
  nameWithType: SensorConfiguration.Configure
- uid: VPEAR.Server.Db.VPEARDbContext
  name: VPEARDbContext
  href: api/VPEAR.Server.Db.VPEARDbContext.html
  commentId: T:VPEAR.Server.Db.VPEARDbContext
  fullName: VPEAR.Server.Db.VPEARDbContext
  nameWithType: VPEARDbContext
- uid: VPEAR.Server.Db.VPEARDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{VPEAR.Server.Db.VPEARDbContext})
  name: VPEARDbContext(DbContextOptions<VPEARDbContext>)
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_VPEAR_Server_Db_VPEARDbContext__
  commentId: M:VPEAR.Server.Db.VPEARDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{VPEAR.Server.Db.VPEARDbContext})
  name.vb: VPEARDbContext(DbContextOptions(Of VPEARDbContext))
  fullName: VPEAR.Server.Db.VPEARDbContext.VPEARDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<VPEAR.Server.Db.VPEARDbContext>)
  fullName.vb: VPEAR.Server.Db.VPEARDbContext.VPEARDbContext(Microsoft.EntityFrameworkCore.DbContextOptions(Of VPEAR.Server.Db.VPEARDbContext))
  nameWithType: VPEARDbContext.VPEARDbContext(DbContextOptions<VPEARDbContext>)
  nameWithType.vb: VPEARDbContext.VPEARDbContext(DbContextOptions(Of VPEARDbContext))
- uid: VPEAR.Server.Db.VPEARDbContext.#ctor*
  name: VPEARDbContext
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext__ctor_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.VPEARDbContext
  nameWithType: VPEARDbContext.VPEARDbContext
- uid: VPEAR.Server.Db.VPEARDbContext.Devices
  name: Devices
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Devices
  commentId: P:VPEAR.Server.Db.VPEARDbContext.Devices
  fullName: VPEAR.Server.Db.VPEARDbContext.Devices
  nameWithType: VPEARDbContext.Devices
- uid: VPEAR.Server.Db.VPEARDbContext.Devices*
  name: Devices
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Devices_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.Devices
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.Devices
  nameWithType: VPEARDbContext.Devices
- uid: VPEAR.Server.Db.VPEARDbContext.Filters
  name: Filters
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Filters
  commentId: P:VPEAR.Server.Db.VPEARDbContext.Filters
  fullName: VPEAR.Server.Db.VPEARDbContext.Filters
  nameWithType: VPEARDbContext.Filters
- uid: VPEAR.Server.Db.VPEARDbContext.Filters*
  name: Filters
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Filters_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.Filters
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.Filters
  nameWithType: VPEARDbContext.Filters
- uid: VPEAR.Server.Db.VPEARDbContext.Firmwares
  name: Firmwares
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Firmwares
  commentId: P:VPEAR.Server.Db.VPEARDbContext.Firmwares
  fullName: VPEAR.Server.Db.VPEARDbContext.Firmwares
  nameWithType: VPEARDbContext.Firmwares
- uid: VPEAR.Server.Db.VPEARDbContext.Firmwares*
  name: Firmwares
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Firmwares_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.Firmwares
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.Firmwares
  nameWithType: VPEARDbContext.Firmwares
- uid: VPEAR.Server.Db.VPEARDbContext.Frames
  name: Frames
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Frames
  commentId: P:VPEAR.Server.Db.VPEARDbContext.Frames
  fullName: VPEAR.Server.Db.VPEARDbContext.Frames
  nameWithType: VPEARDbContext.Frames
- uid: VPEAR.Server.Db.VPEARDbContext.Frames*
  name: Frames
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Frames_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.Frames
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.Frames
  nameWithType: VPEARDbContext.Frames
- uid: VPEAR.Server.Db.VPEARDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:VPEAR.Server.Db.VPEARDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: VPEAR.Server.Db.VPEARDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: VPEARDbContext.OnModelCreating(ModelBuilder)
- uid: VPEAR.Server.Db.VPEARDbContext.OnModelCreating*
  name: OnModelCreating
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_OnModelCreating_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.OnModelCreating
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.OnModelCreating
  nameWithType: VPEARDbContext.OnModelCreating
- uid: VPEAR.Server.Db.VPEARDbContext.Sensors
  name: Sensors
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Sensors
  commentId: P:VPEAR.Server.Db.VPEARDbContext.Sensors
  fullName: VPEAR.Server.Db.VPEARDbContext.Sensors
  nameWithType: VPEARDbContext.Sensors
- uid: VPEAR.Server.Db.VPEARDbContext.Sensors*
  name: Sensors
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Sensors_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.Sensors
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.Sensors
  nameWithType: VPEARDbContext.Sensors
- uid: VPEAR.Server.Db.VPEARDbContext.Wifis
  name: Wifis
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Wifis
  commentId: P:VPEAR.Server.Db.VPEARDbContext.Wifis
  fullName: VPEAR.Server.Db.VPEARDbContext.Wifis
  nameWithType: VPEARDbContext.Wifis
- uid: VPEAR.Server.Db.VPEARDbContext.Wifis*
  name: Wifis
  href: api/VPEAR.Server.Db.VPEARDbContext.html#VPEAR_Server_Db_VPEARDbContext_Wifis_
  commentId: Overload:VPEAR.Server.Db.VPEARDbContext.Wifis
  isSpec: "True"
  fullName: VPEAR.Server.Db.VPEARDbContext.Wifis
  nameWithType: VPEARDbContext.Wifis
- uid: VPEAR.Server.Db.WifiConfiguration
  name: WifiConfiguration
  href: api/VPEAR.Server.Db.WifiConfiguration.html
  commentId: T:VPEAR.Server.Db.WifiConfiguration
  fullName: VPEAR.Server.Db.WifiConfiguration
  nameWithType: WifiConfiguration
- uid: VPEAR.Server.Db.WifiConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Models.Wifi})
  name: Configure(EntityTypeBuilder<Wifi>)
  href: api/VPEAR.Server.Db.WifiConfiguration.html#VPEAR_Server_Db_WifiConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_VPEAR_Core_Models_Wifi__
  commentId: M:VPEAR.Server.Db.WifiConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{VPEAR.Core.Models.Wifi})
  name.vb: Configure(EntityTypeBuilder(Of Wifi))
  fullName: VPEAR.Server.Db.WifiConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<VPEAR.Core.Models.Wifi>)
  fullName.vb: VPEAR.Server.Db.WifiConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of VPEAR.Core.Models.Wifi))
  nameWithType: WifiConfiguration.Configure(EntityTypeBuilder<Wifi>)
  nameWithType.vb: WifiConfiguration.Configure(EntityTypeBuilder(Of Wifi))
- uid: VPEAR.Server.Db.WifiConfiguration.Configure*
  name: Configure
  href: api/VPEAR.Server.Db.WifiConfiguration.html#VPEAR_Server_Db_WifiConfiguration_Configure_
  commentId: Overload:VPEAR.Server.Db.WifiConfiguration.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Db.WifiConfiguration.Configure
  nameWithType: WifiConfiguration.Configure
- uid: VPEAR.Server.Filters
  name: VPEAR.Server.Filters
  href: api/VPEAR.Server.Filters.html
  commentId: N:VPEAR.Server.Filters
  fullName: VPEAR.Server.Filters
  nameWithType: VPEAR.Server.Filters
- uid: VPEAR.Server.Filters.GlobalExceptionFilter
  name: GlobalExceptionFilter
  href: api/VPEAR.Server.Filters.GlobalExceptionFilter.html
  commentId: T:VPEAR.Server.Filters.GlobalExceptionFilter
  fullName: VPEAR.Server.Filters.GlobalExceptionFilter
  nameWithType: GlobalExceptionFilter
- uid: VPEAR.Server.Filters.GlobalExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)
  name: OnException(ExceptionContext)
  href: api/VPEAR.Server.Filters.GlobalExceptionFilter.html#VPEAR_Server_Filters_GlobalExceptionFilter_OnException_Microsoft_AspNetCore_Mvc_Filters_ExceptionContext_
  commentId: M:VPEAR.Server.Filters.GlobalExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)
  fullName: VPEAR.Server.Filters.GlobalExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)
  nameWithType: GlobalExceptionFilter.OnException(ExceptionContext)
- uid: VPEAR.Server.Filters.GlobalExceptionFilter.OnException*
  name: OnException
  href: api/VPEAR.Server.Filters.GlobalExceptionFilter.html#VPEAR_Server_Filters_GlobalExceptionFilter_OnException_
  commentId: Overload:VPEAR.Server.Filters.GlobalExceptionFilter.OnException
  isSpec: "True"
  fullName: VPEAR.Server.Filters.GlobalExceptionFilter.OnException
  nameWithType: GlobalExceptionFilter.OnException
- uid: VPEAR.Server.Program
  name: Program
  href: api/VPEAR.Server.Program.html
  commentId: T:VPEAR.Server.Program
  fullName: VPEAR.Server.Program
  nameWithType: Program
- uid: VPEAR.Server.Program.CreateHostBuilder(System.String[])
  name: CreateHostBuilder(String[])
  href: api/VPEAR.Server.Program.html#VPEAR_Server_Program_CreateHostBuilder_System_String___
  commentId: M:VPEAR.Server.Program.CreateHostBuilder(System.String[])
  name.vb: CreateHostBuilder(String())
  fullName: VPEAR.Server.Program.CreateHostBuilder(System.String[])
  fullName.vb: VPEAR.Server.Program.CreateHostBuilder(System.String())
  nameWithType: Program.CreateHostBuilder(String[])
  nameWithType.vb: Program.CreateHostBuilder(String())
- uid: VPEAR.Server.Program.CreateHostBuilder*
  name: CreateHostBuilder
  href: api/VPEAR.Server.Program.html#VPEAR_Server_Program_CreateHostBuilder_
  commentId: Overload:VPEAR.Server.Program.CreateHostBuilder
  isSpec: "True"
  fullName: VPEAR.Server.Program.CreateHostBuilder
  nameWithType: Program.CreateHostBuilder
- uid: VPEAR.Server.Program.Main(System.String[])
  name: Main(String[])
  href: api/VPEAR.Server.Program.html#VPEAR_Server_Program_Main_System_String___
  commentId: M:VPEAR.Server.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: VPEAR.Server.Program.Main(System.String[])
  fullName.vb: VPEAR.Server.Program.Main(System.String())
  nameWithType: Program.Main(String[])
  nameWithType.vb: Program.Main(String())
- uid: VPEAR.Server.Program.Main*
  name: Main
  href: api/VPEAR.Server.Program.html#VPEAR_Server_Program_Main_
  commentId: Overload:VPEAR.Server.Program.Main
  isSpec: "True"
  fullName: VPEAR.Server.Program.Main
  nameWithType: Program.Main
- uid: VPEAR.Server.RepositoryModule
  name: RepositoryModule
  href: api/VPEAR.Server.RepositoryModule.html
  commentId: T:VPEAR.Server.RepositoryModule
  fullName: VPEAR.Server.RepositoryModule
  nameWithType: RepositoryModule
- uid: VPEAR.Server.RepositoryModule.Load(Autofac.ContainerBuilder)
  name: Load(ContainerBuilder)
  href: api/VPEAR.Server.RepositoryModule.html#VPEAR_Server_RepositoryModule_Load_Autofac_ContainerBuilder_
  commentId: M:VPEAR.Server.RepositoryModule.Load(Autofac.ContainerBuilder)
  fullName: VPEAR.Server.RepositoryModule.Load(Autofac.ContainerBuilder)
  nameWithType: RepositoryModule.Load(ContainerBuilder)
- uid: VPEAR.Server.RepositoryModule.Load*
  name: Load
  href: api/VPEAR.Server.RepositoryModule.html#VPEAR_Server_RepositoryModule_Load_
  commentId: Overload:VPEAR.Server.RepositoryModule.Load
  isSpec: "True"
  fullName: VPEAR.Server.RepositoryModule.Load
  nameWithType: RepositoryModule.Load
- uid: VPEAR.Server.ServiceModule
  name: ServiceModule
  href: api/VPEAR.Server.ServiceModule.html
  commentId: T:VPEAR.Server.ServiceModule
  fullName: VPEAR.Server.ServiceModule
  nameWithType: ServiceModule
- uid: VPEAR.Server.ServiceModule.Load(Autofac.ContainerBuilder)
  name: Load(ContainerBuilder)
  href: api/VPEAR.Server.ServiceModule.html#VPEAR_Server_ServiceModule_Load_Autofac_ContainerBuilder_
  commentId: M:VPEAR.Server.ServiceModule.Load(Autofac.ContainerBuilder)
  fullName: VPEAR.Server.ServiceModule.Load(Autofac.ContainerBuilder)
  nameWithType: ServiceModule.Load(ContainerBuilder)
- uid: VPEAR.Server.ServiceModule.Load*
  name: Load
  href: api/VPEAR.Server.ServiceModule.html#VPEAR_Server_ServiceModule_Load_
  commentId: Overload:VPEAR.Server.ServiceModule.Load
  isSpec: "True"
  fullName: VPEAR.Server.ServiceModule.Load
  nameWithType: ServiceModule.Load
- uid: VPEAR.Server.Services
  name: VPEAR.Server.Services
  href: api/VPEAR.Server.Services.html
  commentId: N:VPEAR.Server.Services
  fullName: VPEAR.Server.Services
  nameWithType: VPEAR.Server.Services
- uid: VPEAR.Server.Services.DeviceService
  name: DeviceService
  href: api/VPEAR.Server.Services.DeviceService.html
  commentId: T:VPEAR.Server.Services.DeviceService
  fullName: VPEAR.Server.Services.DeviceService
  nameWithType: DeviceService
- uid: VPEAR.Server.Services.DeviceService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Device,System.Guid},VPEAR.Core.Abstractions.IDiscoveryService,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.DeviceController})
  name: DeviceService(IRepository<Device, Guid>, IDiscoveryService, ILogger<DeviceController>)
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Models_Device_System_Guid__VPEAR_Core_Abstractions_IDiscoveryService_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_DeviceController__
  commentId: M:VPEAR.Server.Services.DeviceService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Device,System.Guid},VPEAR.Core.Abstractions.IDiscoveryService,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.DeviceController})
  name.vb: DeviceService(IRepository(Of Device, Guid), IDiscoveryService, ILogger(Of DeviceController))
  fullName: VPEAR.Server.Services.DeviceService.DeviceService(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Models.Device, System.Guid>, VPEAR.Core.Abstractions.IDiscoveryService, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.DeviceController>)
  fullName.vb: VPEAR.Server.Services.DeviceService.DeviceService(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Models.Device, System.Guid), VPEAR.Core.Abstractions.IDiscoveryService, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.DeviceController))
  nameWithType: DeviceService.DeviceService(IRepository<Device, Guid>, IDiscoveryService, ILogger<DeviceController>)
  nameWithType.vb: DeviceService.DeviceService(IRepository(Of Device, Guid), IDiscoveryService, ILogger(Of DeviceController))
- uid: VPEAR.Server.Services.DeviceService.#ctor*
  name: DeviceService
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService__ctor_
  commentId: Overload:VPEAR.Server.Services.DeviceService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.DeviceService.DeviceService
  nameWithType: DeviceService.DeviceService
- uid: VPEAR.Server.Services.DeviceService.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_DeleteAsync_System_Guid_
  commentId: M:VPEAR.Server.Services.DeviceService.DeleteAsync(System.Guid)
  fullName: VPEAR.Server.Services.DeviceService.DeleteAsync(System.Guid)
  nameWithType: DeviceService.DeleteAsync(Guid)
- uid: VPEAR.Server.Services.DeviceService.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_DeleteAsync_
  commentId: Overload:VPEAR.Server.Services.DeviceService.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.DeviceService.DeleteAsync
  nameWithType: DeviceService.DeleteAsync
- uid: VPEAR.Server.Services.DeviceService.GetAsync(VPEAR.Core.DeviceStatus)
  name: GetAsync(DeviceStatus)
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_GetAsync_VPEAR_Core_DeviceStatus_
  commentId: M:VPEAR.Server.Services.DeviceService.GetAsync(VPEAR.Core.DeviceStatus)
  fullName: VPEAR.Server.Services.DeviceService.GetAsync(VPEAR.Core.DeviceStatus)
  nameWithType: DeviceService.GetAsync(DeviceStatus)
- uid: VPEAR.Server.Services.DeviceService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_GetAsync_
  commentId: Overload:VPEAR.Server.Services.DeviceService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.DeviceService.GetAsync
  nameWithType: DeviceService.GetAsync
- uid: VPEAR.Server.Services.DeviceService.PostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  name: PostAsync(PostDeviceRequest)
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_PostAsync_VPEAR_Core_Wrappers_PostDeviceRequest_
  commentId: M:VPEAR.Server.Services.DeviceService.PostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  fullName: VPEAR.Server.Services.DeviceService.PostAsync(VPEAR.Core.Wrappers.PostDeviceRequest)
  nameWithType: DeviceService.PostAsync(PostDeviceRequest)
- uid: VPEAR.Server.Services.DeviceService.PostAsync*
  name: PostAsync
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_PostAsync_
  commentId: Overload:VPEAR.Server.Services.DeviceService.PostAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.DeviceService.PostAsync
  nameWithType: DeviceService.PostAsync
- uid: VPEAR.Server.Services.DeviceService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutDeviceRequest)
  name: PutAsync(Guid, PutDeviceRequest)
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutDeviceRequest_
  commentId: M:VPEAR.Server.Services.DeviceService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutDeviceRequest)
  fullName: VPEAR.Server.Services.DeviceService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutDeviceRequest)
  nameWithType: DeviceService.PutAsync(Guid, PutDeviceRequest)
- uid: VPEAR.Server.Services.DeviceService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Server.Services.DeviceService.html#VPEAR_Server_Services_DeviceService_PutAsync_
  commentId: Overload:VPEAR.Server.Services.DeviceService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.DeviceService.PutAsync
  nameWithType: DeviceService.PutAsync
- uid: VPEAR.Server.Services.DiscoveryService
  name: DiscoveryService
  href: api/VPEAR.Server.Services.DiscoveryService.html
  commentId: T:VPEAR.Server.Services.DiscoveryService
  fullName: VPEAR.Server.Services.DiscoveryService
  nameWithType: DiscoveryService
- uid: VPEAR.Server.Services.DiscoveryService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Device,System.Guid},VPEAR.Core.Abstractions.IDeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.DeviceController})
  name: DiscoveryService(IRepository<Device, Guid>, IDeviceClient.Factory, ILogger<DeviceController>)
  href: api/VPEAR.Server.Services.DiscoveryService.html#VPEAR_Server_Services_DiscoveryService__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Models_Device_System_Guid__VPEAR_Core_Abstractions_IDeviceClient_Factory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_DeviceController__
  commentId: M:VPEAR.Server.Services.DiscoveryService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Device,System.Guid},VPEAR.Core.Abstractions.IDeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.DeviceController})
  name.vb: DiscoveryService(IRepository(Of Device, Guid), IDeviceClient.Factory, ILogger(Of DeviceController))
  fullName: VPEAR.Server.Services.DiscoveryService.DiscoveryService(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Models.Device, System.Guid>, VPEAR.Core.Abstractions.IDeviceClient.Factory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.DeviceController>)
  fullName.vb: VPEAR.Server.Services.DiscoveryService.DiscoveryService(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Models.Device, System.Guid), VPEAR.Core.Abstractions.IDeviceClient.Factory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.DeviceController))
  nameWithType: DiscoveryService.DiscoveryService(IRepository<Device, Guid>, IDeviceClient.Factory, ILogger<DeviceController>)
  nameWithType.vb: DiscoveryService.DiscoveryService(IRepository(Of Device, Guid), IDeviceClient.Factory, ILogger(Of DeviceController))
- uid: VPEAR.Server.Services.DiscoveryService.#ctor*
  name: DiscoveryService
  href: api/VPEAR.Server.Services.DiscoveryService.html#VPEAR_Server_Services_DiscoveryService__ctor_
  commentId: Overload:VPEAR.Server.Services.DiscoveryService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.DiscoveryService.DiscoveryService
  nameWithType: DiscoveryService.DiscoveryService
- uid: VPEAR.Server.Services.DiscoveryService.SearchDevicesAsync(System.Net.IPAddress,System.Net.IPAddress)
  name: SearchDevicesAsync(IPAddress, IPAddress)
  href: api/VPEAR.Server.Services.DiscoveryService.html#VPEAR_Server_Services_DiscoveryService_SearchDevicesAsync_System_Net_IPAddress_System_Net_IPAddress_
  commentId: M:VPEAR.Server.Services.DiscoveryService.SearchDevicesAsync(System.Net.IPAddress,System.Net.IPAddress)
  fullName: VPEAR.Server.Services.DiscoveryService.SearchDevicesAsync(System.Net.IPAddress, System.Net.IPAddress)
  nameWithType: DiscoveryService.SearchDevicesAsync(IPAddress, IPAddress)
- uid: VPEAR.Server.Services.DiscoveryService.SearchDevicesAsync*
  name: SearchDevicesAsync
  href: api/VPEAR.Server.Services.DiscoveryService.html#VPEAR_Server_Services_DiscoveryService_SearchDevicesAsync_
  commentId: Overload:VPEAR.Server.Services.DiscoveryService.SearchDevicesAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.DiscoveryService.SearchDevicesAsync
  nameWithType: DiscoveryService.SearchDevicesAsync
- uid: VPEAR.Server.Services.FilterService
  name: FilterService
  href: api/VPEAR.Server.Services.FilterService.html
  commentId: T:VPEAR.Server.Services.FilterService
  fullName: VPEAR.Server.Services.FilterService
  nameWithType: FilterService
- uid: VPEAR.Server.Services.FilterService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Device,System.Guid},VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Filter,System.Guid},VPEAR.Core.Abstractions.IDeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FilterController})
  name: FilterService(IRepository<Device, Guid>, IRepository<Filter, Guid>, IDeviceClient.Factory, ILogger<FilterController>)
  href: api/VPEAR.Server.Services.FilterService.html#VPEAR_Server_Services_FilterService__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Models_Device_System_Guid__VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Models_Filter_System_Guid__VPEAR_Core_Abstractions_IDeviceClient_Factory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_FilterController__
  commentId: M:VPEAR.Server.Services.FilterService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Device,System.Guid},VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Filter,System.Guid},VPEAR.Core.Abstractions.IDeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FilterController})
  name.vb: FilterService(IRepository(Of Device, Guid), IRepository(Of Filter, Guid), IDeviceClient.Factory, ILogger(Of FilterController))
  fullName: VPEAR.Server.Services.FilterService.FilterService(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Models.Device, System.Guid>, VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Models.Filter, System.Guid>, VPEAR.Core.Abstractions.IDeviceClient.Factory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.FilterController>)
  fullName.vb: VPEAR.Server.Services.FilterService.FilterService(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Models.Device, System.Guid), VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Models.Filter, System.Guid), VPEAR.Core.Abstractions.IDeviceClient.Factory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.FilterController))
  nameWithType: FilterService.FilterService(IRepository<Device, Guid>, IRepository<Filter, Guid>, IDeviceClient.Factory, ILogger<FilterController>)
  nameWithType.vb: FilterService.FilterService(IRepository(Of Device, Guid), IRepository(Of Filter, Guid), IDeviceClient.Factory, ILogger(Of FilterController))
- uid: VPEAR.Server.Services.FilterService.#ctor*
  name: FilterService
  href: api/VPEAR.Server.Services.FilterService.html#VPEAR_Server_Services_FilterService__ctor_
  commentId: Overload:VPEAR.Server.Services.FilterService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.FilterService.FilterService
  nameWithType: FilterService.FilterService
- uid: VPEAR.Server.Services.FilterService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Server.Services.FilterService.html#VPEAR_Server_Services_FilterService_GetAsync_System_Guid_
  commentId: M:VPEAR.Server.Services.FilterService.GetAsync(System.Guid)
  fullName: VPEAR.Server.Services.FilterService.GetAsync(System.Guid)
  nameWithType: FilterService.GetAsync(Guid)
- uid: VPEAR.Server.Services.FilterService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Services.FilterService.html#VPEAR_Server_Services_FilterService_GetAsync_
  commentId: Overload:VPEAR.Server.Services.FilterService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.FilterService.GetAsync
  nameWithType: FilterService.GetAsync
- uid: VPEAR.Server.Services.FilterService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFilterRequest)
  name: PutAsync(Guid, PutFilterRequest)
  href: api/VPEAR.Server.Services.FilterService.html#VPEAR_Server_Services_FilterService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutFilterRequest_
  commentId: M:VPEAR.Server.Services.FilterService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFilterRequest)
  fullName: VPEAR.Server.Services.FilterService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutFilterRequest)
  nameWithType: FilterService.PutAsync(Guid, PutFilterRequest)
- uid: VPEAR.Server.Services.FilterService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Server.Services.FilterService.html#VPEAR_Server_Services_FilterService_PutAsync_
  commentId: Overload:VPEAR.Server.Services.FilterService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.FilterService.PutAsync
  nameWithType: FilterService.PutAsync
- uid: VPEAR.Server.Services.FirmwareService
  name: FirmwareService
  href: api/VPEAR.Server.Services.FirmwareService.html
  commentId: T:VPEAR.Server.Services.FirmwareService
  fullName: VPEAR.Server.Services.FirmwareService
  nameWithType: FirmwareService
- uid: VPEAR.Server.Services.FirmwareService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Device,System.Guid},VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Firmware,System.Guid},VPEAR.Core.Abstractions.IDeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FirmwareController})
  name: FirmwareService(IRepository<Device, Guid>, IRepository<Firmware, Guid>, IDeviceClient.Factory, ILogger<FirmwareController>)
  href: api/VPEAR.Server.Services.FirmwareService.html#VPEAR_Server_Services_FirmwareService__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Models_Device_System_Guid__VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Models_Firmware_System_Guid__VPEAR_Core_Abstractions_IDeviceClient_Factory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_FirmwareController__
  commentId: M:VPEAR.Server.Services.FirmwareService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Device,System.Guid},VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Firmware,System.Guid},VPEAR.Core.Abstractions.IDeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.FirmwareController})
  name.vb: FirmwareService(IRepository(Of Device, Guid), IRepository(Of Firmware, Guid), IDeviceClient.Factory, ILogger(Of FirmwareController))
  fullName: VPEAR.Server.Services.FirmwareService.FirmwareService(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Models.Device, System.Guid>, VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Models.Firmware, System.Guid>, VPEAR.Core.Abstractions.IDeviceClient.Factory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.FirmwareController>)
  fullName.vb: VPEAR.Server.Services.FirmwareService.FirmwareService(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Models.Device, System.Guid), VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Models.Firmware, System.Guid), VPEAR.Core.Abstractions.IDeviceClient.Factory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.FirmwareController))
  nameWithType: FirmwareService.FirmwareService(IRepository<Device, Guid>, IRepository<Firmware, Guid>, IDeviceClient.Factory, ILogger<FirmwareController>)
  nameWithType.vb: FirmwareService.FirmwareService(IRepository(Of Device, Guid), IRepository(Of Firmware, Guid), IDeviceClient.Factory, ILogger(Of FirmwareController))
- uid: VPEAR.Server.Services.FirmwareService.#ctor*
  name: FirmwareService
  href: api/VPEAR.Server.Services.FirmwareService.html#VPEAR_Server_Services_FirmwareService__ctor_
  commentId: Overload:VPEAR.Server.Services.FirmwareService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.FirmwareService.FirmwareService
  nameWithType: FirmwareService.FirmwareService
- uid: VPEAR.Server.Services.FirmwareService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Server.Services.FirmwareService.html#VPEAR_Server_Services_FirmwareService_GetAsync_System_Guid_
  commentId: M:VPEAR.Server.Services.FirmwareService.GetAsync(System.Guid)
  fullName: VPEAR.Server.Services.FirmwareService.GetAsync(System.Guid)
  nameWithType: FirmwareService.GetAsync(Guid)
- uid: VPEAR.Server.Services.FirmwareService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Services.FirmwareService.html#VPEAR_Server_Services_FirmwareService_GetAsync_
  commentId: Overload:VPEAR.Server.Services.FirmwareService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.FirmwareService.GetAsync
  nameWithType: FirmwareService.GetAsync
- uid: VPEAR.Server.Services.FirmwareService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFirmwareRequest)
  name: PutAsync(Guid, PutFirmwareRequest)
  href: api/VPEAR.Server.Services.FirmwareService.html#VPEAR_Server_Services_FirmwareService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutFirmwareRequest_
  commentId: M:VPEAR.Server.Services.FirmwareService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutFirmwareRequest)
  fullName: VPEAR.Server.Services.FirmwareService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutFirmwareRequest)
  nameWithType: FirmwareService.PutAsync(Guid, PutFirmwareRequest)
- uid: VPEAR.Server.Services.FirmwareService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Server.Services.FirmwareService.html#VPEAR_Server_Services_FirmwareService_PutAsync_
  commentId: Overload:VPEAR.Server.Services.FirmwareService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.FirmwareService.PutAsync
  nameWithType: FirmwareService.PutAsync
- uid: VPEAR.Server.Services.PowerService
  name: PowerService
  href: api/VPEAR.Server.Services.PowerService.html
  commentId: T:VPEAR.Server.Services.PowerService
  fullName: VPEAR.Server.Services.PowerService
  nameWithType: PowerService
- uid: VPEAR.Server.Services.PowerService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Device,System.Guid},VPEAR.Core.Abstractions.IDeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.PowerController})
  name: PowerService(IRepository<Device, Guid>, IDeviceClient.Factory, ILogger<PowerController>)
  href: api/VPEAR.Server.Services.PowerService.html#VPEAR_Server_Services_PowerService__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Models_Device_System_Guid__VPEAR_Core_Abstractions_IDeviceClient_Factory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_PowerController__
  commentId: M:VPEAR.Server.Services.PowerService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Device,System.Guid},VPEAR.Core.Abstractions.IDeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.PowerController})
  name.vb: PowerService(IRepository(Of Device, Guid), IDeviceClient.Factory, ILogger(Of PowerController))
  fullName: VPEAR.Server.Services.PowerService.PowerService(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Models.Device, System.Guid>, VPEAR.Core.Abstractions.IDeviceClient.Factory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.PowerController>)
  fullName.vb: VPEAR.Server.Services.PowerService.PowerService(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Models.Device, System.Guid), VPEAR.Core.Abstractions.IDeviceClient.Factory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.PowerController))
  nameWithType: PowerService.PowerService(IRepository<Device, Guid>, IDeviceClient.Factory, ILogger<PowerController>)
  nameWithType.vb: PowerService.PowerService(IRepository(Of Device, Guid), IDeviceClient.Factory, ILogger(Of PowerController))
- uid: VPEAR.Server.Services.PowerService.#ctor*
  name: PowerService
  href: api/VPEAR.Server.Services.PowerService.html#VPEAR_Server_Services_PowerService__ctor_
  commentId: Overload:VPEAR.Server.Services.PowerService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.PowerService.PowerService
  nameWithType: PowerService.PowerService
- uid: VPEAR.Server.Services.PowerService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Server.Services.PowerService.html#VPEAR_Server_Services_PowerService_GetAsync_System_Guid_
  commentId: M:VPEAR.Server.Services.PowerService.GetAsync(System.Guid)
  fullName: VPEAR.Server.Services.PowerService.GetAsync(System.Guid)
  nameWithType: PowerService.GetAsync(Guid)
- uid: VPEAR.Server.Services.PowerService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Services.PowerService.html#VPEAR_Server_Services_PowerService_GetAsync_
  commentId: Overload:VPEAR.Server.Services.PowerService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.PowerService.GetAsync
  nameWithType: PowerService.GetAsync
- uid: VPEAR.Server.Services.SensorService
  name: SensorService
  href: api/VPEAR.Server.Services.SensorService.html
  commentId: T:VPEAR.Server.Services.SensorService
  fullName: VPEAR.Server.Services.SensorService
  nameWithType: SensorService
- uid: VPEAR.Server.Services.SensorService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Frame,System.Guid},VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Sensor,System.Guid},Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.SensorController})
  name: SensorService(IRepository<Frame, Guid>, IRepository<Sensor, Guid>, ILogger<SensorController>)
  href: api/VPEAR.Server.Services.SensorService.html#VPEAR_Server_Services_SensorService__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Models_Frame_System_Guid__VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Models_Sensor_System_Guid__Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_SensorController__
  commentId: M:VPEAR.Server.Services.SensorService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Frame,System.Guid},VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Sensor,System.Guid},Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.SensorController})
  name.vb: SensorService(IRepository(Of Frame, Guid), IRepository(Of Sensor, Guid), ILogger(Of SensorController))
  fullName: VPEAR.Server.Services.SensorService.SensorService(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Models.Frame, System.Guid>, VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Models.Sensor, System.Guid>, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.SensorController>)
  fullName.vb: VPEAR.Server.Services.SensorService.SensorService(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Models.Frame, System.Guid), VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Models.Sensor, System.Guid), Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.SensorController))
  nameWithType: SensorService.SensorService(IRepository<Frame, Guid>, IRepository<Sensor, Guid>, ILogger<SensorController>)
  nameWithType.vb: SensorService.SensorService(IRepository(Of Frame, Guid), IRepository(Of Sensor, Guid), ILogger(Of SensorController))
- uid: VPEAR.Server.Services.SensorService.#ctor*
  name: SensorService
  href: api/VPEAR.Server.Services.SensorService.html#VPEAR_Server_Services_SensorService__ctor_
  commentId: Overload:VPEAR.Server.Services.SensorService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.SensorService.SensorService
  nameWithType: SensorService.SensorService
- uid: VPEAR.Server.Services.SensorService.GetFramesAsync(System.Guid,System.Int32,System.Int32)
  name: GetFramesAsync(Guid, Int32, Int32)
  href: api/VPEAR.Server.Services.SensorService.html#VPEAR_Server_Services_SensorService_GetFramesAsync_System_Guid_System_Int32_System_Int32_
  commentId: M:VPEAR.Server.Services.SensorService.GetFramesAsync(System.Guid,System.Int32,System.Int32)
  fullName: VPEAR.Server.Services.SensorService.GetFramesAsync(System.Guid, System.Int32, System.Int32)
  nameWithType: SensorService.GetFramesAsync(Guid, Int32, Int32)
- uid: VPEAR.Server.Services.SensorService.GetFramesAsync*
  name: GetFramesAsync
  href: api/VPEAR.Server.Services.SensorService.html#VPEAR_Server_Services_SensorService_GetFramesAsync_
  commentId: Overload:VPEAR.Server.Services.SensorService.GetFramesAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.SensorService.GetFramesAsync
  nameWithType: SensorService.GetFramesAsync
- uid: VPEAR.Server.Services.SensorService.GetSensorsAsync(System.Guid)
  name: GetSensorsAsync(Guid)
  href: api/VPEAR.Server.Services.SensorService.html#VPEAR_Server_Services_SensorService_GetSensorsAsync_System_Guid_
  commentId: M:VPEAR.Server.Services.SensorService.GetSensorsAsync(System.Guid)
  fullName: VPEAR.Server.Services.SensorService.GetSensorsAsync(System.Guid)
  nameWithType: SensorService.GetSensorsAsync(Guid)
- uid: VPEAR.Server.Services.SensorService.GetSensorsAsync*
  name: GetSensorsAsync
  href: api/VPEAR.Server.Services.SensorService.html#VPEAR_Server_Services_SensorService_GetSensorsAsync_
  commentId: Overload:VPEAR.Server.Services.SensorService.GetSensorsAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.SensorService.GetSensorsAsync
  nameWithType: SensorService.GetSensorsAsync
- uid: VPEAR.Server.Services.UserService
  name: UserService
  href: api/VPEAR.Server.Services.UserService.html
  commentId: T:VPEAR.Server.Services.UserService
  fullName: VPEAR.Server.Services.UserService
  nameWithType: UserService
- uid: VPEAR.Server.Services.UserService.#ctor(Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.UserController})
  name: UserService(RoleManager<IdentityRole>, UserManager<IdentityUser>, ILogger<UserController>)
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService__ctor_Microsoft_AspNetCore_Identity_RoleManager_Microsoft_AspNetCore_Identity_IdentityRole__Microsoft_AspNetCore_Identity_UserManager_Microsoft_AspNetCore_Identity_IdentityUser__Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_UserController__
  commentId: M:VPEAR.Server.Services.UserService.#ctor(Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole},Microsoft.AspNetCore.Identity.UserManager{Microsoft.AspNetCore.Identity.IdentityUser},Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.UserController})
  name.vb: UserService(RoleManager(Of IdentityRole), UserManager(Of IdentityUser), ILogger(Of UserController))
  fullName: VPEAR.Server.Services.UserService.UserService(Microsoft.AspNetCore.Identity.RoleManager<Microsoft.AspNetCore.Identity.IdentityRole>, Microsoft.AspNetCore.Identity.UserManager<Microsoft.AspNetCore.Identity.IdentityUser>, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.UserController>)
  fullName.vb: VPEAR.Server.Services.UserService.UserService(Microsoft.AspNetCore.Identity.RoleManager(Of Microsoft.AspNetCore.Identity.IdentityRole), Microsoft.AspNetCore.Identity.UserManager(Of Microsoft.AspNetCore.Identity.IdentityUser), Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.UserController))
  nameWithType: UserService.UserService(RoleManager<IdentityRole>, UserManager<IdentityUser>, ILogger<UserController>)
  nameWithType.vb: UserService.UserService(RoleManager(Of IdentityRole), UserManager(Of IdentityUser), ILogger(Of UserController))
- uid: VPEAR.Server.Services.UserService.#ctor*
  name: UserService
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService__ctor_
  commentId: Overload:VPEAR.Server.Services.UserService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.UserService.UserService
  nameWithType: UserService.UserService
- uid: VPEAR.Server.Services.UserService.DeleteAsync(System.String)
  name: DeleteAsync(String)
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_DeleteAsync_System_String_
  commentId: M:VPEAR.Server.Services.UserService.DeleteAsync(System.String)
  fullName: VPEAR.Server.Services.UserService.DeleteAsync(System.String)
  nameWithType: UserService.DeleteAsync(String)
- uid: VPEAR.Server.Services.UserService.DeleteAsync*
  name: DeleteAsync
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_DeleteAsync_
  commentId: Overload:VPEAR.Server.Services.UserService.DeleteAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.UserService.DeleteAsync
  nameWithType: UserService.DeleteAsync
- uid: VPEAR.Server.Services.UserService.GetAsync(System.String)
  name: GetAsync(String)
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_GetAsync_System_String_
  commentId: M:VPEAR.Server.Services.UserService.GetAsync(System.String)
  fullName: VPEAR.Server.Services.UserService.GetAsync(System.String)
  nameWithType: UserService.GetAsync(String)
- uid: VPEAR.Server.Services.UserService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_GetAsync_
  commentId: Overload:VPEAR.Server.Services.UserService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.UserService.GetAsync
  nameWithType: UserService.GetAsync
- uid: VPEAR.Server.Services.UserService.PostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  name: PostRegisterAsync(PostRegisterRequest)
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_PostRegisterAsync_VPEAR_Core_Wrappers_PostRegisterRequest_
  commentId: M:VPEAR.Server.Services.UserService.PostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  fullName: VPEAR.Server.Services.UserService.PostRegisterAsync(VPEAR.Core.Wrappers.PostRegisterRequest)
  nameWithType: UserService.PostRegisterAsync(PostRegisterRequest)
- uid: VPEAR.Server.Services.UserService.PostRegisterAsync*
  name: PostRegisterAsync
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_PostRegisterAsync_
  commentId: Overload:VPEAR.Server.Services.UserService.PostRegisterAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.UserService.PostRegisterAsync
  nameWithType: UserService.PostRegisterAsync
- uid: VPEAR.Server.Services.UserService.PutAsync(System.String,VPEAR.Core.Wrappers.PutUserRequest)
  name: PutAsync(String, PutUserRequest)
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_PutAsync_System_String_VPEAR_Core_Wrappers_PutUserRequest_
  commentId: M:VPEAR.Server.Services.UserService.PutAsync(System.String,VPEAR.Core.Wrappers.PutUserRequest)
  fullName: VPEAR.Server.Services.UserService.PutAsync(System.String, VPEAR.Core.Wrappers.PutUserRequest)
  nameWithType: UserService.PutAsync(String, PutUserRequest)
- uid: VPEAR.Server.Services.UserService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_PutAsync_
  commentId: Overload:VPEAR.Server.Services.UserService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.UserService.PutAsync
  nameWithType: UserService.PutAsync
- uid: VPEAR.Server.Services.UserService.PutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  name: PutLoginAsync(PutLoginRequest)
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_PutLoginAsync_VPEAR_Core_Wrappers_PutLoginRequest_
  commentId: M:VPEAR.Server.Services.UserService.PutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  fullName: VPEAR.Server.Services.UserService.PutLoginAsync(VPEAR.Core.Wrappers.PutLoginRequest)
  nameWithType: UserService.PutLoginAsync(PutLoginRequest)
- uid: VPEAR.Server.Services.UserService.PutLoginAsync*
  name: PutLoginAsync
  href: api/VPEAR.Server.Services.UserService.html#VPEAR_Server_Services_UserService_PutLoginAsync_
  commentId: Overload:VPEAR.Server.Services.UserService.PutLoginAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.UserService.PutLoginAsync
  nameWithType: UserService.PutLoginAsync
- uid: VPEAR.Server.Services.WifiService
  name: WifiService
  href: api/VPEAR.Server.Services.WifiService.html
  commentId: T:VPEAR.Server.Services.WifiService
  fullName: VPEAR.Server.Services.WifiService
  nameWithType: WifiService
- uid: VPEAR.Server.Services.WifiService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Device,System.Guid},VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Wifi,System.Guid},VPEAR.Core.Abstractions.IDeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.WifiController})
  name: WifiService(IRepository<Device, Guid>, IRepository<Wifi, Guid>, IDeviceClient.Factory, ILogger<WifiController>)
  href: api/VPEAR.Server.Services.WifiService.html#VPEAR_Server_Services_WifiService__ctor_VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Models_Device_System_Guid__VPEAR_Core_Abstractions_IRepository_VPEAR_Core_Models_Wifi_System_Guid__VPEAR_Core_Abstractions_IDeviceClient_Factory_Microsoft_Extensions_Logging_ILogger_VPEAR_Server_Controllers_WifiController__
  commentId: M:VPEAR.Server.Services.WifiService.#ctor(VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Device,System.Guid},VPEAR.Core.Abstractions.IRepository{VPEAR.Core.Models.Wifi,System.Guid},VPEAR.Core.Abstractions.IDeviceClient.Factory,Microsoft.Extensions.Logging.ILogger{VPEAR.Server.Controllers.WifiController})
  name.vb: WifiService(IRepository(Of Device, Guid), IRepository(Of Wifi, Guid), IDeviceClient.Factory, ILogger(Of WifiController))
  fullName: VPEAR.Server.Services.WifiService.WifiService(VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Models.Device, System.Guid>, VPEAR.Core.Abstractions.IRepository<VPEAR.Core.Models.Wifi, System.Guid>, VPEAR.Core.Abstractions.IDeviceClient.Factory, Microsoft.Extensions.Logging.ILogger<VPEAR.Server.Controllers.WifiController>)
  fullName.vb: VPEAR.Server.Services.WifiService.WifiService(VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Models.Device, System.Guid), VPEAR.Core.Abstractions.IRepository(Of VPEAR.Core.Models.Wifi, System.Guid), VPEAR.Core.Abstractions.IDeviceClient.Factory, Microsoft.Extensions.Logging.ILogger(Of VPEAR.Server.Controllers.WifiController))
  nameWithType: WifiService.WifiService(IRepository<Device, Guid>, IRepository<Wifi, Guid>, IDeviceClient.Factory, ILogger<WifiController>)
  nameWithType.vb: WifiService.WifiService(IRepository(Of Device, Guid), IRepository(Of Wifi, Guid), IDeviceClient.Factory, ILogger(Of WifiController))
- uid: VPEAR.Server.Services.WifiService.#ctor*
  name: WifiService
  href: api/VPEAR.Server.Services.WifiService.html#VPEAR_Server_Services_WifiService__ctor_
  commentId: Overload:VPEAR.Server.Services.WifiService.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Services.WifiService.WifiService
  nameWithType: WifiService.WifiService
- uid: VPEAR.Server.Services.WifiService.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/VPEAR.Server.Services.WifiService.html#VPEAR_Server_Services_WifiService_GetAsync_System_Guid_
  commentId: M:VPEAR.Server.Services.WifiService.GetAsync(System.Guid)
  fullName: VPEAR.Server.Services.WifiService.GetAsync(System.Guid)
  nameWithType: WifiService.GetAsync(Guid)
- uid: VPEAR.Server.Services.WifiService.GetAsync*
  name: GetAsync
  href: api/VPEAR.Server.Services.WifiService.html#VPEAR_Server_Services_WifiService_GetAsync_
  commentId: Overload:VPEAR.Server.Services.WifiService.GetAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.WifiService.GetAsync
  nameWithType: WifiService.GetAsync
- uid: VPEAR.Server.Services.WifiService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutWifiRequest)
  name: PutAsync(Guid, PutWifiRequest)
  href: api/VPEAR.Server.Services.WifiService.html#VPEAR_Server_Services_WifiService_PutAsync_System_Guid_VPEAR_Core_Wrappers_PutWifiRequest_
  commentId: M:VPEAR.Server.Services.WifiService.PutAsync(System.Guid,VPEAR.Core.Wrappers.PutWifiRequest)
  fullName: VPEAR.Server.Services.WifiService.PutAsync(System.Guid, VPEAR.Core.Wrappers.PutWifiRequest)
  nameWithType: WifiService.PutAsync(Guid, PutWifiRequest)
- uid: VPEAR.Server.Services.WifiService.PutAsync*
  name: PutAsync
  href: api/VPEAR.Server.Services.WifiService.html#VPEAR_Server_Services_WifiService_PutAsync_
  commentId: Overload:VPEAR.Server.Services.WifiService.PutAsync
  isSpec: "True"
  fullName: VPEAR.Server.Services.WifiService.PutAsync
  nameWithType: WifiService.PutAsync
- uid: VPEAR.Server.Startup
  name: Startup
  href: api/VPEAR.Server.Startup.html
  commentId: T:VPEAR.Server.Startup
  fullName: VPEAR.Server.Startup
  nameWithType: Startup
- uid: VPEAR.Server.Startup.#ctor
  name: Startup()
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup__ctor
  commentId: M:VPEAR.Server.Startup.#ctor
  fullName: VPEAR.Server.Startup.Startup()
  nameWithType: Startup.Startup()
- uid: VPEAR.Server.Startup.#ctor*
  name: Startup
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup__ctor_
  commentId: Overload:VPEAR.Server.Startup.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Startup.Startup
  nameWithType: Startup.Startup
- uid: VPEAR.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  name: Configure(IApplicationBuilder, IWebHostEnvironment)
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_Configure_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_
  commentId: M:VPEAR.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  fullName: VPEAR.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  nameWithType: Startup.Configure(IApplicationBuilder, IWebHostEnvironment)
- uid: VPEAR.Server.Startup.Configure*
  name: Configure
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_Configure_
  commentId: Overload:VPEAR.Server.Startup.Configure
  isSpec: "True"
  fullName: VPEAR.Server.Startup.Configure
  nameWithType: Startup.Configure
- uid: VPEAR.Server.Startup.ConfigureContainer(Autofac.ContainerBuilder)
  name: ConfigureContainer(ContainerBuilder)
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_ConfigureContainer_Autofac_ContainerBuilder_
  commentId: M:VPEAR.Server.Startup.ConfigureContainer(Autofac.ContainerBuilder)
  fullName: VPEAR.Server.Startup.ConfigureContainer(Autofac.ContainerBuilder)
  nameWithType: Startup.ConfigureContainer(ContainerBuilder)
- uid: VPEAR.Server.Startup.ConfigureContainer*
  name: ConfigureContainer
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_ConfigureContainer_
  commentId: Overload:VPEAR.Server.Startup.ConfigureContainer
  isSpec: "True"
  fullName: VPEAR.Server.Startup.ConfigureContainer
  nameWithType: Startup.ConfigureContainer
- uid: VPEAR.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: ConfigureServices(IServiceCollection)
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_ConfigureServices_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:VPEAR.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: VPEAR.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: Startup.ConfigureServices(IServiceCollection)
- uid: VPEAR.Server.Startup.ConfigureServices*
  name: ConfigureServices
  href: api/VPEAR.Server.Startup.html#VPEAR_Server_Startup_ConfigureServices_
  commentId: Overload:VPEAR.Server.Startup.ConfigureServices
  isSpec: "True"
  fullName: VPEAR.Server.Startup.ConfigureServices
  nameWithType: Startup.ConfigureServices
- uid: VPEAR.Server.ValidatorModule
  name: ValidatorModule
  href: api/VPEAR.Server.ValidatorModule.html
  commentId: T:VPEAR.Server.ValidatorModule
  fullName: VPEAR.Server.ValidatorModule
  nameWithType: ValidatorModule
- uid: VPEAR.Server.ValidatorModule.Load(Autofac.ContainerBuilder)
  name: Load(ContainerBuilder)
  href: api/VPEAR.Server.ValidatorModule.html#VPEAR_Server_ValidatorModule_Load_Autofac_ContainerBuilder_
  commentId: M:VPEAR.Server.ValidatorModule.Load(Autofac.ContainerBuilder)
  fullName: VPEAR.Server.ValidatorModule.Load(Autofac.ContainerBuilder)
  nameWithType: ValidatorModule.Load(ContainerBuilder)
- uid: VPEAR.Server.ValidatorModule.Load*
  name: Load
  href: api/VPEAR.Server.ValidatorModule.html#VPEAR_Server_ValidatorModule_Load_
  commentId: Overload:VPEAR.Server.ValidatorModule.Load
  isSpec: "True"
  fullName: VPEAR.Server.ValidatorModule.Load
  nameWithType: ValidatorModule.Load
- uid: VPEAR.Server.Validators
  name: VPEAR.Server.Validators
  href: api/VPEAR.Server.Validators.html
  commentId: N:VPEAR.Server.Validators
  fullName: VPEAR.Server.Validators
  nameWithType: VPEAR.Server.Validators
- uid: VPEAR.Server.Validators.PostDeviceValidator
  name: PostDeviceValidator
  href: api/VPEAR.Server.Validators.PostDeviceValidator.html
  commentId: T:VPEAR.Server.Validators.PostDeviceValidator
  fullName: VPEAR.Server.Validators.PostDeviceValidator
  nameWithType: PostDeviceValidator
- uid: VPEAR.Server.Validators.PostDeviceValidator.#ctor
  name: PostDeviceValidator()
  href: api/VPEAR.Server.Validators.PostDeviceValidator.html#VPEAR_Server_Validators_PostDeviceValidator__ctor
  commentId: M:VPEAR.Server.Validators.PostDeviceValidator.#ctor
  fullName: VPEAR.Server.Validators.PostDeviceValidator.PostDeviceValidator()
  nameWithType: PostDeviceValidator.PostDeviceValidator()
- uid: VPEAR.Server.Validators.PostDeviceValidator.#ctor*
  name: PostDeviceValidator
  href: api/VPEAR.Server.Validators.PostDeviceValidator.html#VPEAR_Server_Validators_PostDeviceValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PostDeviceValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PostDeviceValidator.PostDeviceValidator
  nameWithType: PostDeviceValidator.PostDeviceValidator
- uid: VPEAR.Server.Validators.PostRegisterValidator
  name: PostRegisterValidator
  href: api/VPEAR.Server.Validators.PostRegisterValidator.html
  commentId: T:VPEAR.Server.Validators.PostRegisterValidator
  fullName: VPEAR.Server.Validators.PostRegisterValidator
  nameWithType: PostRegisterValidator
- uid: VPEAR.Server.Validators.PostRegisterValidator.#ctor
  name: PostRegisterValidator()
  href: api/VPEAR.Server.Validators.PostRegisterValidator.html#VPEAR_Server_Validators_PostRegisterValidator__ctor
  commentId: M:VPEAR.Server.Validators.PostRegisterValidator.#ctor
  fullName: VPEAR.Server.Validators.PostRegisterValidator.PostRegisterValidator()
  nameWithType: PostRegisterValidator.PostRegisterValidator()
- uid: VPEAR.Server.Validators.PostRegisterValidator.#ctor*
  name: PostRegisterValidator
  href: api/VPEAR.Server.Validators.PostRegisterValidator.html#VPEAR_Server_Validators_PostRegisterValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PostRegisterValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PostRegisterValidator.PostRegisterValidator
  nameWithType: PostRegisterValidator.PostRegisterValidator
- uid: VPEAR.Server.Validators.PutDeviceValidator
  name: PutDeviceValidator
  href: api/VPEAR.Server.Validators.PutDeviceValidator.html
  commentId: T:VPEAR.Server.Validators.PutDeviceValidator
  fullName: VPEAR.Server.Validators.PutDeviceValidator
  nameWithType: PutDeviceValidator
- uid: VPEAR.Server.Validators.PutDeviceValidator.#ctor
  name: PutDeviceValidator()
  href: api/VPEAR.Server.Validators.PutDeviceValidator.html#VPEAR_Server_Validators_PutDeviceValidator__ctor
  commentId: M:VPEAR.Server.Validators.PutDeviceValidator.#ctor
  fullName: VPEAR.Server.Validators.PutDeviceValidator.PutDeviceValidator()
  nameWithType: PutDeviceValidator.PutDeviceValidator()
- uid: VPEAR.Server.Validators.PutDeviceValidator.#ctor*
  name: PutDeviceValidator
  href: api/VPEAR.Server.Validators.PutDeviceValidator.html#VPEAR_Server_Validators_PutDeviceValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PutDeviceValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PutDeviceValidator.PutDeviceValidator
  nameWithType: PutDeviceValidator.PutDeviceValidator
- uid: VPEAR.Server.Validators.PutFilterValidator
  name: PutFilterValidator
  href: api/VPEAR.Server.Validators.PutFilterValidator.html
  commentId: T:VPEAR.Server.Validators.PutFilterValidator
  fullName: VPEAR.Server.Validators.PutFilterValidator
  nameWithType: PutFilterValidator
- uid: VPEAR.Server.Validators.PutFilterValidator.#ctor
  name: PutFilterValidator()
  href: api/VPEAR.Server.Validators.PutFilterValidator.html#VPEAR_Server_Validators_PutFilterValidator__ctor
  commentId: M:VPEAR.Server.Validators.PutFilterValidator.#ctor
  fullName: VPEAR.Server.Validators.PutFilterValidator.PutFilterValidator()
  nameWithType: PutFilterValidator.PutFilterValidator()
- uid: VPEAR.Server.Validators.PutFilterValidator.#ctor*
  name: PutFilterValidator
  href: api/VPEAR.Server.Validators.PutFilterValidator.html#VPEAR_Server_Validators_PutFilterValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PutFilterValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PutFilterValidator.PutFilterValidator
  nameWithType: PutFilterValidator.PutFilterValidator
- uid: VPEAR.Server.Validators.PutFirmwareValidator
  name: PutFirmwareValidator
  href: api/VPEAR.Server.Validators.PutFirmwareValidator.html
  commentId: T:VPEAR.Server.Validators.PutFirmwareValidator
  fullName: VPEAR.Server.Validators.PutFirmwareValidator
  nameWithType: PutFirmwareValidator
- uid: VPEAR.Server.Validators.PutFirmwareValidator.#ctor
  name: PutFirmwareValidator()
  href: api/VPEAR.Server.Validators.PutFirmwareValidator.html#VPEAR_Server_Validators_PutFirmwareValidator__ctor
  commentId: M:VPEAR.Server.Validators.PutFirmwareValidator.#ctor
  fullName: VPEAR.Server.Validators.PutFirmwareValidator.PutFirmwareValidator()
  nameWithType: PutFirmwareValidator.PutFirmwareValidator()
- uid: VPEAR.Server.Validators.PutFirmwareValidator.#ctor*
  name: PutFirmwareValidator
  href: api/VPEAR.Server.Validators.PutFirmwareValidator.html#VPEAR_Server_Validators_PutFirmwareValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PutFirmwareValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PutFirmwareValidator.PutFirmwareValidator
  nameWithType: PutFirmwareValidator.PutFirmwareValidator
- uid: VPEAR.Server.Validators.PutLoginValidator
  name: PutLoginValidator
  href: api/VPEAR.Server.Validators.PutLoginValidator.html
  commentId: T:VPEAR.Server.Validators.PutLoginValidator
  fullName: VPEAR.Server.Validators.PutLoginValidator
  nameWithType: PutLoginValidator
- uid: VPEAR.Server.Validators.PutLoginValidator.#ctor
  name: PutLoginValidator()
  href: api/VPEAR.Server.Validators.PutLoginValidator.html#VPEAR_Server_Validators_PutLoginValidator__ctor
  commentId: M:VPEAR.Server.Validators.PutLoginValidator.#ctor
  fullName: VPEAR.Server.Validators.PutLoginValidator.PutLoginValidator()
  nameWithType: PutLoginValidator.PutLoginValidator()
- uid: VPEAR.Server.Validators.PutLoginValidator.#ctor*
  name: PutLoginValidator
  href: api/VPEAR.Server.Validators.PutLoginValidator.html#VPEAR_Server_Validators_PutLoginValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PutLoginValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PutLoginValidator.PutLoginValidator
  nameWithType: PutLoginValidator.PutLoginValidator
- uid: VPEAR.Server.Validators.PutUserValidator
  name: PutUserValidator
  href: api/VPEAR.Server.Validators.PutUserValidator.html
  commentId: T:VPEAR.Server.Validators.PutUserValidator
  fullName: VPEAR.Server.Validators.PutUserValidator
  nameWithType: PutUserValidator
- uid: VPEAR.Server.Validators.PutUserValidator.#ctor
  name: PutUserValidator()
  href: api/VPEAR.Server.Validators.PutUserValidator.html#VPEAR_Server_Validators_PutUserValidator__ctor
  commentId: M:VPEAR.Server.Validators.PutUserValidator.#ctor
  fullName: VPEAR.Server.Validators.PutUserValidator.PutUserValidator()
  nameWithType: PutUserValidator.PutUserValidator()
- uid: VPEAR.Server.Validators.PutUserValidator.#ctor*
  name: PutUserValidator
  href: api/VPEAR.Server.Validators.PutUserValidator.html#VPEAR_Server_Validators_PutUserValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PutUserValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PutUserValidator.PutUserValidator
  nameWithType: PutUserValidator.PutUserValidator
- uid: VPEAR.Server.Validators.PutWifiValidator
  name: PutWifiValidator
  href: api/VPEAR.Server.Validators.PutWifiValidator.html
  commentId: T:VPEAR.Server.Validators.PutWifiValidator
  fullName: VPEAR.Server.Validators.PutWifiValidator
  nameWithType: PutWifiValidator
- uid: VPEAR.Server.Validators.PutWifiValidator.#ctor
  name: PutWifiValidator()
  href: api/VPEAR.Server.Validators.PutWifiValidator.html#VPEAR_Server_Validators_PutWifiValidator__ctor
  commentId: M:VPEAR.Server.Validators.PutWifiValidator.#ctor
  fullName: VPEAR.Server.Validators.PutWifiValidator.PutWifiValidator()
  nameWithType: PutWifiValidator.PutWifiValidator()
- uid: VPEAR.Server.Validators.PutWifiValidator.#ctor*
  name: PutWifiValidator
  href: api/VPEAR.Server.Validators.PutWifiValidator.html#VPEAR_Server_Validators_PutWifiValidator__ctor_
  commentId: Overload:VPEAR.Server.Validators.PutWifiValidator.#ctor
  isSpec: "True"
  fullName: VPEAR.Server.Validators.PutWifiValidator.PutWifiValidator
  nameWithType: PutWifiValidator.PutWifiValidator
